/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../core/has","../core/Logger","../core/mathUtils","../core/libs/gl-matrix-2/math/mat4","./vec32","../core/libs/gl-matrix-2/factories/vec3f64","./vec42","../core/libs/gl-matrix-2/factories/vec4f64","../core/libs/gl-matrix-2/math/common","../geometry/support/Axis","../geometry/support/ray","../geometry/support/vector","../geometry/support/vectorStacks"],(function(t,e,n,r,o,s,i,c,u,a,l,f,d,g){"use strict";const h=p();function p(){return u.create()}const m=c.equals,y=c.equals;function x(t,e){return c.copy(e,t)}function A(t,e){return u.fromValues(t[0],t[1],t[2],e)}function S(t){return t}function v(t){t[0]=t[1]=t[2]=t[3]=0}function b(t,e){return t[0]=t[1]=t[2]=0,t[3]=e,t}function M(t){return t[3]}function R(t){return t}function P(t,e,n,r){return u.fromValues(t,e,n,r)}function q(t,e,n){return t!==n&&(n[0]=t[0],n[1]=t[1],n[2]=t[2]),n[3]=t[3]+e,n}function C(t,e,r){return n.getLogger("esri.geometry.support.sphere").error("sphere.setExtent is not yet supported"),t!==r&&x(t,r),r}function T(t,e,n){if(null==e)return!1;if(!j(t,e,L))return!1;let{t0:r,t1:o}=L;if((r<0||o<r&&o>0)&&(r=o),r<0)return!1;if(n){const{origin:t,direction:o}=e;n[0]=t[0]+o[0]*r,n[1]=t[1]+o[1]*r,n[2]=t[2]+o[2]*r}return!0}function E(t,e,n){const r=f.fromPoints(e,n);if(!j(t,r,L))return[];const{origin:o,direction:c}=r,{t0:u,t1:l}=L,d=e=>{const n=i.create();return s.scaleAndAdd(n,o,c,e),N(t,n,n)};return Math.abs(u-l)<a.getEpsilon()?[d(u)]:[d(u),d(l)]}const L={t0:0,t1:0};function j(t,e,n){const{origin:r,direction:o}=e,s=O;s[0]=r[0]-t[0],s[1]=r[1]-t[1],s[2]=r[2]-t[2];const i=o[0]*o[0]+o[1]*o[1]+o[2]*o[2];if(0===i)return!1;const c=2*(o[0]*s[0]+o[1]*s[1]+o[2]*s[2]),u=c*c-4*i*(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]-t[3]*t[3]);if(u<0)return!1;const a=Math.sqrt(u);return n.t0=(-c-a)/(2*i),n.t1=(-c+a)/(2*i),!0}const O=i.create();function V(t,e){return T(t,e,null)}function _(t,e,n){if(T(t,e,n))return n;const r=w(t,e,g.sv3d.get());return s.add(n,e.origin,s.scale(g.sv3d.get(),e.direction,s.distance(e.origin,r)/s.length(e.direction))),n}function w(t,e,n){const r=g.sv3d.get(),i=g.sm4d.get();s.cross(r,e.origin,e.direction);const c=M(t);s.cross(n,r,e.origin),s.scale(n,n,1/s.length(n)*c);const u=k(t,e.origin),a=d.angle(e.origin,n);return o.fromRotation(i,a+u,r),s.transformMat4(n,n,i),n}function z(t,e,n){return T(t,e,n)?n:(f.closestPoint(e,R(t),n),N(t,n,n))}function N(t,e,n){const r=s.subtract(g.sv3d.get(),e,R(t)),o=s.scale(g.sv3d.get(),r,t[3]/s.length(r));return s.add(n,o,R(t))}function Z(t,e){const n=s.subtract(g.sv3d.get(),e,R(t)),r=s.squaredLength(n),o=t[3]*t[3];return Math.sqrt(Math.abs(r-o))}function k(t,e){const n=s.subtract(g.sv3d.get(),e,R(t)),o=s.length(n),i=M(t),c=i+Math.abs(i-o);return r.acosClamped(i/c)}const D=i.create();function U(t,e,n,o){const i=s.subtract(D,e,R(t));switch(n){case l.Axis.X:{const t=r.cartesianToSpherical(i,D)[2];return s.set(o,-Math.sin(t),Math.cos(t),0)}case l.Axis.Y:{const t=r.cartesianToSpherical(i,D),e=t[1],n=t[2],c=Math.sin(e);return s.set(o,-c*Math.cos(n),-c*Math.sin(n),Math.cos(e))}case l.Axis.Z:return s.normalize(o,i);default:return}}function X(t,e){const n=s.subtract(G,e,R(t));return s.length(n)-t[3]}function Y(t,e,n,r){const o=X(t,e),i=U(t,e,l.Axis.Z,G),c=s.scale(G,i,n-o);return s.add(r,e,c)}function B(t,e){const n=s.squaredDistance(R(t),e),r=M(t);return n<=r*r}function F(t,e,n=u.create()){const r=s.distance(R(t),R(e)),o=t[3],i=e[3];return r+i<o?(c.copy(n,t),n):r+o<i?(c.copy(n,e),n):(s.lerp(n,R(t),R(e),(r+i-o)/(2*r)),n[3]=(r+o+i)/2,n)}const G=i.create(),H=p(),I=Object.freeze(Object.defineProperty({__proto__:null,NullSphere:h,altitudeAt:X,angleToSilhouette:k,axisAt:U,clear:v,closestPoint:z,closestPointOnSilhouette:w,containsPoint:B,copy:x,create:p,distanceToSilhouette:Z,elevate:q,equals:y,exactEquals:m,fromCenterAndRadius:A,fromRadius:b,fromValues:P,getCenter:R,getRadius:M,intersectLine:E,intersectRay:T,intersectRayClosestSilhouette:_,intersectsRay:V,projectPoint:N,setAltitudeAt:Y,setExtent:C,tmpSphere:H,union:F,wrap:S},Symbol.toStringTag,{value:"Module"}));t.NullSphere=h,t.altitudeAt=X,t.angleToSilhouette=k,t.axisAt=U,t.clear=v,t.closestPoint=z,t.closestPointOnSilhouette=w,t.containsPoint=B,t.copy=x,t.create=p,t.distanceToSilhouette=Z,t.elevate=q,t.equals=y,t.exactEquals=m,t.fromCenterAndRadius=A,t.fromRadius=b,t.fromValues=P,t.getCenter=R,t.getRadius=M,t.intersectLine=E,t.intersectRay=T,t.intersectRayClosestSilhouette=_,t.intersectsRay=V,t.projectPoint=N,t.setAltitudeAt=Y,t.setExtent=C,t.sphere=I,t.tmpSphere=H,t.union=F,t.wrap=S}));
