/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../core/Error","../../layers/support/fieldUtils","../../renderers/support/heatmapUtils","./support/utils","../support/utils","../support/adapters/support/layerUtils"],(function(e,a,r,t,i,s){"use strict";const l=a.numericTypes;async function n(a){if(!a?.layer||!a.view)throw new e("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const n=[s.LayerType.CSVLayer,s.LayerType.FeatureLayer,s.LayerType.GeoJSONLayer,s.LayerType.OGCFeatureLayer,s.LayerType.OrientedImageryLayer,s.LayerType.WFSLayer],{layer:y,...p}=a,u=s.createLayerAdapter(y,n);if(!u)throw new e("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+s.getLayerTypeLabels(n).join(", "));const d={layerAdapter:u,...p};d.radius=null==d.radius?null==d.blurRadius?18:r.gaussianBlurRadiusPxToKernelDensityRadiusPt(d.blurRadius):d.radius;const o=null!=d.signal?{signal:d.signal}:null;await u.load(o);const c=d.field,L=c?u.getField(c):null,f=await i.getFieldsList({field:c}),m=t.verifyBasicFieldValidity(u,f,"heatmap-statistics:invalid-parameters");if(m)throw m;if(L){const e=t.verifyFieldType(u,L,"heatmap-statistics:invalid-parameters",l);if(e)throw e}return d}async function y(e){const{layerAdapter:a,...r}=await n(e);return a.heatmapStatistics(r)}return y}));
