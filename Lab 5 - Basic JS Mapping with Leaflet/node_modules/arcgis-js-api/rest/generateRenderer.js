/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../request","../renderers/support/jsonUtils","./query/executeQuery","./utils","../kernel","../core/urlUtils","./query/support/AttachmentInfo","./support/AttachmentQuery","../geometry/Extent","../geometry/Geometry","../geometry/Multipoint","../geometry/Point","../geometry/Polygon","../geometry/Polyline","../config","../core/Error","../core/Logger","../geometry/support/normalizeUtilsCommon","../geometry/support/spatialReferenceUtils","../core/RandomLCG","../core/has","../geometry/SpatialReference","../geometry/support/Ellipsoid","../geometry","../core/pbf","../core/unitUtils","../geometry/ellipsoidUtils","./support/Query","./support/FeatureSet","../geometry/support/aaBoundingBox","../core/mathUtils","./support/RelationshipQuery","./support/TopFeaturesQuery","./support/StatisticDefinition"],(function(e,t,r,o,n,i,l,a,s,u,c,p,f,m,y,g,d,h,S,V,b,x,k,R,U,O,q,v,B,F,Q,T,D,J,N){"use strict";async function P(e,r,o,i){const l=n.parseUrl(e),{source:a,checkValueRange:s}=r,{classificationDefinition:u}=o,c={...o.toJSON(),f:"json"};let p=null;if(p="class-breaks-definition"===u?.type?u.classificationField:u?.attributeField,a){const e={source:a?.toJSON()};c.layer=JSON.stringify(e)}c.classificationDef&&(c.classificationDef=JSON.stringify(c.classificationDef));let f={query:c};i&&(f={...i,...f});const m={url:l.path,field:p,checkValueRange:s},y=l.path+"/generateRenderer";return t(y,f).then((e=>w(m,e)))}function w(e,t){const{field:r,checkValueRange:n,url:i}=e,l=t?.data;if(!l)return;if(!n){const e=I(l);return Promise.resolve(e)}const a=new N({statisticType:"min",onStatisticField:r}),s=new N({statisticType:"max",onStatisticField:r}),u=new B({outStatistics:[a,s]});return o.executeQuery(i,u).then((e=>{const t=e.features[0].attributes;let r=null,o=null;for(const n in t)0===n.toLowerCase().indexOf("min")?r=t[n]:o=t[n];return I(l,r,o)}))}function I(e,t,o){if("classBreaks"===e.type){const n=r.fromJSON(e);return{classBreaks:n.classBreakInfos.map(((e,r)=>(0===r&&null!=t&&(e.minValue=t),r===n.classBreakInfos.length-1&&null!=o&&(e.maxValue=o),{minValue:e.minValue,maxValue:e.maxValue,label:e.label}))),normalizationTotal:n.normalizationTotal}}const{uniqueValueInfos:n}=e;return{uniqueValues:n?.map(((e,r)=>(0===r&&null!=t&&(e.value=t),r===n.length-1&&null!=o&&(e.value=o),{count:e.count,value:e.value,label:e.label})))??[]}}e.generateRenderer=P,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
