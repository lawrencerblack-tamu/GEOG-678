/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../geometry","../../request","../../core/Error","../../core/iteratorUtils","../../core/urlUtils","../../geometry/projection","../../geometry/support/spatialReferenceUtils","../../geometry/support/typeUtils","../graphics/sources/geojson/geojson","./xmlUtils","../support/arcgisLayerUrl","../support/Field","../support/fieldUtils","../../geometry/SpatialReference","../../geometry/Extent"],(function(e,t,r,n,a,i,o,s,u,p,l,c,y,d,f,m){"use strict";const g="xlink:href",w="2.0.0",b="__esri_wfs_id__",T="wfs-layer:getWFSLayerTypeInfo-error",F="wfs-layer:empty-service",h="wfs-layer:feature-type-not-found",S="wfs-layer:geojson-not-supported",x="wfs-layer:kvp-encoding-not-supported",C="wfs-layer:malformed-json",R="wfs-layer:unknown-geometry-type",E="wfs-layer:unknown-field-type",P="wfs-layer:unsupported-spatial-reference",k="wfs-layer:unsupported-wfs-version";async function A(e,t){const n=G((await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:w,...t?.customParameters},signal:t?.signal})).data);return M(e,n),n}function G(e){const t=K(e);Z(t),ee(t);const r=t.firstElementChild,n=a.cache(D(r));return{operations:N(r),get featureTypes(){return Array.from(n())},readFeatureTypes:n}}const L=["json","application/json","geojson","application/json; subtype=geojson","application/geo+json"];function v(e){for(const t of L){const r=e.findIndex((e=>e.toLowerCase()===t));if(r>=0)return e[r]}return null}function N(e){let t=!1;const r={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},a=[],i=[];if(l.visitXML(e,{OperationsMetadata:{Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:({textContent:e})=>{e&&a.push(e)}}}},Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{r.GetCapabilities.url=e.getAttribute(g)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{r.DescribeFeatureType.url=e.getAttribute(g)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{r.GetFeature.url=e.getAttribute(g)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:({textContent:e})=>{e&&i.push(e)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{r.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),r.GetFeature.outputFormat=v(i)??v(a),!t)throw new n(x,"WFS service doesn't support key/value pair (KVP) encoding");if(null==r.GetFeature.outputFormat)throw new n(S,"WFS service doesn't support GeoJSON output format");return r}function M(e,t){i.isHTTPSProtocol(e)&&(i.hasSameOrigin(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=i.toHTTPS(t.operations.DescribeFeatureType.url)),i.hasSameOrigin(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=i.toHTTPS(t.operations.GetFeature.url)))}function U(e){const t=parseInt(e.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(t))return t}function D(e){return l.iterateXML(e,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},r=new Set;return l.visitXML(e,{Name:e=>{const{name:r,prefix:n}=B(e.textContent);t.typeName=`${n}:${r}`,t.name=r,t.namespacePrefix=n,t.namespaceUri=e.lookupNamespaceURI(n)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=j(e)},DefaultCRS:e=>{const n=U(e);n&&(t.defaultSpatialReference=n,r.add(n))},OtherCRS:e=>{const t=U(e);t&&r.add(t)}}),t.title||(t.title=t.name),r.add(4326),t.supportedSpatialReferences.push(...r),t}}})}function j(e){let t,r,n,a;for(const i of e.children)switch(i.localName){case"LowerCorner":[t,r]=i.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[n,a]=i.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:n,ymax:a,spatialReference:s.wgs84}}function I(e,t,r){return a.find(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function O(e,t,r,n={}){const{featureType:a,extent:i}=await X(e,t,r,n),{spatialReference:o}=te(e.operations.GetFeature.url,a,n.spatialReference),{fields:s,geometryType:u,swapXY:p,objectIdField:l,geometryField:c}=await V(e,a,o,n);return{url:e.operations.GetCapabilities.url,name:a.name,namespaceUri:a.namespaceUri,fields:s,geometryField:c,geometryType:u,objectIdField:l,spatialReference:n.spatialReference??new f({wkid:a.defaultSpatialReference}),extent:i,swapXY:p,wfsCapabilities:e,customParameters:n.customParameters}}async function X(e,t,r,a={}){const i=e.readFeatureTypes(),u=t?I(i,t,r):i.next().value,{spatialReference:p=new f({wkid:u?.defaultSpatialReference})}=a;if(null==u)throw t?new n(h,`The type '${t}' could not be found in the service`):new n(F,"The service is empty");let l=new m({...u.extent,spatialReference:f.WGS84});if(!s.equals(l.spatialReference,p))try{await o.initializeProjection(l.spatialReference,p,void 0,a),l=o.project(l,p)}catch{throw new n(P,"Projection not supported")}return{extent:l,spatialReference:p,featureType:u}}async function V(e,t,r,a={}){const{typeName:i}=t,[o,s]=await Promise.allSettled([Y(e.operations.DescribeFeatureType.url,i,a),W(e,i,r,a)]),u=e=>new n(T,`An error occurred while getting info about the feature type '${i}'`,{error:e});if("rejected"===o.status)throw u(o.reason);if("rejected"===s.status)throw u(s.reason);const{fields:p,errors:l}=o.value??{},c=o.value?.geometryType||s.value?.geometryType,y=s.value?.swapXY??!1;if(null==c)throw new n(R,`The geometry type could not be determined for type '${i}`,{typeName:i,geometryType:c,fields:p,errors:l});return{...$(p??[]),geometryType:c,swapXY:y}}function $(e){const t=e.find((e=>"geometry"===e.type));let r=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),r||(r=new y({name:b,type:"oid",alias:b}),e.unshift(r)),{geometryField:t?.name??null,objectIdField:r.name,fields:e}}async function W(e,t,n,a={}){let i,o=!1;const[s,l]=await Promise.all([_(e.operations.GetFeature.url,t,n,e.operations.GetFeature.outputFormat,{...a,count:1}),r(e.operations.GetFeature.url,{responseType:"text",query:Q(t,n,void 0,{...a,count:1}),signal:a?.signal})]),c="FeatureCollection"===s.type&&s.features[0]?.geometry;if(c){let e;switch(i=u.featureGeometryTypeKebabDictionary.fromJSON(p.getGeometryType(c.type)),c.type){case"Point":e=c.coordinates;break;case"LineString":case"MultiPoint":e=c.coordinates[0];break;case"MultiLineString":case"Polygon":e=c.coordinates[0][0];break;case"MultiPolygon":e=c.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(l.data);if(t){const r=e[0].toFixed(3),n=e[1].toFixed(3),a=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&n===a&&(o=!0)}}return{geometryType:i,swapXY:o}}async function Y(e,t,n){return q(t,(await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:w,TYPENAME:t,TYPENAMES:t,...n?.customParameters},signal:n?.signal})).data)}function q(e,t){const{name:r}=B(e),i=K(t);ee(i);const o=a.find(l.iterateXML(i.firstElementChild,{element:e=>e}),(e=>e.getAttribute("name")===r));if(null!=o){const e=o.getAttribute("type"),t=e?a.find(l.iterateXML(i.firstElementChild,{complexType:e=>e}),(t=>t.getAttribute("name")===B(e).name)):a.find(l.iterateXML(o,{complexType:e=>e}),(()=>!0));if(t)return H(t)}throw new n(h,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(i)})}const z=new Set(["objectid","fid"]);function H(e){const t=[],r=[];let a;const i=l.iterateXML(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const o of i){const i=o.getAttribute("name");if(!i)continue;let s,u;if(o.hasAttribute("type")?s=B(o.getAttribute("type")).name:l.visitXML(o,{simpleType:{restriction:e=>(s=B(e.getAttribute("base")).name,{maxLength:e=>{u=+e.getAttribute("value")}})}}),!s)continue;const p="true"===o.getAttribute("nillable");let c=!1;switch(s.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":r.push(new y({name:i,alias:i,type:"integer",nullable:p,length:d.getFieldDefaultLength("integer")}));break;case"float":case"double":case"decimal":r.push(new y({name:i,alias:i,type:"double",nullable:p,length:d.getFieldDefaultLength("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":r.push(new y({name:i,alias:i,type:"string",nullable:p,length:u??d.getFieldDefaultLength("string")}));break;case"datetime":case"date":r.push(new y({name:i,alias:i,type:"date",nullable:p,length:u??d.getFieldDefaultLength("date")}));break;case"pointpropertytype":a="point",c=!0;break;case"multipointpropertytype":a="multipoint",c=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":a="polyline",c=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":a="polygon",c=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":c=!0,t.push(new n(R,`geometry type '${s}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:t.push(new n(E,`Unknown field type '${s}'`,{type:(new XMLSerializer).serializeToString(e)}))}c&&r.push(new y({name:i,alias:i,type:"geometry",nullable:p}))}for(const n of r)if("integer"===n.type&&!n.nullable&&z.has(n.name.toLowerCase())){n.type="oid";break}return{geometryType:a,fields:r,errors:t}}async function _(e,t,a,i,o){let{data:s}=await r(e,{responseType:"text",query:Q(t,a,i,o),signal:o?.signal});s=s.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(s)}catch(u){throw new n(C,"Error while parsing the response",{response:s,error:u})}}function Q(e,t,r,n){const a="number"==typeof t?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:w,TYPENAMES:e,OUTPUTFORMAT:r,SRSNAME:"EPSG:"+a,STARTINDEX:n?.startIndex,COUNT:n?.count,...n?.customParameters}}async function J(e,t,n){const a=await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:w,TYPENAMES:t,RESULTTYPE:"hits",...n?.customParameters},signal:n?.signal}),i=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(a.data);if(i?.groups)return+i.groups.numberMatched}function K(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function B(e){const[t,r]=e.split(":");return{prefix:r?t:"",name:r??t}}function Z(e){const t=e.firstElementChild?.getAttribute("version");if(t&&t!==w)throw new n(k,`Unsupported WFS version ${t}. Supported version: ${w}`)}function ee(e){let t="",r="";if(l.visitXML(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{r=e.textContent}})}),t)throw new n(`wfs-layer:${t}`,r)}function te(e,t,r){const n={wkid:t.defaultSpatialReference},a=null!=r?.wkid?{wkid:r.wkid}:n;return{spatialReference:a,getFeatureSpatialReference:c.isArcGISUrl(e)||a.wkid&&t.supportedSpatialReferences.includes(a.wkid)?{wkid:a.wkid}:{wkid:t.defaultSpatialReference}}}e.describeFeatureType=Y,e.findFeatureType=I,e.getCapabilities=A,e.getFeature=_,e.getFeatureCount=J,e.getFeatureTypeInfo=X,e.getGetFeatureSpatialReference=te,e.getWFSLayerInfo=O,e.parseDescribeFeatureTypeResponse=q,e.parseGetCapabilitiesResponse=G,e.prepareWFSLayerFields=$,e.wfsOidFieldName=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
