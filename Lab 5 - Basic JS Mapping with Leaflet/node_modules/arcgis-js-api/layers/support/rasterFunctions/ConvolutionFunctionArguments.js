/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/lang","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","../rasterFunctionConstants","./BaseFunctionArguments","./convolutionUtils"],(function(e,o,t,r,s,n,c,i,l){"use strict";var p;let u=p=class extends i{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(e){this._set("convolutionType",e);const o=l.convolutionKernels.get(e);if(!o||e===c.convolutionKernel.userDefined||e===c.convolutionKernel.none)return;const t=Math.sqrt(o.length);this._set("kernel",o),this._set("cols",t),this._set("rows",t)}clone(){return new p({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:o.clone(this.raster)})}};e.__decorate([t.property({json:{type:Number,write:!0}})],u.prototype,"rows",void 0),e.__decorate([t.property({json:{type:Number,write:!0}})],u.prototype,"cols",void 0),e.__decorate([t.property({json:{name:"type",type:Number,write:!0}})],u.prototype,"convolutionType",null),e.__decorate([t.property({json:{type:[Number],write:!0}})],u.prototype,"kernel",void 0),u=p=e.__decorate([n.subclass("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],u);return u}));
