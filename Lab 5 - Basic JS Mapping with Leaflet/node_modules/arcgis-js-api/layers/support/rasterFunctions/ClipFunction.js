/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","./BaseRasterFunction","./ClipFunctionArguments"],(function(e,t,r,s,o,n,p,i){"use strict";let c=class extends p{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(e){return e.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:e,clippingType:t}=this.functionArguments;return{clippingGeometry:e.toJSON(),clippingType:t}}};e.__decorate([t.property({json:{write:!0,name:"rasterFunction"}})],c.prototype,"functionName",void 0),e.__decorate([t.property({type:i,json:{write:!0,name:"rasterFunctionArguments"}})],c.prototype,"functionArguments",void 0),e.__decorate([t.property()],c.prototype,"rasterArgumentNames",void 0),e.__decorate([t.property()],c.prototype,"isNoopProcess",void 0),c=e.__decorate([n.subclass("esri.layers.support.rasterFunctions.ClipFunction")],c);return c}));
