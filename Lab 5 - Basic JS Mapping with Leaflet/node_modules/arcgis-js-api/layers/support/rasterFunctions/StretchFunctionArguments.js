/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/jsonMap","../../../core/lang","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/accessorSupport/decorators/enumeration","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/decorators/writer","./BaseFunctionArguments"],(function(t,e,r,o,s,a,i,n,p,c){"use strict";var m;const u=new e.JSONMap({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let d=m=class extends c{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,r){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[r]=t)}clone(){return new m({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:r.clone(this.statistics),gamma:r.clone(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:r.clone(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};t.__decorate([o.property({type:Boolean,json:{write:!0}})],d.prototype,"computeGamma",void 0),t.__decorate([o.property({type:Boolean,json:{name:"dra",write:!0}})],d.prototype,"dynamicRangeAdjustment",void 0),t.__decorate([o.property({type:[Number],json:{write:!0}})],d.prototype,"gamma",void 0),t.__decorate([o.property()],d.prototype,"histograms",void 0),t.__decorate([o.property({type:Number,json:{write:!0}})],d.prototype,"maxPercent",void 0),t.__decorate([o.property({type:Number,json:{write:!0}})],d.prototype,"minPercent",void 0),t.__decorate([o.property({type:Number,json:{write:!0}})],d.prototype,"numberOfStandardDeviations",void 0),t.__decorate([o.property({type:Number,json:{name:"max",write:!0}})],d.prototype,"outputMax",void 0),t.__decorate([o.property({type:Number,json:{name:"min",write:!0}})],d.prototype,"outputMin",void 0),t.__decorate([o.property({type:Number,json:{write:!0}})],d.prototype,"sigmoidStrengthLevel",void 0),t.__decorate([o.property({json:{type:[[Number]],write:!0}})],d.prototype,"statistics",void 0),t.__decorate([p.writer("statistics")],d.prototype,"writeStatistics",null),t.__decorate([i.enumeration(u)],d.prototype,"stretchType",void 0),t.__decorate([o.property({type:Boolean,json:{write:!0}})],d.prototype,"useGamma",void 0),d=m=t.__decorate([n.subclass("esri.layers.support.rasterFunctions.StretchFunctionArguments")],d);return d}));
