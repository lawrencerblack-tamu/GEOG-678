/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/promiseUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../DimensionalDefinition","../RasterInfo","./BaseRaster","./multidimensionalUtils","../rasterFunctions/pixelUtils","../rasterFunctions/stretchUtils","../../../geometry/Extent","../../../geometry/SpatialReference"],(function(e,t,s,i,a,r,o,l,n,c,m,u,p,h,d,f,g){"use strict";let y=class extends u{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}async open(e){await this.init();const t=this.source,{pixelBlocks:s,attributeTable:i,statistics:a,histograms:r,name:o,nativeExtent:l,transform:n}=t,c=s[0],{width:u,height:p,pixelType:h}=c,d=t.extent??new f({xmin:-.5,ymin:.5,xmax:u-.5,ymax:p-.5,spatialReference:new g({wkid:3857})}),y=t.isPseudoSpatialReference??!t.extent,x={x:d.width/u,y:d.height/p},b={...t.keyProperties};i&&(b.DataType="Thematic");const v=new m({width:u,height:p,pixelType:h,extent:d,nativeExtent:l,attributeTable:i,transform:n,pixelSize:x,spatialReference:d.spatialReference,bandCount:c.pixels.length,keyProperties:b,multidimensionalInfo:t.multidimensionalInfo,statistics:a,isPseudoSpatialReference:y,histograms:r});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(v),this.createRemoteDatasetStorageInfo(v,512,512),this._set("rasterInfo",v),this.updateTileInfo(),v.multidimensionalInfo?await this._buildMDimStats(t.pixelBlocks,v.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},e),v.multidimensionalInfo||(this.source=null),this.datasetName=o}fetchRawTile(e,t,s,i={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[r,o]=a.storageInfo.tileInfo.size,{sliceId:l}=i,{pixelBlocks:n}=this.source,c={pixelBlock:null==l?n[0]:n[l],useBilinear:"thematic"!==a.dataType,tileSize:{width:r,height:o},level:e,row:t,col:s},m=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,i):h.clipTile(c);return Promise.resolve(m)}const a=this._pixelBlockTiles.get(`${e}/${t}/${s}`);return Promise.resolve(a)}async _buildInMemoryRaster(e,t,a){const{rasterInfo:r}=this,o=r.storageInfo.maximumPyramidLevel??0,l="thematic"!==r.dataType,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:o,useBilinear:l},a):Promise.resolve(h.split(e,t,o,l)),c=null!=r.statistics,m=null!=r.histograms,u=this.ioConfig.skipStatistics||c?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},a):Promise.resolve(d.estimateStatisticsHistograms(e)),p=await i.eachAlways([n,u]);if(!p[0].value&&p[1].value)throw new s("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=p[0].value,c||(r.statistics=p[1].value?.statistics),m||(r.histograms=p[1].value?.histograms)}async _buildMDimStats(e,t,s){for(let i=0;i<t.variables.length;i++){const a=t.variables[i];if(a.statistics)continue;const r=a.dimensions.map((e=>new c({variableName:a.name,dimensionName:e.name,values:[e.values?.[0]??e.extent?.[0]],isSlice:!0}))),o=p.getSliceIndex(r,t),l=null==o?null:e[o];if(null==l)continue;const n=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},s):d.computeStatisticsHistograms(l);a.statistics=n.statistics,a.histograms||(a.histograms=n.histograms)}}};e.__decorate([a.property({type:String,json:{write:!0}})],y.prototype,"datasetFormat",void 0),e.__decorate([a.property()],y.prototype,"source",void 0),e.__decorate([a.property()],y.prototype,"url",null),y=e.__decorate([n.subclass("esri.layers.support.rasterDatasets.InMemoryRaster")],y);return y}));
