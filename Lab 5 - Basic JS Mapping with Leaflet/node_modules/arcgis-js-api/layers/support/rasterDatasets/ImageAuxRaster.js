/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/has","../../../core/promiseUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","./BaseRaster","./InMemoryRaster","./pamParser","../rasterFormats/RasterCodec","../rasterFunctions/stretchUtils","../rasterTransforms/PolynomialTransform","../../../geometry/SpatialReference","../../../geometry/Extent"],(function(e,t,s,a,r,o,i,n,l,c,p,u,f,m,h,d,g){"use strict";let w=class extends c{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:s,statistics:a,histograms:r,transform:o}=await this._fetchAuxiliaryData(e);const i=!s;i&&(s=new d({wkid:3857})),r?.length&&null==a&&(a=m.estimateStatisticsFromHistograms(r));const{width:n,height:l}=t;let c=new g({xmin:-.5,ymin:.5-l,xmax:n-.5,ymax:.5,spatialReference:s});const u=o?o.forwardTransform(c):c;let f=!0;if(o){const e=o.forwardCoefficients;f=e&&0===e[1]&&0===e[2],f&&(o=null,c=u)}const h=new p({source:{extent:u,nativeExtent:c,transform:o,pixelBlocks:[t],statistics:a,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:i},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(h.ioConfig.skipMapInfo=!0),await h.open(),h.source=null,this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(e,t,s,a={}){return this._inMemoryRaster.fetchRawTile(e,t,s,a)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),r=f.getFormat(t).toUpperCase();if("JPG"!==r&&"PNG"!==r&&"GIF"!==r&&"BMP"!==r)throw new s("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const o=r.toLowerCase(),i="gif"===o||"bmp"===o||!a("ios"),n=await this.decodePixelBlock(t,{format:o,useCanvas:i,hasNoZlibMask:!0});if(null==n)throw new s("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(e){const t=e?.signal,{skipExtensions:s=[],skipMapInfo:a}=this.ioConfig,o=a||s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),i=this.datasetFormat,n="JPG"===i?"jgw":"PNG"===i?"pgw":"BMP"===i?"bpw":null,l=n&&s.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:t}),c=await r.eachAlways([o,l]);if(t?.aborted)throw r.createAbortError();const p=u.parsePAMInfo(c[0].value?.data);if(!p.transform){const e=c[1].value?c[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;p.transform=6===e?.length?new h({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return p}};e.__decorate([o.property({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0),w=e.__decorate([l.subclass("esri.layers.support.rasterDatasets.ImageAuxRaster")],w);return w}));
