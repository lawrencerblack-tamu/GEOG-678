/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../request","../core/asyncUtils","../core/Error","../core/lang","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../geometry/Extent","../geometry/SpatialReference","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISCachedService","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./support/imageUtils","./support/SpriteSource","./support/TileInfo","./support/TilemapCache","./support/vectorTileLayerLoader","../portal/support/jsonContext","../portal/support/urlUtils","../chunks/persistableUrlUtils","../views/2d/engine/vectorTiles/tileInfoUtils","../views/2d/engine/vectorTiles/style/StyleRepository","../views/webgl/capabilities"],(function(e,t,r,i,o,s,a,l,n,p,y,c,u,d,h,S,m,_,g,v,f,b,w,T,L,I,x,O,P,U,R,M,C,j,A,D){"use strict";let E=class extends(f.BlendLayer(L.ScaleRangeLayer(g.ArcGISCachedService(v.ArcGISService(w.OperationalLayer(T.PortalLayer(b.CustomParametersMixin(_.APIKeyMixin(s.MultiOriginJSONMixin(m)))))))))){constructor(...e){super(...e),this._spriteSourceMap=new Map,this.currentStyleInfo=null,this.isReference=null,this.operationalLayerType="VectorTileLayer",this.style=null,this.tilemapCache=null,this.type="vector-tile",this.url=null,this.path=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){if(this.sourceNameToSource)for(const e of Object.values(this.sourceNameToSource))e?.destroy();this.primarySource?.destroy(),this._spriteSourceMap.clear()}async prefetchResources(e){await this.loadSpriteSource(globalThis.devicePixelRatio||1,e)}load(e){const r=this.loadFromPortal({supportedTypes:["Vector Tile Service"],supportsData:!1},e).catch(a.throwIfAbortError).then((async()=>{if(!this.portalItem?.id)return;const r=`${this.portalItem.itemCdnUrl}/resources/styles/root.json`;(await t(r,{...e,query:{f:"json",...this.customParameters,token:this.apiKey}})).data&&this.read({url:r},R.createForItemRead(this.portalItem,"portal-item"))})).catch(a.throwIfAbortError).then((()=>this._loadStyle(e)));return this.addResolvingPromise(r),Promise.resolve(this)}get attributionDataUrl(){const e=this.currentStyleInfo,t=e?.serviceUrl&&l.urlToObject(e.serviceUrl);if(!t)return null;const r=this._getDefaultAttribution(t.path);return r?l.addQueryParameters(r,{...this.customParameters,token:this.apiKey}):null}get capabilities(){const e=this.primarySource;return e?e.capabilities:{operations:{supportsExportTiles:!1,supportsTileMap:!1},exportTiles:null}}get fullExtent(){return this.primarySource?.fullExtent||null}get initialExtent(){return this.primarySource?.initialExtent||null}get parsedUrl(){return this.serviceUrl?l.urlToObject(this.serviceUrl):null}get serviceUrl(){return this.currentStyleInfo?.serviceUrl||null}get spatialReference(){return this.tileInfo?.spatialReference??null}get styleUrl(){return this.currentStyleInfo?.styleUrl||null}writeStyleUrl(e,t){e&&l.isProtocolRelative(e)&&(e=`https:${e}`);const r=M.parseKnownArcGISOnlineDomain(e);t.styleUrl=C.ensureMainOnlineDomain(e,r)}get tileInfo(){const e=[];for(const r in this.sourceNameToSource)e.push(this.sourceNameToSource[r]);let t=this.primarySource?.tileInfo||new O;if(e.length>1)for(let r=0;r<e.length;r++)j.areSchemasOverlapping(t,e[r].tileInfo)&&(t=j.unionTileInfos(t,e[r].tileInfo));return t}readTilemapCache(e,t){const r=t.capabilities?.includes("Tilemap");return r?new P.TilemapCache({layer:this}):null}readVersion(e,t){return t.version?parseFloat(t.version):parseFloat(t.currentVersion)}async loadSpriteSource(e=1,t){if(!this._spriteSourceMap.has(e)){const r=D.getWebGLCapabilities().maxTextureSize,i=this.currentStyleInfo?.spriteUrl?l.addQueryParameters(this.currentStyleInfo.spriteUrl,{...this.customParameters,token:this.apiKey}):null,o=new x({type:"url",spriteUrl:i,pixelRatio:e,spriteFormat:this.currentStyleInfo?.spriteFormat},r);await o.load(t),this._spriteSourceMap.set(e,o)}return this._spriteSourceMap.get(e)}async setSpriteSource(e,t){if(!e)return null;const r=D.getWebGLCapabilities().maxTextureSize,i=e.spriteUrl,o=i?l.addQueryParameters(i,{...this.customParameters,token:this.apiKey}):null;if(!o&&"url"===e.type)return null;const s=new x(e,r);try{await s.load(t);const r=e.pixelRatio||1;return this._spriteSourceMap.clear(),this._spriteSourceMap.set(r,s),o&&this.currentStyleInfo&&(this.currentStyleInfo.spriteUrl=o),this.emit("spriteSource-change",{spriteSource:s}),s}catch(n){a.throwIfAbortError(n)}return null}async loadStyle(e,t){const i=e||this.style||this.url;return this._loadingTask&&"string"==typeof i&&this.url===i||(this._loadingTask?.abort(),this._loadingTask=r.createTask((e=>(this._spriteSourceMap.clear(),this._getSourceAndStyle(i,{signal:e}))),t)),this._loadingTask.promise}getStyleLayerId(e){return this.styleRepository.getStyleLayerId(e)}getStyleLayerIndex(e){return this.styleRepository.getStyleLayerIndex(e)}getPaintProperties(e){return o.clone(this.styleRepository?.getPaintProperties(e))}setPaintProperties(e,t){const r=this.styleRepository.isPainterDataDriven(e);this.styleRepository.setPaintProperties(e,t);const i=this.styleRepository.isPainterDataDriven(e);this.emit("paint-change",{layer:e,paint:t,isDataDriven:r||i})}getStyleLayer(e){return o.clone(this.styleRepository.getStyleLayer(e))}setStyleLayer(e,t){this.styleRepository.setStyleLayer(e,t),this.emit("style-layer-change",{layer:e,index:t})}deleteStyleLayer(e){this.styleRepository.deleteStyleLayer(e),this.emit("delete-style-layer",{layer:e})}getLayoutProperties(e){return o.clone(this.styleRepository.getLayoutProperties(e))}setLayoutProperties(e,t){this.styleRepository.setLayoutProperties(e,t),this.emit("layout-change",{layer:e,layout:t})}setStyleLayerVisibility(e,t){this.styleRepository.setStyleLayerVisibility(e,t),this.emit("style-layer-visibility-change",{layer:e,visibility:t})}getStyleLayerVisibility(e){return this.styleRepository.getStyleLayerVisibility(e)}write(e,t){return t?.origin&&!this.styleUrl?(t.messages&&t.messages.push(new i("vectortilelayer:unsupported",`VectorTileLayer (${this.title}, ${this.id}) with style defined by JSON only are not supported`,{layer:this})),null):super.write(e,t)}getTileUrl(e,t,r){return null}async _getSourceAndStyle(e,t){if(!e)throw new Error("invalid style!");const r=await U.loadMetadata(e,{...t,query:{...this.customParameters,token:this.apiKey}});if("webp"===r.spriteFormat){await I.checkWebPSupport("lossy")||(r.spriteFormat="png")}this._set("currentStyleInfo",{...r}),"string"==typeof e?(this.url=e,this.style=null):(this.url=null,this.style=e),this._set("sourceNameToSource",r.sourceNameToSource),this._set("primarySource",r.sourceNameToSource[r.primarySourceName]),this._set("styleRepository",new A(r.style)),this.read(r.layerDefinition,{origin:"service"}),this.emit("load-style")}_getDefaultAttribution(e){const t=e.match(/^https?:\/\/(?:basemaps|basemapsbeta|basemapsdev)(?:-api)?\.arcgis\.com(\/[^\/]+)?\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/vectortileserver/i),r=["OpenStreetMap_v2","OpenStreetMap_Daylight_v2","OpenStreetMap_Export_v2","OpenStreetMap_FTS_v2","OpenStreetMap_GCS_v2","World_Basemap","World_Basemap_v2","World_Basemap_Export_v2","World_Basemap_GCS_v2","World_Basemap_WGS84","World_Contours_v2"];if(!t)return;const i=t[2]&&t[2].toLowerCase();if(!i)return;const o=t[1]||"";for(const s of r)if(s.toLowerCase().includes(i))return l.normalize(`//static.arcgis.com/attribution/Vector${o}/${s}`)}async _loadStyle(e){return this._loadingTask?.promise??this.loadStyle(null,e)}};e.__decorate([n.property({readOnly:!0})],E.prototype,"attributionDataUrl",null),e.__decorate([n.property({type:["show","hide"]})],E.prototype,"listMode",void 0),e.__decorate([n.property({json:{read:!0,write:!0}})],E.prototype,"blendMode",void 0),e.__decorate([n.property({readOnly:!0,json:{read:!1}})],E.prototype,"capabilities",null),e.__decorate([n.property({readOnly:!0})],E.prototype,"currentStyleInfo",void 0),e.__decorate([n.property({json:{read:!1},readOnly:!0,type:h})],E.prototype,"fullExtent",null),e.__decorate([n.property({json:{read:!1},readOnly:!0,type:h})],E.prototype,"initialExtent",null),e.__decorate([n.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],E.prototype,"isReference",void 0),e.__decorate([n.property({type:["VectorTileLayer"]})],E.prototype,"operationalLayerType",void 0),e.__decorate([n.property({readOnly:!0})],E.prototype,"parsedUrl",null),e.__decorate([n.property()],E.prototype,"style",void 0),e.__decorate([n.property({readOnly:!0})],E.prototype,"serviceUrl",null),e.__decorate([n.property({type:S,readOnly:!0})],E.prototype,"spatialReference",null),e.__decorate([n.property({readOnly:!0})],E.prototype,"styleRepository",void 0),e.__decorate([n.property({readOnly:!0})],E.prototype,"sourceNameToSource",void 0),e.__decorate([n.property({readOnly:!0})],E.prototype,"primarySource",void 0),e.__decorate([n.property({type:String,readOnly:!0,json:{write:{ignoreOrigin:!0},origins:{"web-document":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],E.prototype,"styleUrl",null),e.__decorate([d.writer(["portal-item","web-document"],"styleUrl")],E.prototype,"writeStyleUrl",null),e.__decorate([n.property({json:{read:!1,origins:{service:{read:!1}}},readOnly:!0,type:O})],E.prototype,"tileInfo",null),e.__decorate([n.property()],E.prototype,"tilemapCache",void 0),e.__decorate([c.reader("service","tilemapCache",["capabilities","tileInfo"])],E.prototype,"readTilemapCache",null),e.__decorate([n.property({json:{read:!1},readOnly:!0,value:"vector-tile"})],E.prototype,"type",void 0),e.__decorate([n.property({json:{origins:{"web-document":{read:{source:"styleUrl"}},"portal-item":{read:{source:"url"}}},write:!1,read:!1}})],E.prototype,"url",void 0),e.__decorate([n.property({readOnly:!0})],E.prototype,"version",void 0),e.__decorate([c.reader("version",["version","currentVersion"])],E.prototype,"readVersion",null),e.__decorate([n.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],E.prototype,"path",void 0),E=e.__decorate([u.subclass("esri.layers.VectorTileLayer")],E);return E}));
