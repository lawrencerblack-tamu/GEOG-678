/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/asyncUtils","../../../core/Collection","../../../core/has","../../../core/Error","../../../core/lang","../../../core/Logger","../../../core/maybe","../../../core/Promise","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/support/UpdatingHandles","../../support/arcgisLayerUrl","../../support/layerUtils","../../../portal/support/geometryServiceUtils","../../../rest/support/StatisticDefinition","../../../views/3d/layers/support/FeatureTileFetcher3D","../../../views/3d/layers/support/FeatureTileFetcher3DDebugger","../../../views/3d/support/debugFlags"],(function(e,t,r,i,a,s,l,o,n,u,c,h,d,p,_,m,y,F,f,g,C,D,x){"use strict";e.FeatureTileController3D=class extends(c.EsriPromiseMixin(r)){get dataUpdating(){return this._tileFetcher?.dataUpdating??!1}set extent(e){if(null!=e&&!e.spatialReference.equals(this.layerView.view.spatialReference))return void n.getLogger(this).error("#extent=","extent needs to be in the same spatial reference as the view");const t=this._get("extent");if(t===e)return;if(null!=t&&e&&t.equals(e))return;const r=null!=e?e.clone():null;this._set("extent",r)}get updating(){return!!(null!=this._tileFetcher&&this._tileFetcher.updating||null!=this._fetchDataInfoPromise||"tiles"===this.mode&&this.layerView.view.featureTiles&&this.layerView.view.featureTiles.updating||this._updatingHandles&&this._updatingHandles.updating)}get updatingTotal(){return this.updating&&null!=this._tileFetcher?this._tileFetcher.updatingTotal:0}get updatingRemaining(){return this.updating&&null!=this._tileFetcher?this._tileFetcher.updatingRemaining:0}get expectedFeatureDiff(){return this.updating&&null!=this._tileFetcher?this._tileFetcher.expectedFeatureDiff:0}get memoryForUnusedFeatures(){return null!=this._tileFetcher?this._tileFetcher.memoryForUnusedFeatures:0}get maximumNumberOfFeaturesExceeded(){return!(null==this._tileFetcher||!this._tileFetcher.maximumNumberOfFeaturesExceeded)}get maximumNumberOfFeatures(){return this.displayFeatureLimit?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(e){e!==this.maximumNumberOfFeatures&&this._overrideIfSome("maximumNumberOfFeatures",e)}get hasMaximumNumberOfFeaturesOverride(){return this._isOverridden("maximumNumberOfFeatures")}get hasAllFeatures(){return this.serviceDataCount===e.FeatureTileController3DConstants.noServiceDataCount&&"snapshot"===this.mode&&this.hasAllFeaturesInView||this.serviceDataCount===this.graphics.length}get hasAllFeaturesInView(){return this._tileFetcher?.hasAllFeatures??!1}get hasFullGeometries(){return this._tileFetcher?.hasFullGeometries??!1}get mode(){const t=this.layerView.layer;if("feature"===t.type&&null!=t.infoFor3D)return"snapshot";if(this._forceTilesMode)return"tiles";const r=this.layerView.view;if(!1===r.qualitySettings?.graphics3D?.snapshotAvailable||this.serviceDataCount===e.FeatureTileController3DConstants.noServiceDataCount||this._snapshotLimitExceeded||this.maximumNumberOfFeaturesExceeded||r.quality<1)return"tiles";const i=r&&r.featureTiles,a=i&&i.tilingScheme;if(t&&t.minScale&&this.serviceDataExtent&&a){const r=this._approximateExtentSizeAtScale(t.minScale,a);if((this.serviceDataExtent.width/r+this.serviceDataExtent.height/r)/2>e.FeatureTileController3DConstants.maxSnapshotMinScaleFactor)return"tiles"}return!this.maximumNumberOfFeatures||this.serviceDataCount<=this.maximumNumberOfFeatures?"snapshot":"tiles"}get maxTotalSnapshotVertices(){const e=this._get("maxTotalSnapshotVertices")||0,t="snapshot"===this.mode&&this._tileFetcher?.totalVertices||0;return Math.max(e,t)}_approximateExtentSizeAtScale(e,t){const r=this.layerView.view,i=Math.ceil((r.width/t.pixelSize+r.height/t.pixelSize)/2),a=t.levels[0];return i*((a.tileSize[0]/(a.scale/e)+a.tileSize[1]/(a.scale/e))/2)}get tileDescriptors(){const e=this.layerView.view.featureTiles;return"snapshot"===this.mode?new a([{id:"dummy-tile-full-extent",lij:[0,0,0]}]):e?e.tiles:new a}get test(){return{fetchDataInfoPromise:this._fetchDataInfoPromise,tileFetcher:this._tileFetcher}}constructor(t){super(t),this.type="feature-tile-3d",this._updatingHandles=new m.UpdatingHandles,this.serviceDataExtent=null,this.serviceDataCount=e.FeatureTileController3DConstants.noServiceDataCount,this._snapshotLimitExceeded=!1,this.displayFeatureLimit=null,this._forceTilesMode=!1,this._suspended=!1,this._tileFetcher=null,this._fetchDataInfoPromise=null,this._fetchDataInfoAbortController=null,this._lifeCycleAbortController=new AbortController}initialize(){this._updatingHandles.add((()=>this.displayFeatureLimit),(e=>this._updatingHandles.addPromise(this._updateSnapshotLimit(e,null,this._lifeCycleAbortController.signal)))),this._updatingHandles.add((()=>this.mode),(()=>this._modeChanged()),d.initial),this._updatingHandles.add((()=>this.mode),((e,t)=>{"tiles"===e&&"snapshot"===t&&(this._forceTilesMode=!0)}),d.initial),this.addResolvingPromise(Promise.resolve().then((()=>this._verifyCapabilities())).then((()=>this._updatingHandles.addPromise(this._fetchServiceDataInfo()))).then((()=>this._initializeTileFetcher())))}_verifyCapabilities(){const e=this.layerView.layer;if("ogc-feature"!==e.type&&!F.getEffectiveLayerCapabilities(e)?.operations.supportsQuery)throw new l("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",{layer:e})}destroy(){this._cancelFetchServiceDataInfo(),this._tileFetcher=u.destroyMaybe(this._tileFetcher),this._tilesHandle=u.removeMaybe(this._tilesHandle),this._lifeCycleAbortController=u.abortMaybe(this._lifeCycleAbortController),this._updatingHandles.destroy(),this._set("_updatingHandles",null)}suspend(){this._suspended||(this._suspended=!0,null!=this._tileFetcher&&this._tileFetcher.suspend())}resume(){this._suspended&&(this._suspended=!1,null!=this._tileFetcher&&this._tileFetcher.resume())}restart(){const e=()=>{null!=this._tileFetcher&&this._tileFetcher.restart()};this._updatingHandles.addPromise(this._fetchServiceDataInfo().then(e,e))}refetch(){this._refetch({resetForceTilesMode:!1})}getMissingAttributesForFeature(e){return this._tileFetcher?.getMissingAttributesForFeature(e)}_refetch(e){const t=()=>{null!=this._tileFetcher&&(e.resetForceTilesMode&&(this._forceTilesMode=!1),this._tileFetcher.refetch())};this._updatingHandles.addPromise(this._fetchServiceDataInfo().then(t,t))}_initializeTileFetcher(){const e=this.layerView.view;if(!e)return;const t=d.whenOnce((()=>e.featureTiles?.tilingScheme),this._lifeCycleAbortController.signal);this._updatingHandles.addPromise(t),t.then((()=>{const{layerView:e,tileDescriptors:t}=this,r=e.layer,i=new C.FeatureTileFetcher3D({context:this.context,filterExtent:this.extent,tileDescriptors:t,features:this.graphics});this._tileFetcher=i,this._suspended?i.suspend():i.resume();const a=this.layerView.view;a&&this.addHandles(d.watch((()=>a.quality),(e=>i.memoryFactor=e),d.syncAndInitial));const s="polygon"===this.context.geometryType?"polygonLodFactor":"polyline"===this.context.geometryType?"polylineLodFactor":null;s&&this.addHandles(d.watch((()=>this.layerView.view?.qualitySettings?.graphics3D?.[s]),(e=>i.lodFactor=e||1),d.initial));const l=e=>{i.maximumNumberOfFeatures=e,i.useTileCount=this.serviceDataCount>e},o=e=>{i.useTileCount=e>this.maximumNumberOfFeatures};"ogc-feature"!==r.type&&this._updatingHandles.add((()=>r.createQueryVersion),(()=>this._dataFilterChanged())),this._updatingHandles.add((()=>e.availableFields),((e,t)=>this._availableFieldsChanged(t,e))),this._updatingHandles.add((()=>e.requiredFields),((e,t)=>this._requiredFieldsChanged(t,e))),"customParameters"in r&&this._updatingHandles.add((()=>r.customParameters),(()=>this.restart())),this.addHandles([r.on("apply-edits",(e=>this._applyEdits(e))),d.watch((()=>this.extent),(e=>i.filterExtent=e),d.sync),d.watch((()=>this.tileDescriptors),(e=>i.tileDescriptors=e),d.sync),d.watch((()=>this.maximumNumberOfFeatures),l,d.syncAndInitial),d.watch((()=>this.serviceDataCount),o,d.syncAndInitial),d.watch((()=>x.debugFlags.FEATURE_TILE_FETCH_SHOW_TILES),(e=>{e&&i&&!i.debugger?(i.debugger=new D.FeatureTileFetcher3DDebugger(i,a.featureTiles.tilingScheme.toTileInfo(),a),i.debugger.update()):!e&&this._tileFetcher&&i.debugger&&(i.debugger.destroy(),i.debugger=null)}),d.syncAndInitial)]),this._supportsExceedsLimitQuery||this._updatingHandles.add((()=>this.maxTotalSnapshotVertices),(()=>this._updatingHandles.addPromise(this._updateSnapshotLimit(this.displayFeatureLimit,null,this._lifeCycleAbortController.signal))))})).catch((()=>{}))}_modeChanged(){switch(this.mode){case"tiles":this._tilesHandle||(this._tilesHandle=this.layerView.view.featureTiles.addClient());break;default:n.getLogger(this).warn("Unhandled feature layer mode "+this.mode);case"snapshot":null!=this._tilesHandle&&(this._tilesHandle.remove(),this._tilesHandle=null)}}_dataFilterChanged(){this._set("maxTotalSnapshotVertices",0),this.notifyChange("maxTotalSnapshotVertices"),this._refetch({resetForceTilesMode:!0})}_applyEdits(e){null!=this._tileFetcher&&this._tileFetcher.applyEdits(e).then((e=>{if(e){if(!this._lifeCycleAbortController)throw h.createAbortError();e.exceededTransferLimit?this.layerView.layer.refresh():(e.deletedFeatures.length||e.updatedFeatures.length||e.addedFeatures.length)&&this._updatingHandles.addPromise(this._updateServiceDataExtent(this._lifeCycleAbortController.signal))}})).catch((e=>{if(!h.isAbortError(e))throw e}))}_availableFieldsChanged(e,t){null!=this._tileFetcher&&E(this._tileFetcher.availableFields,t)&&this._refetch({resetForceTilesMode:!1})}_requiredFieldsChanged(e,t){null!=this._tileFetcher&&E(this._tileFetcher.availableFields,t)&&this.restart()}_createVertexLimitExceededQuery(e){const t=this.layerView.layer,r=t.createQuery();return r.returnGeometry=!1,r.outStatistics=[new g({statisticType:"exceedslimit",maxVertexCount:e,outStatisticFieldName:"exceedslimit",maxPointCount:1e8,maxRecordCount:1e8})],t.capabilities?.query.supportsCacheHint&&(r.cacheHint=!0),r}_createDataInfoQuery(){const e=this.layerView.layer,t=e.createQuery();return t.returnGeometry=!1,t.outSpatialReference=this.layerView.view.spatialReference,e.capabilities?.query.supportsCacheHint&&(t.cacheHint=!0),t}_fullExtentIsAccurate(){const e=this.layerView.layer;if("definitionExpression"in e&&e.definitionExpression)return!1;switch(e.type){case"feature":case"oriented-imagery":return y.isHostedAgolService(e.url);case"csv":case"geojson":case"ogc-feature":case"wfs":return!0;default:return}}async _updateServiceDataExtent(e){try{await this._tryUpdateServiceDataExtent(e)}catch(t){h.isAbortError(t)||this._set("serviceDataExtent",o.clone(this.layerView.fullExtentInLocalViewSpatialReference))}}async _tryUpdateServiceDataExtent(t){const r=this.layerView,i=r.layer,a=i.capabilities?.query.supportsExtent??!1,s=o.clone(r.fullExtentInLocalViewSpatialReference),l=i.fullExtent,n=this._fullExtentIsAccurate(),u=this.serviceDataCount;if(a&&u<=e.FeatureTileController3DConstants.maxFeatureCountForExtent&&(!s||!n)&&"queryExtent"in i){const r=this._createDataInfoQuery(),a=await i.queryExtent(r,{timeout:e.FeatureTileController3DConstants.queryExtentTimeout,signal:t});this._set("serviceDataExtent",a.extent)}else if(s)this._set("serviceDataExtent",s);else if(null!=l){const e="portalItem"in i?i.portalItem:null,a=await f.projectGeometry(l,r.view.spatialReference,e,t);this._set("serviceDataExtent",a)}else this._set("serviceDataExtent",null)}async _updateServiceDataCount(t){const r=this.layerView.layer;if(!("queryFeatureCount"in r)||!s("featurelayer-snapshot-enabled"))return void this._set("serviceDataCount",e.FeatureTileController3DConstants.noServiceDataCount);const a=await i.result(r.queryFeatureCount(this._createDataInfoQuery(),{timeout:e.FeatureTileController3DConstants.queryStatisticsTimeout,signal:t}));if(!0===a.ok)this._set("serviceDataCount",a.value);else{if(h.isAbortError(a.error))throw a.error;this._set("serviceDataCount",e.FeatureTileController3DConstants.noServiceDataCount)}}get _supportsExceedsLimitQuery(){const e=this.layerView.layer;return null!=e.capabilities&&e.capabilities.operations&&e.capabilities.operations.supportsExceedsLimitStatistics}get _minimumNumberOfVerticesForGeometry(){switch(this.layerView.layer.geometryType){case"point":case"multipoint":return 1;case"polygon":return 4;case"polyline":return 2;case"multipatch":case"mesh":return 3;default:return 0}}async _updateSnapshotLimit(t,r,a){if(null==t?.averageSymbolComplexity)return void(this._snapshotLimitExceeded=!1);const{maximumTotalNumberOfVertices:l,averageSymbolComplexity:o}=t,{verticesPerFeature:n,verticesPerCoordinate:u}=o,c=n<=0,d=this._minimumNumberOfVerticesForGeometry>1;if(!c&&!d)return void(this._snapshotLimitExceeded=!1);0!==n&&null!=r&&await r;const p=Math.min(l,T),_=this.serviceDataCount,m=_!==e.FeatureTileController3DConstants.noServiceDataCount;let y=m?Math.ceil((p-_*n)/(u||1)):Math.ceil(p/(u||1));if(d&&(y=Math.min(y,S)),m&&this._minimumNumberOfVerticesForGeometry*_>y)return void(this._snapshotLimitExceeded=!0);if(!this._supportsExceedsLimitQuery||!s("featurelayer-snapshot-enabled"))return void(this._snapshotLimitExceeded=this.maxTotalSnapshotVertices>y);const F=await i.result(this.layerView.layer.queryFeatures(this._createVertexLimitExceededQuery(y),{timeout:e.FeatureTileController3DConstants.queryStatisticsTimeout,signal:a}));if(!1===F.ok){if(h.isAbortError(F.error))throw F.error;return void(this._snapshotLimitExceeded=!1)}const f=F.value.features[0];this._snapshotLimitExceeded=!!f?.attributes&&!!f.attributes.exceedslimit}async _fetchServiceDataInfo(){this._cancelFetchServiceDataInfo();let e=new AbortController;const t=e.signal,r=this._updateServiceDataCount(t),i=Promise.allSettled([r,this._updateSnapshotLimit(this.displayFeatureLimit,r,t)]),a=i.then((()=>this._updateServiceDataExtent(t))).catch((e=>{h.isAbortError(e)||n.getLogger(this).error("#fetchServiceDataInfo()",e)})).then((()=>{a===this._fetchDataInfoPromise&&(this._fetchDataInfoPromise=null,this._fetchDataInfoAbortController=null),e=null}));return e&&(this._fetchDataInfoPromise=a),this._fetchDataInfoAbortController=e,i.then((()=>{}),(()=>{}))}_cancelFetchServiceDataInfo(){const e=this._fetchDataInfoAbortController;e&&(this._fetchDataInfoAbortController=null,this._fetchDataInfoPromise=null,e.abort())}get performanceInfo(){return{storedFeatures:this._tileFetcher?.storedFeatures??0,totalFeatures:this._tileFetcher?.totalFeatures??0,totalVertices:this._tileFetcher?.totalVertices??0,missingTiles:this._tileFetcher?.missingTiles??0}}},t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"type",void 0),t.__decorate([p.property({constructOnly:!0})],e.FeatureTileController3D.prototype,"graphics",void 0),t.__decorate([p.property({constructOnly:!0})],e.FeatureTileController3D.prototype,"layerView",void 0),t.__decorate([p.property({constructOnly:!0})],e.FeatureTileController3D.prototype,"context",void 0),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"dataUpdating",null),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"extent",null),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"updating",null),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"_updatingHandles",void 0),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"updatingTotal",null),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"updatingRemaining",null),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"expectedFeatureDiff",null),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"memoryForUnusedFeatures",null),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"maximumNumberOfFeaturesExceeded",null),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"serviceDataExtent",void 0),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"serviceDataCount",void 0),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"_snapshotLimitExceeded",void 0),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"displayFeatureLimit",void 0),t.__decorate([p.property({type:Number})],e.FeatureTileController3D.prototype,"maximumNumberOfFeatures",null),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"hasAllFeatures",null),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"hasAllFeaturesInView",null),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"hasFullGeometries",null),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"_forceTilesMode",void 0),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"mode",null),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"maxTotalSnapshotVertices",null),t.__decorate([p.property({readOnly:!0})],e.FeatureTileController3D.prototype,"tileDescriptors",null),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"_tileFetcher",void 0),t.__decorate([p.property()],e.FeatureTileController3D.prototype,"_fetchDataInfoPromise",void 0),e.FeatureTileController3D=t.__decorate([_.subclass("esri.layers.graphics.controllers.FeatureTileController3D")],e.FeatureTileController3D);const v=1e4,T=1e6,b=12e3,w=1e4,S=5e6;function E(e,t){if(!t)return!1;for(const r of t)if(!e.has(r))return!0;return!1}e.FeatureTileController3DConstants=void 0,function(e){function t(){e.maxFeatureCountForExtent=v,e.queryStatisticsTimeout=b,e.queryExtentTimeout=w}e.noServiceDataCount=1/0,e.maxSnapshotMinScaleFactor=5,e.reset=t}(e.FeatureTileController3DConstants||(e.FeatureTileController3DConstants={})),e.FeatureTileController3DConstants.reset(),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
