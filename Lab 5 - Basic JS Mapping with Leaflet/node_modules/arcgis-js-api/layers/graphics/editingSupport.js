/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../Graphic","../../core/Collection","../../core/Error","../../core/lang","../../core/Logger","../../core/promiseUtils","../../core/urlUtils","../../core/uuid","../../geometry/support/normalizeUtils","../../geometry/support/spatialReferenceUtils","../mixins/EditBusLayer","../support/fieldUtils","../support/infoFor3D","../support/layerUtils"],(function(e,t,a,r,i,s,n,o,l,d,u,p,c,h,f){"use strict";function y(e){return null!=e?.applyEdits}function m(e){return"object"==typeof e&&null!=e&&"objectId"in e&&!!e.objectId}function g(e){return e.every(m)}function b(e){return"object"==typeof e&&null!=e&&"globalId"in e&&!!e.globalId}function w(e){return e.every(b)}async function F(e,t,a,r={}){let s;const o="gdbVersion"in e?e.gdbVersion:null,l=r.gdbVersion??o;if(p.isEditBusLayer(e)&&e.url)s=p.emitApplyEditsEvent(e.url,e.layerId,l,"original-and-current-features"===r.returnServiceEditsOption);else{s=n.createResolver(),s.promise.then((t=>{(t.addedFeatures.length||t.updatedFeatures.length||t.deletedFeatures.length||t.addedAttachments.length||t.updatedAttachments.length||t.deletedAttachments.length)&&e.emit("edits",t)}));const t={result:s.promise};e.emit("apply-edits",t)}try{const{results:n,edits:o}=await I(e,t,a,r),l=e=>e.filter((e=>!e.error)).map(i.clone),d={edits:o,addedFeatures:l(n.addFeatureResults),updatedFeatures:l(n.updateFeatureResults),deletedFeatures:l(n.deleteFeatureResults),addedAttachments:l(n.addAttachmentResults),updatedAttachments:l(n.updateAttachmentResults),deletedAttachments:l(n.deleteAttachmentResults),exceededTransferLimit:!1,historicMoment:n.editMoment?new Date(n.editMoment):null,globalIdToObjectId:r.globalIdToObjectId};return n.editedFeatureResults?.length&&(d.editedFeatures=n.editedFeatureResults),s.resolve(d),n}catch(d){throw s.reject(d),d}}async function I(e,t,a,i){if(await e.load(),!y(t))throw new r(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!f.getEffectiveEditingEnabled(e))throw new r(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:s,options:n}=await A(e,a,i);return s.addFeatures?.length||s.updateFeatures?.length||s.deleteFeatures?.length||s.addAttachments?.length||s.updateAttachments?.length||s.deleteAttachments?.length?{edits:s,results:await t.applyEdits(s,n)}:{edits:s,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}async function A(e,t,a){const i=f.getEffectiveLayerCapabilities(e),n=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),o=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),l=null!=e.infoFor3D;if(j(t,i,a,!!n,!!o,`${e.type}-layer`),!i.data.isVersioned&&a?.gdbVersion)throw new r(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!i.editing.supportsRollbackOnFailure&&a?.rollbackOnFailureEnabled)throw new r(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");const d={...a};if(null!=d.rollbackOnFailureEnabled||i.editing.supportsRollbackOnFailure||(d.rollbackOnFailureEnabled=!0),d.rollbackOnFailureEnabled||"original-and-current-features"!==d.returnServiceEditsOption||(!1===d.rollbackOnFailureEnabled&&s.getLogger("esri.layers.graphics.editingSupport").warn(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true, but 'rollBackOnFailure' was set to false. 'rollBackOnFailure' has been overwritten and set to true."),d.rollbackOnFailureEnabled=!0),!i.editing.supportsReturnServiceEditsInSourceSpatialReference&&d.returnServiceEditsInSourceSR)throw new r(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(d.returnServiceEditsInSourceSR&&"original-and-current-features"!==d.returnServiceEditsOption)throw new r(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsInSourceSR' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const u=G(t,i,`${e.type}-layer`),p=a?.globalIdUsed||l,c=e.fields.filter((e=>"big-integer"===e.type||"oid"===e.type&&(e.length||0)>=8));if(p){const{globalIdField:t}=e;if(null==t)throw new r(`${e.type}-layer:invalid-parameter`,"Layer does not specify a global id field.");u.addFeatures.forEach((e=>U(e,t)))}u.addFeatures.forEach((t=>$(t,e,p,c))),u.updateFeatures.forEach((t=>R(t,e,p,c))),u.deleteFeatures.forEach((t=>S(t,e,p,c))),u.addAttachments.forEach((t=>O(t,e))),u.updateAttachments.forEach((t=>O(t,e))),l&&await T(u,e);return{edits:await k(u),options:d}}function v(e,t,a,i){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new r(`${t.type}-layer:invalid-parameter`,`Feature should have '${t.globalIdField}' when 'globalIdUsed' is true`);if(!("attributes"in e)&&!e.globalId)throw new r(`${t.type}-layer:invalid-parameter`,"`'globalId' of the feature should be passed when 'globalIdUsed' is true")}if(i.length&&"attributes"in e)for(const s of i){const a=e.attributes[s.name];if(void 0!==a&&!c.isValidFieldValue(s,a))throw new r(`${t.type}-layer:invalid-parameter`,`Big-integer field '${s.name}' of the feature must be less than ${Number.MAX_SAFE_INTEGER}`,{feature:e})}if("geometry"in e&&null!=e.geometry){if(e.geometry.hasZ&&!1===t.capabilities?.data.supportsZ)throw new r(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities?.data.supportsM)throw new r(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function E(e,t){if("geometry"in e&&"mesh"===e.geometry?.type&&null!=t.infoFor3D&&null!=t.spatialReference){const{geometry:a}=e,{spatialReference:i,vertexSpace:s}=a,n=t.spatialReference,o="local"===s.type,l=u.isGeographic(n),d=u.equals(n,i),p=d||u.isWGS84(n)&&(u.isWGS84(i)||u.isWebMercator(i));if(!(o&&l&&p||!o&&!l&&d))throw new r(`${t.type}-layer:mesh-unsupported`,`Uploading a mesh with a ${s.type} vertex space and a spatial reference wkid:${i.wkid} to a layer with a spatial reference wkid:${n.wkid} is not supported.`)}}function $(e,t,a,r){v(e,t,a,r),E(e,t)}function S(e,t,a,r){v(e,t,a,r)}function R(e,t,a,i){v(e,t,a,i),E(e,t);const s=f.getEffectiveLayerCapabilities(t);if("geometry"in e&&null!=e.geometry&&!s?.editing.supportsGeometryUpdate)throw new r(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}function O(e,t){const{feature:a,attachment:i}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new r(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new r(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!i.globalId)throw new r(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!i.data&&!i.uploadId)throw new r(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(i.data instanceof File&&!!i.data.name)&&!i.name)throw new r(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities?.editing.supportsUploadWithItemId&&i.uploadId)throw new r(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof i.data){const e=o.dataComponents(i.data);if(e&&!e.isBase64)throw new r(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function U(e,t){const{attributes:a}=e;null==a[t]&&(a[t]=l.generateBracedUUID())}async function k(e){const t=e.addFeatures??[],a=e.updateFeatures??[],r=t.concat(a).map((e=>e.geometry)),i=await d.normalizeCentralMeridian(r),s=t.length,n=a.length;return i.slice(0,s).forEach(((e,a)=>t[a].geometry=e)),i.slice(s,s+n).forEach(((e,t)=>a[t].geometry=e)),e}function L(e){return{addFeatures:Array.from(e?.addFeatures??[]),updateFeatures:Array.from(e?.updateFeatures??[]),deleteFeatures:e&&a.isCollection(e.deleteFeatures)?e.deleteFeatures.toArray():e.deleteFeatures||[],addAttachments:e.addAttachments||[],updateAttachments:e.updateAttachments||[],deleteAttachments:e.deleteAttachments||[]}}function G(e,t,a){const i=L(e);if(i.addFeatures?.length&&!t.operations.supportsAdd)throw new r(`${a}:unsupported-operation`,"Layer does not support adding features.");if(i.updateFeatures?.length&&!t.operations.supportsUpdate)throw new r(`${a}:unsupported-operation`,"Layer does not support updating features.");if(i.deleteFeatures?.length&&!t.operations.supportsDelete)throw new r(`${a}:unsupported-operation`,"Layer does not support deleting features.");return i.addFeatures=i.addFeatures.map(B),i.updateFeatures=i.updateFeatures.map(B),i.addAssetFeatures=[],i}function j(e,t,a,i,s,n){if(!e||!i&&!s)throw new r(`${n}:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!t.editing.supportsGlobalId&&a?.globalIdUsed)throw new r(`${n}:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!t.editing.supportsGlobalId&&s)throw new r(`${n}:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if(!a?.globalIdUsed&&s)throw new r(`${n}:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true")}function B(e){const a=new t;return e.attributes||(e.attributes={}),a.geometry=e.geometry,a.attributes=e.attributes,a}async function T(e,t){if(null==t.infoFor3D)return;const{infoFor3D:a}=t,i=h.getMimeTypeFormatId("model/gltf-binary",a.supportedFormats)??h.getFilenameFormatId("glb",a.supportedFormats);if(!(!!i&&a.editFormats.includes(i)))throw new r(`${t.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");e.addAssetFeatures??=[];const{addAssetFeatures:s}=e;for(const r of e.addFeatures??[])M(r)&&s.push(r);for(const r of e.updateFeatures??[])M(r)&&s.push(r)}function M(e){return"mesh"===e?.geometry?.type}function W(e,t,a,i){if(!y(t))throw new r(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!t.uploadAssets)throw new r(`${e.type}-layer:no-asset-upload-support`,"Layer source does not support uploadAssets capability",{layer:e});return t.uploadAssets(a,i)}e.applyEdits=F,e.checkEditingCapabilities=j,e.isFeatureIdentifierArrayWithGlobalId=w,e.isFeatureIdentifierArrayWithObjectId=g,e.isFeatureIdentifierWithGlobalId=b,e.isFeatureIdentifierWithObjectId=m,e.normalizeCollections=L,e.normalizeEdits=G,e.normalizeGeometries=k,e.shallowCloneFeature=B,e.uploadAssets=W,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
