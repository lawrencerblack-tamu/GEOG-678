/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../core/Error","../../../core/JSONSupport","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../support/requestPresets"],(function(e,o,t,r,n,i,s,a,c,l){"use strict";e.ElevationSource=class extends r.JSONSupport{constructor(){super(...arguments),this.url=null}},o.__decorate([n.property({type:Number,json:{write:!0}})],e.ElevationSource.prototype,"lod",void 0),o.__decorate([n.property({type:String,json:{write:!0}})],e.ElevationSource.prototype,"rasterFunction",void 0),o.__decorate([n.property({type:String,json:{write:!0}})],e.ElevationSource.prototype,"url",void 0),e.ElevationSource=o.__decorate([c.subclass("esri.layers.orientedImagery.core.ElevationSourceDefinitions.ElevationSource")],e.ElevationSource),e.ConstantElevation=class extends r.JSONSupport{constructor(){super(...arguments),this.constantElevation=null}},o.__decorate([n.property({type:Number,json:{write:!0}})],e.ConstantElevation.prototype,"constantElevation",void 0),e.ConstantElevation=o.__decorate([c.subclass("esri.layers.orientedImagery.cor.ElevationSourceDefinitions.ConstantElevation")],e.ConstantElevation);const p=e=>null!=e&&"constantElevation"in e&&"number"==typeof e.constantElevation,u=e=>null!=e&&"url"in e&&!!e.url;async function v(e){const o=await l.fetchArcGISServiceJSON(e),{tileInfo:r,cacheType:n}=o;return o.hasOwnProperty("bandCount")&&o.hasOwnProperty("pixelSizeX")?"LERC"!==r?.format?.toUpperCase()||n&&"elevation"!==n.toLowerCase()?{isSupported:!0,isDynamic:!0}:{isSupported:!0}:{isSupported:!1,error:new t("elevation-source:invalid-service-url",`ElevationSource URL expects an elevation 3D image service but given ${e}`)}}e.isConstantElevation=p,e.isElevationSource=u,e.validateElevationSourceURL=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
