/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../core/Error","../../../core/Logger","../../../core/memoize","../../../core/promiseUtils","../../../geometry/projection","../../../geometry/support/aaBoundingRect","../../ElevationLayer","../../ImageryLayer","../../support/ElevationSampler","../../support/ElevationTile","../../support/ElevationTileData","../../support/RasterFunction","../../support/TileInfo","../../support/TileKey","../../../support/requestPresets","../../../widgets/OrientedImageryViewer/utils"],(function(e,t,r,a,n,i,o,c,s,l,u,p,f,w,v,y,g){"use strict";async function m(e,r,a){const n="url"in r?await T(r):r;if(!n)throw g.logAndThrow("esri.layers.orientedImagery.transformations",new t("update-elevation:elevation-source","could not create a sampler using provided elevation source",r));return d(e,n,a)}async function d(e,t,r){await n.waitTick(r);const a=new Array,i=A(t,r);for(const n of e){const e=await i(n);a.push(e)}return a}async function E(e,t,r=!0,a){await n.waitTick(a);const{cameraHeight:i,cameraLocation:o,cameraOrientation:c}=e;return R(t,c&&"number"==typeof o.z?o.z-i:0,r,a)}var h;!function(e){e[e.DYNAMIC=0]="DYNAMIC",e[e.ELEVATION=1]="ELEVATION"}(h||(h={}));const T=a.memoize((async(e,t)=>{let a;const{extent:i,rasterFunction:o,url:c}=e;try{a=await L(c)}catch(s){if(n.isAbortError(s))return;r.getLogger("esri.layers.orientedImagery.transformations").error("updateElevationUsingElevationSource",s)}switch(a){case h.DYNAMIC:return await S(c,i,o,t);case h.ELEVATION:return await I(c,i,t);default:return}}));async function I(e,t,a){const i=new c(e);let o;try{await i.load(),o=await i.createElevationSampler(t,a)}catch(s){if(n.isAbortError(s))return;r.getLogger(i).error(s)}finally{i.destroy()}return o}async function S(e,t,r,a){const n=r?new f({functionName:r}):void 0,i=new s({url:e,rasterFunction:n,format:"lerc"});await i.load(a);let c,y=512,g=512;const m=t.width/t.height;m>1?(g/=m,c=t.height/g):(y*=m,c=t.width/y);const d=await i.fetchImage(t,y,g,a),E=w.create({scales:[c],size:512,spatialReference:t.spatialReference}),h=new v.TileKey(null,0,0,0,o.fromExtent(t)),T=new p.ElevationTileData(d.pixelData.pixelBlock.pixels[0],y,g,0),I=new u.ElevationTile(h,T);return new l.TileElevationSampler(I,E,void 0)}async function L(e){const r=await y.fetchArcGISServiceJSON(e),{tileInfo:a,cacheType:n}=r;if(!r.hasOwnProperty("bandCount")||!r.hasOwnProperty("pixelSizeX"))throw new t("elevation-source:invalid-service-url",`ElevationSource URL expects an elevation 3D image service but given ${e}`);return"LERC"!==a?.format?.toUpperCase()||n&&"elevation"!==n.toLowerCase()?h.DYNAMIC:h.ELEVATION}function A(e,t){return async r=>{let a=r.clone();const n=r.spatialReference.equals(e.spatialReference)?a:await i.projectWithZConversion(r,e.spatialReference,t),o=e.queryElevation(n);if(o){a=r.spatialReference.equals(e.spatialReference)?o.clone():await i.projectWithZConversion(o,r.spatialReference,t)}return a.z=a.z??1,a}}async function R(e,t,r=!0,a){if(await n.waitTick(a),r)return e.map((e=>(e.z=t,e)));for(const n of e)n.z=t;return e}e.getElevationSampler=T,e.updateUsingCameraProperties=E,e.updateUsingConstant=R,e.updateUsingElevationSampler=d,e.updateUsingElevationSource=m,e.validateElevationSourceURL=L,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
