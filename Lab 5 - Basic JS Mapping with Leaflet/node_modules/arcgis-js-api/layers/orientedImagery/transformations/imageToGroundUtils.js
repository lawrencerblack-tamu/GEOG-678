/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../geometry","../../../core/mathUtils","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../chunks/vec32","../../../geometry/Point","../../../geometry/projection","../../../geometry/support/ray","../../../chunks/sphere","../../../geometry/support/webMercatorUtils","../core/coverageUtils","../core/ExposurePoint","./groundToImageUtils","./utils","../../../widgets/PanoramicViewer/constants","../../../widgets/support/dataUtils","../../../geometry/SpatialReference","../../../geometry/Polygon"],(function(e,t,a,r,n,i,o,c,s,l,f,y,p,x,z,u,h,m){"use strict";function g(e,t){if(!e)return Promise.resolve([]);const a=t.feature;let r=a.attributes;return r instanceof y||(r=y.fromJSON(a),r&&(a.attributes=r)),w(e,t)}function w(e,t){const{attributes:a}=t.feature;if(a.isSpherical||360===a.horizontalFieldOfView){const{location:r,cameraOrientation:n,farDistance:i,cameraHeading:o,cameraHeight:c}=a;return R(e,r,i,[t.imageProperties.width,t.imageProperties.height],o,c,n)}return d(e,t)}async function R(e,t,a,n,o,f,y){let p=new i(t);const h=x.getWebMercatorScalingFactor(p);p.spatialReference.isGeographic&&p.spatialReference.isWGS84&&4!==y?.type&&(p=l.geographicToWebMercator(p));const m=new Array,[g,w,R]=p.toArray(),d=s.fromCenterAndRadius([g,w,R??0],a/h),b=z.defaultImageSphereCenter.toArray();for(const l of e){let e,t;if(u.isNumber(l.heading)&&u.isNumber(l.pitch))e=l.heading,t=l.pitch;else{const a=x.convertPixelToHeadingPitch({x:l.x,y:l.y},n[0],n[1]);e=a.heading,t=a.pitch}e=(e+o)%360;const a=c.fromPoints([b[0],b[1],b[2]],x.convertHeadingPitchToSphereVertex(e,t)),y=c.fromValues([g,w,R??0],a.direction),z=r.create();s.intersectRay(d,y,z);const P=(p.z??0)-f;if(z[2]<P){const e=Math.abs((p.z-P)/-a.direction[2])*h;x.scaleAndAddWithFactor([p.x,p.y,p.z],a.direction,e,h,z)}else z[2]=P;m.push(new i(z,p.spatialReference))}return m}async function d(e,t){const{feature:a}=t,{attributes:r}=a;let n=new i(r.location);if(4===r.cameraOrientation?.type){const e=r.cameraOrientation;n=new i(x.ltpToGeographic(n,[e.latitude,e.longitude,e.ellipsoidRadius,e.squaredEccentricity]))}let c=!1;n.spatialReference.isWGS84&&(c=!0,n=l.geographicToWebMercator(n));const s=n.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*n.y/6378137))):1,f=P(t,n,s),y=4===r.cameraOrientation?.type?f.map((e=>l.webMercatorToGeographic(new i(e)))):f,z=await p.transformPoints(y,t,!0),u=await Promise.all(z);u.forEach((e=>{e.z=1}));const h=x.computeHFOVAndVFOV(r.horizontalFieldOfView,r.verticalFieldOfView,r.cameraRoll??0).vfov;return Promise.all(e.map((async e=>{e.z=1;let a,f=x.projectiveTransform2(e,u,y);if(a=4===r.cameraOrientation?.type?(await p.transformPoints([l.webMercatorToGeographic(new i({...f,spatialReference:n.spatialReference}))],t,!0))[0]:(await p.transformPoints([new i({...f,spatialReference:n.spatialReference})],t,!0))[0],!a)return null;let z,g=Math.abs(e.x-a.x)+Math.abs(e.y-a.y);if(g>1){const r=await T(e,a,u,y,n,f,t);f=r.point,g=r.error}if(r.elevationSource){await o.initializeProjection(n.spatialReference,t.footprintExtent.spatialReference,null,t.options);let a=await M(t);if(a?.extent){let y=O(a,n,f);if(!y)return null;const x={x:y.x,y:y.y,z:y.z,hasZ:!0,spatialReference:n.spatialReference},u=new i(x);if(y){const x=o.project(u,t.footprintExtent.spatialReference),g=p.updateElevation([x],t,!1);let w;w=g instanceof Promise?await g:g,u.z=y.z=w[0].z;const R=await p.transformPoints([4===r.cameraOrientation?.type?l.webMercatorToGeographic(u):u],t);if(!R[0])return null;let d=Math.abs(e.x-R[0].x)+Math.abs(e.y-R[0].y);if(z=y.z,d>1){let x=0;const u=async g=>{if(d>1){const w=g.width/10,R=g.height/10;if(!g||w<1||R<1)return f=b(f,n,s,z,r.cameraPitch,h,c),f;const P=[{x:y.x-w,y:y.y-R,spatialReference:n.spatialReference},{x:y.x+w,y:y.y-R,spatialReference:n.spatialReference},{x:y.x+w,y:y.y+R,spatialReference:n.spatialReference},{x:y.x-w,y:y.y+R,spatialReference:n.spatialReference}].map((e=>new i(e))),M=await p.updateElevation(P,t,!1);if(a=new m({rings:[[[M[0].x,M[0].y,M[0].z],[M[1].x,M[1].y,M[1].z],[M[2].x,M[2].y,M[2].z],[M[3].x,M[3].y,M[3].z],[M[0].x,M[0].y,M[0].z]]],spatialReference:n.spatialReference}),y=O(a,n,f),y){const m=o.project(new i({x:y.x,y:y.y,z:y.z,spatialReference:n.spatialReference}),t.footprintExtent.spatialReference),g=await p.transformPoints([4===r.cameraOrientation?.type?l.webMercatorToGeographic(m):m],t);if(g[0])return d=Math.abs(e.x-g[0].x)+Math.abs(e.y-g[0].y),z=y.z,d<=1||8===x?b(f,n,s,z,r.cameraPitch,h,c):(x+=1,u(a.extent))}return b(f,n,s,n.z-r.cameraHeight,r.cameraPitch,h,c)}return b(f,n,s,n.z-r.cameraHeight,r.cameraPitch,h,c)};return u(a.extent)}return b(f,n,s,n.z-r.cameraHeight,r.cameraPitch,h,c)}return b(f,n,s,n.z-r.cameraHeight,r.cameraPitch,h,c)}}return b(f,n,s,n.z-r.cameraHeight,r.cameraPitch,h,c)})))}function b(e,t,a,o,c,s,f){const y=Math.sqrt((e.z-t.z)**2+(Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2)/a)**2)*a,p=x.scaleWithFactor(n.sub(r.zeros(),[e.x,e.y,e.z],[t.x,t.y,t.z]),1/y,1/a);if(e.z<o||c+s/2<90){const r=Math.abs((t.z-o)/-p[2])*a,n=x.scaleAndAddWithFactor([t.x,t.y,t.z],p,r,a);e={x:n[0],y:n[1],z:n[2]}}else e.z=o;return e.spatialReference=t.spatialReference,e=new i(e),f&&(e=l.webMercatorToGeographic(e)),e}function P(e,t,o){const{feature:c}=e,{attributes:s}=c,l=2*Math.tan(a.deg2rad(s.verticalFieldOfView)/2)*s.farDistance*o,f=2*Math.tan(a.deg2rad(s.horizontalFieldOfView)/2)*s.farDistance*o,y=x.calculateRotationMatrix("HPR",[s.cameraHeading,s.cameraPitch,s.cameraRoll??0]),p=x.transformMat3([0,0,-1],y),z=x.scaleAndAddWithFactor([t.x,t.y,t.z],p,s.farDistance*o,o),u=x.transformMat3([0,1,0],y),h=x.transformMat3([1,0,0],y),m=x.scaleWithFactor(u,l/2,o),g=x.scaleWithFactor(h,f/2,o),w=n.sub(r.zeros(),m,g),R=n.add(r.zeros(),m,g);return[n.add(r.zeros(),z,w),n.add(r.zeros(),z,R),n.sub(r.zeros(),z,w),n.sub(r.zeros(),z,R)].map((e=>{const[a,r,n]=e;return new i({x:a,y:r,z:n,spatialReference:t.spatialReference})}))}function M(e){const{feature:t}=e,{polygon:a}=f.createCoveragePolygon(e.feature);if(!a.extent)return Promise.resolve(null);const r=v(a.extent),n=t.attributes.location.spatialReference.isWGS84?new h({wkid:102100}):t.attributes.location.spatialReference;return p.updateElevation(r,e,!1).then((e=>{const t=e.map((e=>o.project(e,n)));return new m({hasZ:!0,rings:[t.map((e=>[e.x,e.y,e.z]))],spatialReference:n})}))}function v(e){const{xmin:t,xmax:a,ymin:r,ymax:n,spatialReference:o}=e;return[new i({x:t,y:n,spatialReference:o}),new i({x:a,y:n,spatialReference:o}),new i({x:a,y:r,spatialReference:o}),new i({x:t,y:r,spatialReference:o})]}async function T(e,t,a,r,n,o,c){const{feature:{attributes:s}}=c;let f=Math.abs(e.x-t.x)+Math.abs(e.y-t.y);if(f>1)for(let y=0;y<9;y++)if(f>1){let t,z={x:e.x-f,y:e.y-f,z:1},u={x:e.x+f,y:e.y-f,z:1},h={x:e.x+f,y:e.y+f,z:1},m={x:e.x-f,y:e.y+f,z:1};z=x.projectiveTransform(z,a[0],a[1],a[2],a[3],{x:r[0].x,y:r[0].y,z:r[0].z},{x:r[1].x,y:r[1].y,z:r[1].z},{x:r[2].x,y:r[2].y,z:r[2].z},{x:r[3].x,y:r[3].y,z:r[3].z}),u=x.projectiveTransform(u,a[0],a[1],a[2],a[3],{x:r[0].x,y:r[0].y,z:r[0].z},{x:r[1].x,y:r[1].y,z:r[1].z},{x:r[2].x,y:r[2].y,z:r[2].z},{x:r[3].x,y:r[3].y,z:r[3].z}),h=x.projectiveTransform(h,a[0],a[1],a[2],a[3],{x:r[0].x,y:r[0].y,z:r[0].z},{x:r[1].x,y:r[1].y,z:r[1].z},{x:r[2].x,y:r[2].y,z:r[2].z},{x:r[3].x,y:r[3].y,z:r[3].z}),m=x.projectiveTransform(m,a[0],a[1],a[2],a[3],{x:r[0].x,y:r[0].y,z:r[0].z},{x:r[1].x,y:r[1].y,z:r[1].z},{x:r[2].x,y:r[2].y,z:r[2].z},{x:r[3].x,y:r[3].y,z:r[3].z}),z.spatialReference=n.spatialReference,u.spatialReference=n.spatialReference,h.spatialReference=n.spatialReference,m.spatialReference=n.spatialReference,t=4===s.cameraOrientation?.type?await p.transformPoints([l.webMercatorToGeographic(new i(z)),l.webMercatorToGeographic(new i(u)),l.webMercatorToGeographic(new i(h)),l.webMercatorToGeographic(new i(m))],c,!0):await p.transformPoints([new i(z),new i(u),new i(h),new i(m)],c,!0);const g=await Promise.all(t);g.forEach((e=>{e.z=0}));const w=x.projectiveTransform(e,g[0],g[1],g[2],g[3],z,u,h,m);let R;if(R=4===s.cameraOrientation?.type?(await p.transformPoints([l.webMercatorToGeographic(new i({x:w.x,y:w.y,z:w.z,spatialReference:n.spatialReference}))],c,!0))[0]:(await p.transformPoints([new i({x:w.x,y:w.y,z:w.z,spatialReference:n.spatialReference})],c,!0))[0],f=Math.abs(e.x-R.x)+Math.abs(e.y-R.y),f<=1||8===y){o=w;break}}return{error:f,point:o}}function O(e,t,a){const r={x:e.rings[0][0][0],y:e.rings[0][0][1],z:e.rings[0][0][2]},n={x:e.rings[0][1][0],y:e.rings[0][1][1],z:e.rings[0][1][2]},i={x:e.rings[0][1][0],y:e.rings[0][1][1],z:e.rings[0][1][2]},o={x:e.rings[0][2][0],y:e.rings[0][2][1],z:e.rings[0][2][2]},c=(o.z-i.z)*(n.y-r.y)-(o.y-i.y)*(n.z-r.z),s=-((o.z-i.z)*(n.x-r.x)-(n.z-r.z)*(o.x-i.x)),l=(o.y-i.y)*(n.x-r.x)-(n.y-r.y)*(o.x-i.x),f=-(c*r.x+s*r.y+l*r.z);return x.getPlaneLineIntersectionPoint(t.toJSON(),a,c,s,l,f)}e.transformPoints=g,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
