/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../chunks/tslib.es6","../../request","../../core/Error","../../core/Logger","../../core/promiseUtils","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/originUtils","../../geometry/Extent","../../geometry/HeightModelInfo","../../geometry/SpatialReference","../support/arcgisLayerUrl","../support/commonProperties","../support/I3SIndexInfo","../support/schemaValidatorLoader","../../portal/Portal","../../portal/PortalItem","../../portal/support/jsonContext","../../webdoc/support/resourceUtils","../../webdoc/support/saveAPIKeyUtils","../../webdoc/support/saveUtils"],(function(e,t,r,a,o,i,s,n,l,p,c,d,u,y,h,m,v,f,S,g,_,w,I,x,b,T,R){"use strict";const A=l=>{let p=class extends l{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=i.debounce((async(t,r,a)=>{switch(t){case e.SaveOperationType.SAVE:return this._save(r);case e.SaveOperationType.SAVE_AS:return this._saveAs(a,r)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return v.fromJSON(e.spatialReference);const t=e.store,r=t.indexCRS||t.geographicCRS,a=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=a?new v(a):null}readFullExtent(e,t,r){if(null!=e&&"object"==typeof e){const a=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return h.fromJSON(a,r)}const a=t.store,o=this._readSpatialReference(t);return null==o||null==a?.extent||!Array.isArray(a.extent)||a.extent.some((e=>e<E))?null:new h({xmin:a.extent[0],ymin:a.extent[1],xmax:a.extent[2],ymax:a.extent[3],spatialReference:o})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},r=e.split(".");return r.length>=2&&(t.major=parseInt(r[0],10),t.minor=parseInt(r[1],10)),t}readVersion(e,t){const r=t.store,a=null!=r.version?r.version.toString():"";return this.parseVersionString(a)}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem?.title;if("item-title"===this.sublayerTitleMode)return f.titleFromUrlAndName(this.url,t.name);let a=t.name;if(!a&&this.url){const e=f.parse(this.url);null!=e&&(a=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(a=r+" - "+a),f.cleanTitle(a)}set url(e){const t=f.sanitizeUrlWithLayerId({layer:this,url:e,nonStandardUrlAllowed:!1,logger:o.getLogger(this)});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,a){f.writeUrlWithLayerId(this,e,"layers",t,a)}get parsedUrl(){const e=this._get("url"),t=s.urlToObject(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=g.fetchIndexInfo(this.parsedUrl.path,this.rootNode,e,this.customParameters,this.apiKey,o.getLogger(this),t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===e?.type){const t=e.rootIndex%e.pageSize,r=e.rootPage?.nodes?.[t];if(null==r?.obb?.center||null==r.obb.halfSize)throw new a("sceneservice:invalid-node-page","Invalid node page.");if(r.obb.center[0]<E||null==this.fullExtent||this.fullExtent.hasZ)return;const o=r.obb.halfSize,i=r.obb.center[2],s=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2]);this.fullExtent.zmin=i-s,this.fullExtent.zmax=i+s}else if("node"===e?.type){const t=e.rootNode?.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<E)return;const r=t[2],a=t[3],{fullExtent:o}=this;o&&(o.zmin=r-a,o.zmax=r+a)}}async _fetchService(e){if(null==this.url)throw new a("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await r(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await r(this.parsedUrl?.path??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let a=!1;if(t.data.layerType&&"Voxel"===t.data.layerType&&(a=!0),a)return this._fetchVoxelServiceLayer();const o=t.data;this.read(o,this._getServiceContext()),this.validateLayer(o)}async _fetchVoxelServiceLayer(e){const t=(await r(this.parsedUrl?.path+"/layer",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}_getServiceContext(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const a=t.getTypeKeywords();for(const o of a)e.typeKeywords.push(o);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),r===N.newItem&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r={...L,...t};let o=I.from(e);if(!o)throw new a("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");T.validateSaveAPIKey(o),o.id&&(o=o.clone(),o.id=null);const i=o.portal||w.getDefault();await this._ensureLoadBeforeSave(),o.type=O,o.portal=i;const s=x.createForItemWrite(o,"portal-item",!0),n={layers:[this.write({},s)]};return await Promise.all(s.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(n,s,r),o.url=this.url,o.title||(o.title=this.title),this._updateTypeKeywords(o,r,N.newItem),await i.signIn(),await(i.user?.addItem({item:o,folder:r?.folder,data:n})),await b.saveResources(this.resourceReferences,s),this.portalItem=o,y.updateOrigins(s),s.portalItem=o,o}async _save(e){const t={...L,...e};if(!this.portalItem)throw new a("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(T.validateSaveAPIKey(this.portalItem),this.portalItem.type!==O)throw new a("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${O}"`);await this._ensureLoadBeforeSave();const r=x.createForItemWrite(this.portalItem,"portal-item",!0),o={layers:[this.write({},r)]};return await Promise.all(r.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(o,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,N.existingItem),await b.updateItemWithResources(this.portalItem,o,this.resourceReferences,r),y.updateOrigins(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){const i=r?.validationOptions;R.evaluateWriteErrors(t,{errorName:"sceneservice:save"},{ignoreUnsupported:i?.ignoreUnsupported,supplementalUnsupportedErrors:["scenemodification:unsupported"]});const s=i?.enabled,n=_.getLoader();if(s&&n){const t=(await n()).validate(e,r.portalItemLayerType);if(!t.length)return;const s=`Layer item did not validate:\n${t.join("\n")}`;if(o.getLogger(this).error(`_validateAgainstJSONSchema(): ${s}`),"throw"===i.failPolicy){const e=t.map((e=>new a("sceneservice:schema-validation",e)));throw new a("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{validationErrors:e})}}}};return t.__decorate([n.property(S.id)],p.prototype,"id",void 0),t.__decorate([n.property({type:v})],p.prototype,"spatialReference",void 0),t.__decorate([c.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],p.prototype,"readSpatialReference",null),t.__decorate([n.property({type:h})],p.prototype,"fullExtent",void 0),t.__decorate([c.reader("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],p.prototype,"readFullExtent",null),t.__decorate([n.property({readOnly:!0,type:m})],p.prototype,"heightModelInfo",void 0),t.__decorate([n.property({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],p.prototype,"minScale",void 0),t.__decorate([n.property({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],p.prototype,"maxScale",void 0),t.__decorate([n.property({readOnly:!0})],p.prototype,"version",void 0),t.__decorate([c.reader("version",["store.version"])],p.prototype,"readVersion",null),t.__decorate([n.property({type:String,json:{read:{source:"copyrightText"}}})],p.prototype,"copyright",void 0),t.__decorate([n.property({type:String,json:{read:!1}})],p.prototype,"sublayerTitleMode",void 0),t.__decorate([n.property({type:String})],p.prototype,"title",void 0),t.__decorate([c.reader("portal-item","title")],p.prototype,"readTitlePortalItem",null),t.__decorate([c.reader("service","title",["name"])],p.prototype,"readTitleService",null),t.__decorate([n.property({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],p.prototype,"layerId",void 0),t.__decorate([n.property(S.url)],p.prototype,"url",null),t.__decorate([u.writer("url")],p.prototype,"writeUrl",null),t.__decorate([n.property()],p.prototype,"parsedUrl",null),t.__decorate([n.property({readOnly:!0})],p.prototype,"store",void 0),t.__decorate([n.property({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],p.prototype,"rootNode",void 0),p=t.__decorate([d.subclass("esri.layers.mixins.SceneService")],p),p},E=-1e38;var N;!function(e){e[e.existingItem=0]="existingItem",e[e.newItem=1]="newItem"}(N||(N={}));const O="Scene Service",L={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var U;e.SaveOperationType=void 0,(U=e.SaveOperationType||(e.SaveOperationType={}))[U.SAVE=0]="SAVE",U[U.SAVE_AS=1]="SAVE_AS",e.SceneService=A,e.sceneServiceItemType=O,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
