/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","../chunks/tslib.es6","../core/Clonable","../core/Collection","../core/Error","../core/loadAll","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/sql","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/EditBusLayer","./mixins/FeatureLayerBase","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./support/arcgisLayerUrl","./support/commonProperties","./support/featureLayerUtils","./support/fieldProperties","./support/fieldUtils","./support/SubtypeSublayer","./support/TimeInfo","./support/versionUtils","../rest/support/Query","../webdoc/interfaces"],(function(e,t,r,s,i,o,a,n,u,l,p,y,d,c,h,b,m,f,g,S,_,v,w,L,F,x,E,O,A,I,P,C,T,q,j,G,R,M,U){"use strict";const $=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),N="SubtypeGroupLayer",V="esri.layers.SubtypeGroupLayer";function k(e,t){return new i("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}const Q=T.defineFieldProperties();let B=class extends(L.FeatureLayerBase(w.EditBusLayer(_.BlendLayer(A.TemporalLayer(O.ScaleRangeLayer(E.RefreshableLayer(S.ArcGISService(F.OperationalLayer(x.PortalLayer(a.MultiOriginJSONMixin(v.CustomParametersMixin(g.APIKeyMixin(r.ClonableMixin(f)))))))))))))){constructor(...t){super(...t),this._sublayerLookup=new Map,this.fields=null,this.fieldsIndex=null,this.outFields=null,this.sublayers=new(s.ofType(j)),this.timeInfo=null,this.title="Layer",this.type="subtype-group",this._debouncedSaveOperations=n.debounce((async(t,r,s)=>{const{save:i,saveAs:o}=await new Promise(((t,r)=>e(["./save/featureLayerUtils"],t,r)));switch(t){case U.SaveOperationType.SAVE:return i(this,r);case U.SaveOperationType.SAVE_AS:return o(this,s,r)}})),this.addHandles(u.watch((()=>this.sublayers),((e,t)=>this._handleSublayersChange(e,t)),u.sync))}destroy(){this.source?.destroy()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null,r=this.loadFromPortal({supportedTypes:["Feature Service"]},e).catch(n.throwIfAbortError).then((async()=>{if(!this.url)throw new i("subtype-grouplayer:missing-url-or-source","SubtypeGroupLayer must be created with either a url or a portal item");if(null==this.layerId)throw new i("subtype-grouplayer:missing-layerid","layerId is required for a SubtypeGroupLayer created with url");return this._initLayerProperties(await this.createGraphicsSource(t))})).then((()=>C.ensureLayerCredential(this,"load",e)));return this.addResolvingPromise(r),Promise.resolve(this)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return this.loaded&&null!=this.capabilities&&this.capabilities.operations.supportsEditing&&this.userHasEditingPrivileges}get effectiveEditingEnabled(){return C.computeEffectiveEditingEnabled(this)}get parsedUrl(){const e=p.urlToObject(this.url);return null!=e&&null!=this.layerId&&(e.path=p.join(e.path,this.layerId.toString())),e}set source(e){this._get("source")!==e&&this._set("source",e)}readTitleFromService(e,{name:t}){return this.url?I.titleFromUrlAndName(this.url,t):t}async addAttachment(e,t){return C.addAttachment(this,e,t,N)}async updateAttachment(e,t,r){return C.updateAttachment(this,e,t,r,N)}async applyEdits(e,t){return C.applyEdits(this,e,t)}on(e,t){return super.on(e,t)}async createGraphicsSource(t){const{default:r}=await n.whenOrAbort(new Promise(((t,r)=>e(["./graphics/sources/FeatureLayerSource"],(e=>t($(e))),r))),t);return new r({layer:this}).load({signal:t})}createQuery(){const e=C.createQuery(this),t=this.sublayers.map((e=>e.subtypeCode));return e.where=l.sqlAnd(`${this.subtypeField} IN (${t.join(",")})`,this.definitionExpression),e}async deleteAttachments(e,t){return C.deleteAttachments(this,e,t,N)}async fetchRecomputedExtents(e){return C.fetchRecomputedExtents(this,e,N)}findSublayerForFeature(e){const t=this.fieldsIndex.get(this.subtypeField),r=e.attributes[t.name];return this.findSublayerForSubtypeCode(r)}findSublayerForSubtypeCode(e){return this._sublayerLookup.get(e)}getFieldDomain(e,t){return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}loadAll(){return o.loadAll(this,(e=>{e(this.sublayers)}))}async queryAttachments(e,t){return C.queryAttachments(this,e,t,N)}async queryFeatures(e,t){const r=await this.load(),s=M.from(e)??r.createQuery(),i=s.outFields??[];i.includes(this.subtypeField)||(i.push(this.subtypeField),s.outFields=i);const o=await r.source.queryFeatures(s,t);if(o?.features)for(const a of o.features)a.layer=a.sourceLayer=this.findSublayerForFeature(a);return o}async queryObjectIds(e,t){return C.queryObjectIds(this,e,t,N)}async queryFeatureCount(e,t){return C.queryFeatureCount(this,e,t,N)}async queryExtent(e,t){return C.queryExtent(this,e,t,N)}async queryRelatedFeatures(e,t){return C.queryRelatedFeatures(this,e,t,N)}async queryRelatedFeaturesCount(e,t){return C.queryRelatedFeaturesCount(this,e,t,N)}async save(e){return this._debouncedSaveOperations(U.SaveOperationType.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(U.SaveOperationType.SAVE_AS,t,e)}write(e,t){const{origin:r,layerContainerType:s,messages:o}=t;if(this.isTable){if("web-scene"===r||"web-map"===r&&"tables"!==s)return o?.push(k(this,"using a table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&"web-map"===r&&"tables"===s)return o?.push(k(this,"using a non-table source cannot be written to tables in web maps")),null;return this.sublayers?.length?super.write(e,t):(o?.push(new i("web-document-write:invalid-property",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' has invalid value for 'sublayers' property. 'sublayers' collection should contain at least one sublayer`,{layer:this})),null)}serviceSupportsSpatialReference(e){return!!this.loaded&&R.serviceSupportsSpatialReference(this,e)}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}async _initLayerProperties(e){this._set("source",e);const{sourceJSON:t}=e;if(t&&(this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})),this.isTable)throw new i("subtype-grouplayer:unsupported-source","SubtypeGroupLayer cannot be created using a layer with table source");if(!this.subtypes?.length)throw new i("subtype-grouplayer:missing-subtypes","SubtypeGroupLayer must be created using a layer with subtypes");this._verifyFields(),q.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)}async hasDataChanged(){return C.hasDataChanged(this)}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("SubtypeGroupLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||-1!==e.search(/\/FeatureServer\//i)||this.fields?.some((e=>"geometry"===e.type))||console.log("SubtypeGroupLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null})),this.removeHandles("sublayers-owner"),this._sublayerLookup.clear()),e&&(e.forEach((e=>{e.parent=this,this._sublayerLookup.set(e.subtypeCode,e)})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this,this._sublayerLookup.set(e.subtypeCode,e)})),e.on("after-remove",(({item:e})=>{e.parent=null,this._sublayerLookup.delete(e.subtypeCode)}))],"sublayers-owner"))}};t.__decorate([y.property({readOnly:!0})],B.prototype,"createQueryVersion",null),t.__decorate([y.property({readOnly:!0})],B.prototype,"editingEnabled",null),t.__decorate([y.property({readOnly:!0})],B.prototype,"effectiveEditingEnabled",null),t.__decorate([y.property({...Q.fields,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],B.prototype,"fields",void 0),t.__decorate([y.property(Q.fieldsIndex)],B.prototype,"fieldsIndex",void 0),t.__decorate([y.property(P.id)],B.prototype,"id",void 0),t.__decorate([y.property({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],B.prototype,"listMode",void 0),t.__decorate([y.property({value:"SubtypeGroupLayer",type:["SubtypeGroupLayer"],json:{origins:{"portal-item":{name:"layerType",write:{enabled:!0,ignoreOrigin:!0}}}}})],B.prototype,"operationalLayerType",void 0),t.__decorate([y.property(Q.outFields)],B.prototype,"outFields",void 0),t.__decorate([y.property({readOnly:!0})],B.prototype,"parsedUrl",null),t.__decorate([y.property({clonable:!1})],B.prototype,"source",null),t.__decorate([y.property({type:s.ofType(j),json:{origins:{service:{read:{source:"subtypes",reader:(e,t,r)=>{const i=e.map((({code:e})=>{const s=new j({subtypeCode:e});return s.read(t,r),s}));return new(s.ofType(j))(i)}}}},name:"layers",write:{ignoreOrigin:!0}}})],B.prototype,"sublayers",void 0),t.__decorate([y.property({type:G})],B.prototype,"timeInfo",void 0),t.__decorate([y.property({json:{origins:{"portal-item":{write:{enabled:!0,ignoreOrigin:!0,writerEnsuresNonNull:!0}}}}})],B.prototype,"title",void 0),t.__decorate([b.reader("service","title",["name"])],B.prototype,"readTitleFromService",null),t.__decorate([y.property({json:{read:!1}})],B.prototype,"type",void 0),B=t.__decorate([m.subclass(V)],B);return B}));
