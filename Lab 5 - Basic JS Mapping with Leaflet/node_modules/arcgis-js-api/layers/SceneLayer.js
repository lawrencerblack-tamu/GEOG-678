/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","../chunks/tslib.es6","../Graphic","../PopupTemplate","../renderers/ClassBreaksRenderer","../renderers/DictionaryRenderer","../renderers/DotDensityRenderer","../renderers/HeatmapRenderer","../renderers/PieChartRenderer","../renderers/Renderer","../renderers/SimpleRenderer","../renderers/UniqueValueRenderer","../renderers/support/jsonUtils","../renderers/support/types","../request","../core/Clonable","../core/Collection","../core/Error","../core/Logger","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/RandomLCG","../core/accessorSupport/utils","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/PropertyOrigin","../geometry/Mesh","../geometry/Point","./Layer","./graphics/sources/support/uploadAssetErrors","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/CustomParametersMixin","./mixins/EditBusLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/SceneService","./mixins/TemporalSceneLayer","./support/arcgisLayerUrl","./support/associatedFeatureServiceUtils","./support/capabilities","./support/commonProperties","./support/featureLayerUtils","./support/FeatureReduction","./support/FeatureReductionSelection","./support/fieldProperties","./support/FieldsIndex","./support/fieldUtils","./support/I3SLayerDefinitions","./support/infoFor3D","./support/LabelClass","./support/labelingInfo","./support/LayerFloorInfo","./support/lazyLayerLoader","./support/RangeInfo","./support/SceneFilter","../renderers/support/styleUtils","../rest/support/Query","../support/elevationInfoUtils","../support/featureFlags","../support/popupUtils","../support/zipUtils","../views/3d/layers/i3s/I3SUtil","../views/layers/support/popupUtils","../webdoc/support/opacityUtils"],(function(e,t,r,i,s,o,a,n,l,p,d,y,c,u,h,f,g,m,v,_,b,I,w,L,F,S,E,P,O,A,x,T,D,j,R,U,q,C,G,M,N,Q,k,V,K,H,$,z,W,B,Z,J,X,Y,ee,te,re,ie,se,oe,ae,ne,le,pe,de,ye,ce,ue,he,fe){"use strict";const ge=new Set(["3DObject","Point"]),me=Z.defineFieldProperties();let ve=class extends(k.TemporalSceneLayer(C.EditBusLayer(Q.SceneService(U.ArcGISService(G.OperationalLayer(M.PortalLayer(N.ScaleRangeLayer(_.MultiOriginJSONMixin(q.CustomParametersMixin(R.APIKeyMixin(f.ClonableMixin(D)))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new g,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._set("renderer",null)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getFeatureType(t?.feature)?.domains?.[e];return r&&"inherited"!==r.type?r:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new J(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:Y.I3SNodePageDefinition.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return null!=this.associatedLayer&&z.computeEffectiveEditingEnabled(this.associatedLayer)}get geometryType(){return be[this.profile]||"mesh"}set renderer(e){X.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=null!=e?e:H.zeroCapabilities;const{query:t,queryRelated:r,editing:{supportsGlobalId:i,supportsRollbackOnFailure:s,supportsUploadWithItemId:o,supportsGeometryUpdate:a,supportsReturnServiceEditsInSourceSpatialReference:n},data:{supportsZ:l,supportsM:p,isVersioned:d,supportsAttachment:y},operations:{supportsEditing:c,supportsAdd:u,supportsUpdate:h,supportsDelete:f,supportsQuery:g,supportsQueryAttachments:m,supportsAsyncConvert3D:v}}=e,_=e.operations.supportsChangeTracking,b=!!this.associatedLayer?.infoFor3D&&de.sceneLayerEditingEnabled();return{query:t,queryRelated:r,editing:{supportsGlobalId:i,supportsReturnServiceEditsInSourceSpatialReference:n,supportsRollbackOnFailure:s,supportsGeometryUpdate:b&&a,supportsUploadWithItemId:o},data:{supportsAttachment:y,supportsZ:l,supportsM:p,isVersioned:d},operations:{supportsQuery:g,supportsQueryAttachments:m,supportsEditing:c&&_,supportsAdd:b&&u&&_,supportsDelete:b&&f&&_,supportsUpdate:h&&_,supportsAsyncConvert3D:v}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return null!=r&&_e[r]?_e[r]:(v.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=null!=e?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(b.throwIfAbortError),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await ne.loadStyleRenderer(this,{origin:"service"},t),X.fixRendererFields(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){v.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new le;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new m("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new m("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=X.unpackFieldNames(this.fieldsIndex,await he.getRequiredFields(this,he.getFetchPopupTemplate(this)));return ue.queryAttributesFromCachedAttributesId(this.parsedUrl.path,this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const i=await this.queryCachedAttributes(e,[t]);if(!i||0===i.length)throw new m("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const s=new r;return s.attributes=i[0],s.layer=this,s.sourceLayer=this,s}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(v.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return ye.createPopupTemplate(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new m("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new m("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new m("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new m("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const i of this.statisticsInfo)if(i.name===r.name){const e=w.join(this.parsedUrl.path,i.href);return h(e,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new m("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(Q.SaveOperationType.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(Q.SaveOperationType.SAVE,e)}async applyEdits(t,r){const{applyEdits:i}=await new Promise(((t,r)=>e(["./graphics/editingSupport"],t,r)));let s=r;await this.load();const o=this.associatedLayer;if(!o)throw new m(`${this.type}-layer:not-editable`,"Service is not editable");await o.load();const{globalIdField:a}=o,n=!!o.infoFor3D,l=s?.globalIdUsed??!0;if(n&&null==a)throw new m(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(n&&!l)throw new m(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return V.isHostedAgolService(o.url)&&n&&null!=t.deleteFeatures&&null!=a&&(s={...s,globalIdToObjectId:await z.getGlobalIdToObjectIdMap(o,t.deleteFeatures,a)}),i(this,o.source,t,s)}async uploadAssets(e,t){if(await this.load(),null==this.associatedLayer)throw new m(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){const r=e=>{throw v.getLogger(this).error(".convertMesh()",e.message),e};await this.load(),this.infoFor3D||r(new m("invalid:layer","SceneLayer has no capability for mesh conversion"));const i=await this.extractAndFilterFiles(e),s=i.reduce(((e,t)=>ee.isFileEditFormat(this.infoFor3D,t)?e+1:e),0);0===s&&r(new j.NoModelError),s>1&&r(new j.MultipleModelsError);const o=this.spatialReference,a=t?.location??new T({x:0,y:0,z:0,spatialReference:o}),n=a.spatialReference.isGeographic?"local":"georeferenced",l=x.createWithExternalSource(a,i,{vertexSpace:n}),[p]=await this.uploadAssets([l],t);return p}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;if(!t)return e;return(await ce.extractZipFiles(e)).filter((e=>ee.isFileSupported(t,e)))}validateLayer(e){if(e.layerType&&!ge.has(e.layerType))throw new m("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new m("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new m("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else{const s=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=s;break;case"vertex-reference-frame":r=!0,i=!s;break;default:r=!1}}if(!r)throw new m("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new m("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new m("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!this.associatedLayer?.fields?.some((t=>t&&e.name===t.name)),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=E.getProperties(this);for(let r=0;r<e.length;r++){const i=e[r],s=this.originIdOf(i),o=this.associatedLayer.originIdOf(i);s<o&&(o===A.OriginId.SERVICE||o===A.OriginId.PORTAL_ITEM)&&t.setAtOrigin(i,this.associatedLayer[i],o)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.editingInfo?.lastEditDate,t=this.associatedLayer?.serverGens,r=this.associatedLayer?.getAtOrigin("fullExtent","service");if(!de.sceneLayerEditingEnabled()||null==this.associatedLayer?.infoFor3D||!r||!V.isHostedAgolService(this.associatedLayer?.url)||!e||this.serviceUpdateTimeStamp?.lastUpdate===e.getTime()||!this.serviceUpdateTimeStamp&&t?.minServerGen===t?.serverGen)return;E.getProperties(this).setAtOrigin("fullExtent",r.clone(),A.OriginId.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:i}=await K.findAssociatedFeatureService(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),s=await se.layerLookupMap.FeatureLayer();this.associatedLayer=new s({url:t,customParameters:this.customParameters,layerId:r,portalItem:i}),await this.associatedLayer.load()}catch(t){b.isAbortError(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await I.whenOnce((()=>this.popupEnabled&&null!=this.popupTemplate));const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?v.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):v.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;"mesh-pyramids"===this.profile&&pe.logInvalidElevationInfoWarning(v.getLogger(this),pe.elevationModeUnsupportedMessage("Mesh scene layers","relative-to-scene",e)),pe.logInvalidElevationInfoWarning(v.getLogger(this),pe.featureExpressionUnsupportedMessage("Scene layers",e))}};t.__decorate([L.property({types:{key:"type",base:W.FeatureReduction,typeMap:{selection:B}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],ve.prototype,"featureReduction",void 0),t.__decorate([L.property({type:[oe.RangeInfo],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],ve.prototype,"rangeInfos",void 0),t.__decorate([L.property({json:{read:!1}})],ve.prototype,"associatedLayer",void 0),t.__decorate([L.property({type:["show","hide"]})],ve.prototype,"listMode",void 0),t.__decorate([L.property({type:["ArcGISSceneServiceLayer"]})],ve.prototype,"operationalLayerType",void 0),t.__decorate([L.property({json:{read:!1},readOnly:!0})],ve.prototype,"type",void 0),t.__decorate([L.property({...me.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ve.prototype,"fields",void 0),t.__decorate([L.property()],ve.prototype,"types",null),t.__decorate([L.property()],ve.prototype,"typeIdField",null),t.__decorate([L.property()],ve.prototype,"templates",null),t.__decorate([L.property()],ve.prototype,"formTemplate",null),t.__decorate([L.property({readOnly:!0,clonable:!1})],ve.prototype,"fieldsIndex",null),t.__decorate([L.property({type:ie,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],ve.prototype,"floorInfo",void 0),t.__decorate([L.property(me.outFields)],ve.prototype,"outFields",void 0),t.__decorate([L.property({type:Y.I3SNodePageDefinition,readOnly:!0,json:{read:!1}})],ve.prototype,"nodePages",void 0),t.__decorate([P.reader("service","nodePages",["nodePages","pointNodePages"])],ve.prototype,"readNodePages",null),t.__decorate([L.property({type:[Y.I3SMaterialDefinition],readOnly:!0})],ve.prototype,"materialDefinitions",void 0),t.__decorate([L.property({type:[Y.I3STextureSetDefinition],readOnly:!0})],ve.prototype,"textureSetDefinitions",void 0),t.__decorate([L.property({type:[Y.I3SGeometryDefinition],readOnly:!0})],ve.prototype,"geometryDefinitions",void 0),t.__decorate([L.property({readOnly:!0})],ve.prototype,"serviceUpdateTimeStamp",void 0),t.__decorate([L.property({readOnly:!0})],ve.prototype,"attributeStorageInfo",void 0),t.__decorate([L.property({readOnly:!0})],ve.prototype,"statisticsInfo",void 0),t.__decorate([L.property({type:g.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],ve.prototype,"excludeObjectIds",void 0),t.__decorate([L.property({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],ve.prototype,"definitionExpression",void 0),t.__decorate([L.property({type:ae,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],ve.prototype,"filter",void 0),t.__decorate([L.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],ve.prototype,"path",void 0),t.__decorate([L.property($.elevationInfo)],ve.prototype,"elevationInfo",null),t.__decorate([L.property({readOnly:!0,json:{read:!1}})],ve.prototype,"effectiveCapabilities",null),t.__decorate([L.property({readOnly:!0})],ve.prototype,"effectiveEditingEnabled",null),t.__decorate([L.property({type:String})],ve.prototype,"geometryType",null),t.__decorate([L.property($.labelsVisible)],ve.prototype,"labelsVisible",void 0),t.__decorate([L.property({type:[te],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:re.reader},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:re.reader},write:!0}})],ve.prototype,"labelingInfo",void 0),t.__decorate([L.property($.legendEnabled)],ve.prototype,"legendEnabled",void 0),t.__decorate([L.property({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return void 0!==r?fe.transparencyToOpacity(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],ve.prototype,"opacity",void 0),t.__decorate([L.property({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ve.prototype,"priority",void 0),t.__decorate([L.property({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ve.prototype,"semantic",void 0),t.__decorate([L.property({types:u.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],ve.prototype,"renderer",null),t.__decorate([L.property({json:{read:!1}})],ve.prototype,"cachedDrawingInfo",void 0),t.__decorate([P.reader("service","cachedDrawingInfo")],ve.prototype,"readCachedDrawingInfo",null),t.__decorate([L.property({readOnly:!0,json:{read:!1}})],ve.prototype,"capabilities",null),t.__decorate([L.property({type:Boolean,json:{read:!1}})],ve.prototype,"editingEnabled",null),t.__decorate([L.property({readOnly:!0,json:{write:!1,read:!1}})],ve.prototype,"infoFor3D",null),t.__decorate([L.property({readOnly:!0,json:{write:!1,read:!1}})],ve.prototype,"relationships",null),t.__decorate([L.property($.popupEnabled)],ve.prototype,"popupEnabled",void 0),t.__decorate([L.property({type:i,json:{name:"popupInfo",write:!0}})],ve.prototype,"popupTemplate",void 0),t.__decorate([L.property({readOnly:!0,json:{read:!1}})],ve.prototype,"defaultPopupTemplate",null),t.__decorate([L.property({type:String,json:{read:!1}})],ve.prototype,"objectIdField",void 0),t.__decorate([P.reader("service","objectIdField",["objectIdField","fields"])],ve.prototype,"readObjectIdField",null),t.__decorate([L.property({type:String,json:{read:!1}})],ve.prototype,"globalIdField",void 0),t.__decorate([P.reader("service","globalIdField",["globalIdField","fields"])],ve.prototype,"readGlobalIdField",null),t.__decorate([L.property({readOnly:!0,type:String,json:{read:!1}})],ve.prototype,"displayField",null),t.__decorate([L.property({type:String,json:{read:!1}})],ve.prototype,"profile",void 0),t.__decorate([P.reader("service","profile",["store.profile"])],ve.prototype,"readProfile",null),t.__decorate([L.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],ve.prototype,"normalReferenceFrame",void 0),t.__decorate([L.property($.screenSizePerspectiveEnabled)],ve.prototype,"screenSizePerspectiveEnabled",void 0),t.__decorate([L.property({json:{read:!1,origins:{service:{read:!0}}}})],ve.prototype,"serviceItemId",void 0),ve=t.__decorate([O.subclass("esri.layers.SceneLayer")],ve);const _e={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},be={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return ve}));
