/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","../chunks/tslib.es6","../Graphic","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/subclass","../layers/FeatureLayer","../layers/support/featureQueryAll","./Network","./RulesTable","./support/NamedTraceConfiguration","./support/NetworkSystemLayers","./support/TerminalConfiguration","./support/TraceJobInfo","./support/typeUtils","../rest/support/Query"],(function(e,t,r,o,s,a,i,n,l,u,d,m,c,y,p,w,f,T){"use strict";const I=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));let b=class extends d{constructor(e){super(e),this.sharedNamedTraceConfigurations=[],this.type="utility"}get serviceTerritoryFeatureLayerId(){return this.dataElement?.serviceTerritoryFeatureLayerId??null}get networkSystemLayers(){return new y({rulesTableId:this.sourceJSON?.systemLayers.rulesTableId,rulesTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.rulesTableId}`:null,subnetworksTableId:this.sourceJSON?.systemLayers.subnetworksTableId,subnetworksTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.subnetworksTableId}`:null,dirtyAreasLayerId:this.sourceJSON?.systemLayers.dirtyAreasLayerId,dirtyAreasLayerUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.dirtyAreasLayerId}`:null,associationsTableId:this.sourceJSON?.systemLayers.associationsTableId,associationsTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.associationsTableId}`:null})}get terminalConfigurations(){return this.dataElement?.terminalConfigurations.map((e=>p.fromJSON(e)))||[]}get domainNetworkNames(){return this.dataElement?.domainNetworks.map((e=>e.domainNetworkName))||[]}get _utilityLayerList(){const e=new Set;return this.dataElement?.domainNetworks?.map((t=>{t.edgeSources.map((t=>{e.add(t.layerId)})),t.junctionSources.map((t=>{e.add(t.layerId)}))})),e}async load(e){return this.addResolvingPromise(super.load(e)),this.addResolvingPromise(this._loadNamedTraceConfigurationsFromNetwork(e)),this}getTerminalConfiguration(e){let t=null,r=null;const o=e.layer;let s=null;if("feature"===o?.type){if(s=o.layerId,null===s)return null}else{if("subtype-sublayer"!==o?.type)return null;if(s=o?.parent?.layerId??null,null===s)return null}const a=e.attributes;if(null==a)return null;for(const l of Object.keys(a))"ASSETGROUP"===l.toUpperCase()&&(t=e.getAttribute(l)),"ASSETTYPE"===l.toUpperCase()&&(r=e.getAttribute(l));if(!this.dataElement)return null;let i=null;const n=this.dataElement.domainNetworks;for(const l of n){const e=l.junctionSources?.find((e=>e.layerId===s));if(e){const o=e.assetGroups?.find((e=>e.assetGroupCode===t));if(o){const e=o.assetTypes?.find((e=>e.assetTypeCode===r));if(e){i=e.terminalConfigurationId;break}}}}if(null!=i){const e=this.dataElement.terminalConfigurations,t=e?.find((e=>e.terminalConfigurationId===i));return t?p.fromJSON(t):null}return null}getTierNames(e){const t=this.dataElement?.domainNetworks.find((t=>t.domainNetworkName===e));return t?.tiers.map((e=>e.name))||[]}async getRulesTable(){return this._sharedRulesTable||(this._sharedRulesTable=this._createRulesTable()),await this._sharedRulesTable}isUtilityLayer(e){return this._utilityLayerList.has(e.layerId)&&(e.url?.startsWith(this.featureServiceUrl)??!1)}async queryAssociations(t){const[{queryAssociations:r},{default:o}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/queryAssociations"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/QueryAssociationsParameters"],(e=>t(I(e))),r)))]),s=o.from(t);s.gdbVersion=this.gdbVersion,s.moment=this.historicMoment;return(await r(this.networkServiceUrl,s)).associations}async synthesizeAssociationGeometries(t){const[{synthesizeAssociationGeometries:r},{default:o}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/synthesizeAssociationGeometries"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/SynthesizeAssociationGeometriesParameters"],(e=>t(I(e))),r)))]),s=o.from(t);return s.gdbVersion=this.gdbVersion,s.moment=this.historicMoment,r(this.networkServiceUrl,s)}async trace(t){const[{trace:r},{default:o}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/trace"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/TraceParameters"],(e=>t(I(e))),r)))]),s=o.from(t);return s.gdbVersion=this.gdbVersion,s.moment=this.historicMoment,r(this.networkServiceUrl,s)}async submitTraceJob(t){const[{submitTraceJob:r},{default:o}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/trace"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/TraceParameters"],(e=>t(I(e))),r)))]),s=o.from(t);s.gdbVersion=this.gdbVersion,s.moment=this.historicMoment;const a=await r(this.networkServiceUrl,s);return new w({statusUrl:a})}async canAddAssociation(e){const t=await this.getRulesTable();if(!t)return!1;await t.load();const r=(e,t)=>e?1===e.terminalId?!t?.terminalId||t?.terminalId===e.terminalId:e.terminalId===t?.terminalId:!t?.terminalId,o=(e,t)=>e.fromNetworkSource?.sourceId===t.fromNetworkElement?.networkSourceId&&e.toNetworkSource?.sourceId===t.toNetworkElement?.networkSourceId&&e.fromAssetGroup?.assetGroupCode===t.fromNetworkElement?.assetGroupCode&&e.fromAssetType?.assetTypeCode===t.fromNetworkElement?.assetTypeCode&&e.toAssetGroup?.assetGroupCode===t.toNetworkElement?.assetGroupCode&&e.toAssetType?.assetTypeCode===t.toNetworkElement?.assetTypeCode&&r(e.fromTerminal,t.fromNetworkElement)&&r(e.toTerminal,t.toNetworkElement);if("containment"===e.associationType){return t.rulesCategorized.containment.some((t=>o(t,e)))}if("attachment"===e.associationType){return t.rulesCategorized.attachment.some((t=>o(t,e)))}return t.rulesCategorized.connectivity.some((t=>t.viaNetworkSource?t.fromNetworkSource?.sourceId===e.fromNetworkElement?.networkSourceId&&t.viaNetworkSource?.sourceId===e.toNetworkElement?.networkSourceId&&t.fromAssetGroup?.assetGroupCode===e.fromNetworkElement?.assetGroupCode&&t.fromAssetType?.assetTypeCode===e.fromNetworkElement?.assetTypeCode&&t.viaAssetGroup?.assetGroupCode===e.toNetworkElement?.assetGroupCode&&t.viaAssetType?.assetTypeCode===e.toNetworkElement?.assetTypeCode&&r(t.fromTerminal,e.fromNetworkElement)&&r(t.viaTerminal,e.toNetworkElement)||t.viaNetworkSource?.sourceId===e.fromNetworkElement?.networkSourceId&&t.toNetworkSource?.sourceId===e.toNetworkElement?.networkSourceId&&t.viaAssetGroup?.assetGroupCode===e.fromNetworkElement?.assetGroupCode&&t.viaAssetType?.assetTypeCode===e.fromNetworkElement?.assetTypeCode&&t.toAssetGroup?.assetGroupCode===e.toNetworkElement?.assetGroupCode&&t.toAssetType?.assetTypeCode===e.toNetworkElement?.assetTypeCode&&r(t.viaTerminal,e.fromNetworkElement)&&r(t.toTerminal,e.toNetworkElement):o(t,e)))}generateAddAssociations(e){return{addFeatures:e.map((e=>new r({attributes:{fromnetworksourceid:e.fromNetworkElement?.networkSourceId,fromglobalid:e.fromNetworkElement?.globalId,fromterminalid:e.fromNetworkElement?.terminalId,tonetworksourceid:e.toNetworkElement?.networkSourceId,toglobalid:e.toNetworkElement?.globalId,toterminalid:e.toNetworkElement?.terminalId,associationtype:f.AssociationTypeEnum[e.associationType],iscontentvisible:e.isContentVisible?1:0,percentalong:e.percentAlong,globalid:e.globalId}}))),id:this.networkSystemLayers.associationsTableId,identifierFields:{globalIdField:"globalid",objectIdField:"objectid"}}}generateDeleteAssociations(e){return{deleteFeatures:e.map((e=>({globalId:e.globalId}))),id:this.networkSystemLayers.associationsTableId,identifierFields:{globalIdField:"globalid",objectIdField:"objectid"}}}async _loadNamedTraceConfigurationsFromNetwork(e){if(0===this.sharedNamedTraceConfigurations?.length)return;const t=this.sharedNamedTraceConfigurations.map((e=>e.globalId)),r=await this.queryNamedTraceConfigurations({globalIds:t},e);for(const o of this.sharedNamedTraceConfigurations){const e=r?.find((e=>e.globalId===o.globalId));if(e){const t=e.write({},{origin:"service"});o.read(t,{origin:"service"})}}}async _createRulesTable(){const e=this.networkSystemLayers.rulesTableUrl,t=new l({url:e});await t.load();const r=this.dataElement?.domainNetworks;if(!r)return null;const o=r.flatMap((e=>[...e.edgeSources||[],...e.junctionSources||[]])),s=(await this._queryRulesTable(t)).map((e=>this._hydrateRuleInfo(t,o,e)));return new m({layer:t,rules:s})}async _queryRulesTable(e){const t=new T({where:"1=1",outFields:["*"]});return(await u.queryAllJSON(e,t)).features}_hydrateRuleInfo(e,t,r){const o=e.fieldsIndex,s=o.get("RULETYPE"),a=o.get("CREATIONDATE"),i=o.get("FROMNETWORKSOURCEID"),n=o.get("FROMASSETGROUP"),l=o.get("FROMASSETTYPE"),u=o.get("FROMTERMINALID"),d=o.get("TONETWORKSOURCEID"),m=o.get("TOASSETGROUP"),c=o.get("TOASSETTYPE"),y=o.get("TOTERMINALID"),p=o.get("VIANETWORKSOURCEID"),w=o.get("VIAASSETGROUP"),T=o.get("VIAASSETTYPE"),I=o.get("VIATERMINALID"),b=r.attributes[s.name],g=new Date(r.attributes[a.name]),k=[{networkSourceId:r.attributes[i.name],assetGroupId:r.attributes[n.name],assetTypeId:r.attributes[l.name],terminalId:r.attributes[u.name]},{networkSourceId:r.attributes[d.name],assetGroupId:r.attributes[m.name],assetTypeId:r.attributes[c.name],terminalId:r.attributes[y.name]},{networkSourceId:r.attributes[p.name],assetGroupId:r.attributes[w.name],assetTypeId:r.attributes[T.name],terminalId:r.attributes[I.name]}];let h;!function(e){e[e.from=0]="from",e[e.to=1]="to",e[e.via=2]="via"}(h||(h={}));const N={ruleType:b,creationDate:g};for(const S of[h.from,h.to,h.via]){if(b!==f.RuleType.RTEdgeJunctionEdgeConnectivity&&S===h.via)continue;const e=k[S],r=t.find((t=>t.sourceId===e.networkSourceId)),o=r?.assetGroups.find((t=>t.assetGroupCode===e.assetGroupId)),s=o?.assetTypes.find((t=>t.assetTypeCode===e.assetTypeId)),a=this._getTerminal(s,e);let i="";switch(S){case h.from:i="from";break;case h.to:i="to";break;case h.via:i="via"}N[`${i}NetworkSource`]=r,N[`${i}AssetGroup`]=o,N[`${i}AssetType`]=s,N[`${i}Terminal`]=a?.toJSON()}return N}_getTerminal(e,t){const r=e?.terminalConfigurationId,o=this.terminalConfigurations?.find((e=>e.id===r));return o?.terminals?.find((e=>e.id===t.terminalId))??null}};t.__decorate([o.property({type:[c],json:{origins:{"web-map":{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}},service:{read:{source:"traceConfigurations"}}},read:!1}})],b.prototype,"sharedNamedTraceConfigurations",void 0),t.__decorate([o.property({type:["utility"],readOnly:!0,json:{read:!1,write:!1}})],b.prototype,"type",void 0),t.__decorate([o.property({readOnly:!0})],b.prototype,"serviceTerritoryFeatureLayerId",null),t.__decorate([o.property({readOnly:!0})],b.prototype,"networkSystemLayers",null),t.__decorate([o.property({readOnly:!0})],b.prototype,"terminalConfigurations",null),t.__decorate([o.property({readOnly:!0})],b.prototype,"domainNetworkNames",null),b=t.__decorate([n.subclass("esri.networks.UtilityNetwork")],b);return b}));
