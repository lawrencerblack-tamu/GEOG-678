/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Accessor","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/Logger","../../../../../core/RandomLCG","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../core/workers/WorkerHandle","../../../../../chunks/sphere","../../../sketch/normalizedPoint","../../candidates/EdgeSnappingCandidate","../../candidates/VertexSnappingCandidate"],(function(e,r,t,o,n,a,d,s,i,c,p,l,u,h){"use strict";e.SceneLayerSnappingSourceWorkerHandle=class extends t{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new g(this.schedule,{fetchAllEdgeLocations:(e,r)=>this._fetchAllEdgeLocations(e,r)})}async fetchCandidates(e,r){const t=e.coordinateHelper,{point:o}=e,n=y;this.renderCoordsHelper.toRenderCoords(o,t.spatialReference,n);const a=e.distance,d="number"==typeof a?a:a.distance,s=await this._workerHandle.invoke({bounds:p.fromValues(n[0],n[1],n[2],d),returnEdge:e.returnEdge,returnVertex:"none"!==e.vertexMode},r);return s.candidates.sort(((e,r)=>e.distance-r.distance)),s.candidates.map((e=>this._convertCandidate(t,e)))}async add(e,r){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,r)}async remove(e,r){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,r)}_convertCandidate(e,r){switch(r.type){case"edge":return new u.EdgeSnappingCandidate({objectId:r.objectId,targetPoint:this._convertRenderCoordinate(e,r.target),edgeStart:this._convertRenderCoordinate(e,r.start),edgeEnd:this._convertRenderCoordinate(e,r.end),isDraped:!1});case"vertex":return new h.VertexSnappingCandidate({objectId:r.objectId,targetPoint:this._convertRenderCoordinate(e,r.target),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},r){const t=i.create();return this.renderCoordsHelper.fromRenderCoords(r,t,e),l.fromVec3(t)}async _fetchAllEdgeLocations(e,r){const t=[],o=[];for(const{id:n,uid:a}of e.components)this._ids.has(n)&&t.push((async()=>{const e=await this.fetchEdgeLocations(n,r.signal),t=e.locations.buffer;return o.push(t),{id:n,uid:a,objectIds:e.objectIds,locations:t,origin:e.origin,type:e.type}})());return{result:{components:(await Promise.all(t)).filter((({id:e})=>this._ids.has(e)))},transferList:o}}},r.__decorate([o.property({constructOnly:!0})],e.SceneLayerSnappingSourceWorkerHandle.prototype,"renderCoordsHelper",void 0),r.__decorate([o.property({constructOnly:!0})],e.SceneLayerSnappingSourceWorkerHandle.prototype,"fetchEdgeLocations",void 0),r.__decorate([o.property({constructOnly:!0})],e.SceneLayerSnappingSourceWorkerHandle.prototype,"schedule",void 0),r.__decorate([o.property({readOnly:!0})],e.SceneLayerSnappingSourceWorkerHandle.prototype,"availability",void 0),e.SceneLayerSnappingSourceWorkerHandle=r.__decorate([s.subclass("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],e.SceneLayerSnappingSourceWorkerHandle);class g extends c.WorkerHandle{constructor(e,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:r})}}const y=i.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
