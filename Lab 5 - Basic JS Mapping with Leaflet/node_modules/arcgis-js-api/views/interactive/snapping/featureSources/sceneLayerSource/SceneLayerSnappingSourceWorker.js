/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../../../chunks/tslib.es6","../../../../../core/promiseUtils","../../../../../core/Logger","../../../../../core/has","../../../../../core/RandomLCG","../../../../../core/Error","../../../../../core/accessorSupport/decorators/subclass","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/support/lineSegment","../../../../../chunks/sphere","../../../../3d/webgl-engine/lib/Octree","../../../../3d/webgl-engine/lib/edgeRendering/edgeProcessing","./sceneLayerSnappingUtils"],(function(e,t,n,o,s,i,d,c,r,a,u,h,g,p){"use strict";let l=class{constructor(){this._idToComponent=new Map,this._components=new h((e=>e.bounds)),this._edges=new h((e=>e.bounds)),this._tmpLineSegment=a.create(),this._tmpP1=r.create(),this._tmpP2=r.create(),this._tmpP3=r.create(),this.remoteClient=null}async fetchCandidates(e,n){await Promise.resolve(),t.throwIfAborted(n),await this._ensureEdgeLocations(e,n);const o=[];return this._edges.forEachNeighbor((t=>(this._addCandidates(e,t,o),o.length<p.maxCandidateCount)),e.bounds),{result:{candidates:o}}}async _ensureEdgeLocations(e,t){const n=[];if(this._components.forEachNeighbor((e=>{if(null==e.info){const{id:t,uid:o}=e;n.push({id:t,uid:o})}return!0}),e.bounds),!n.length)return;const o={components:n},s=await this.remoteClient.invoke("fetchAllEdgeLocations",o,t??{});for(const i of s.components)this._setFetchEdgeLocations(i)}async add(e){const t=new _(e.id,e.bounds);return this._idToComponent.set(t.id,t),this._components.add([t]),{result:{}}}async remove(e){const t=this._idToComponent.get(e.id);if(t){const e=[];this._edges.forEachNeighbor((n=>(n.component===t&&e.push(n),!0)),t.bounds),this._edges.remove(e),this._components.remove([t]),this._idToComponent.delete(t.id)}return{result:{}}}_setFetchEdgeLocations(e){const t=this._idToComponent.get(e.id);if(null==t||e.uid!==t.uid)return;const n=g.extractComponentsEdgeLocationsLayout.createView(e.locations),o=new Array(n.count),s=r.create(),i=r.create();for(let r=0;r<n.count;r++){n.position0.getVec(r,s),n.position1.getVec(r,i);const d=p.boundsFromEdge(s,i,e.origin),c=new b(t,r,d);o[r]=c}this._edges.add(o);const{objectIds:d,origin:c}=e;t.info={locations:n,objectIds:d,origin:c}}_addCandidates(e,t,n){const{info:o}=t.component,{origin:s,objectIds:i}=o,d=o.locations,r=d.position0.getVec(t.index,this._tmpP1),a=d.position1.getVec(t.index,this._tmpP2);c.add(r,r,s),c.add(a,a,s);const u=i[d.componentIndex.get(t.index)];this._addEdgeCandidate(e,u,r,a,n),this._addVertexCandidate(e,u,r,n),this._addVertexCandidate(e,u,a,n)}_addEdgeCandidate(e,t,n,o,s){if(!e.returnEdge)return;const i=u.getCenter(e.bounds),d=a.fromPoints(n,o,this._tmpLineSegment),h=a.projectPoint(d,i,this._tmpP3);u.containsPoint(e.bounds,h)&&s.push({type:"edge",objectId:t,target:r.clone(h),distance:c.distance(i,h),start:r.clone(n),end:r.clone(o)})}_addVertexCandidate(e,t,n,o){if(!e.returnVertex||!u.containsPoint(e.bounds,n))return;const s=u.getCenter(e.bounds);o.push({type:"vertex",objectId:t,target:r.clone(n),distance:c.distance(s,n)})}};l=e.__decorate([d.subclass("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],l);const m=l;class _{constructor(e,t){this.id=e,this.bounds=t,this.info=null,this.uid=++_.uid}}_.uid=0;class b{constructor(e,t,n){this.component=e,this.index=t,this.bounds=n}}return m}));
