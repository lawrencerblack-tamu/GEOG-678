/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Evented","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/projection","../../../support/elevationInfoUtils","../sketch/normalizedPoint","./Settings","./SnappingDomain","./snappingFactory","./SnappingOptions","./snappingUtils","./candidates/EdgeSnappingCandidate","./candidates/IntersectionSnappingCandidate","./candidates/LineSnappingCandidate","./candidates/ParallelLineSnappingCandidate","./candidates/RightAngleSnappingCandidate","../support/viewUtils"],(function(e,t,n,i,a,s,r,o,d,p,c,h,l,u,g,_,f,S,v,y,C,P,M,E,m){"use strict";var I;e.SnappingManager=class extends(i.EventedMixin(n)){constructor(e){super(e),this.options=new S,this.snappingEnginesFactory=f.defaultSnappingEnginesFactory,this._engines=[],this._currentMainCandidate=null,this._currentOtherActiveCandidates=[],this._currentSnappedType=I.MAIN}initialize(){this.addHandles([s.watch((()=>{const{effectiveFeatureEnabled:e,effectiveSelfEnabled:t,touchSensitivityMultiplier:n,distance:i,constraintsActive:a}=this.options;return{effectiveFeatureEnabled:e,effectiveSelfEnabled:t,touchSensitivityMultiplier:n,distance:i,constraintsActive:a}}),(()=>{this.doneSnapping(),this.emit("changed")}),s.sync),s.watch((()=>this.options),(e=>{for(const t of this._engines)t.options=e}),s.sync),s.watch((()=>({viewReady:this.view.ready,viewSpatialReference:this.view.spatialReference,snappingEnginesFactory:this.snappingEnginesFactory})),(({viewReady:e,snappingEnginesFactory:t})=>this._recreateEngines(e,t)),s.syncAndInitial)])}destroy(){this._destroyEngines()}get updating(){return this._engines.some((e=>e.updating))}_recreateEngines(e,t){if(this._destroyEngines(),!e)return;const{view:n,options:i}=this;this._engines=t(n,i)}_destroyEngines(){for(const e of this._engines)e.destroy();this._engines=[]}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:e,touchSensitivityMultiplier:t}=this.options,n=e*t;return n*n}get _squaredSatisfiesConstraintThreshold(){return g.defaults.satisfiesConstraintScreenThreshold*g.defaults.satisfiesConstraintScreenThreshold}snap(e){return T(e)?this._snapMultiPoint(e):this._snapSinglePoint(e)}update(e){const{point:t,context:n}=e;this._removeVisualization();const i=this._currentMainCandidate;if(null==i)return t;const a=this._selectUpdateInput(e);if(null==a)return t;const{spatialReference:s}=n,r=h.project(a,s);if(null==r)return t;const{view:o}=this,{elevationInfo:d,visualizer:p}=n,c=[],l=u.fromPoint(r,o,d),g=i.constraint.closestTo(l);if(!this._arePointsWithinScreenThreshold(l,g,n))return this._resetSnappingState(),t;i.targetPoint=g,c.push(...i.hints);for(const h of this._currentOtherActiveCandidates)h.targetPoint=g,c.push(...h.hints);return null!=p&&this.addHandles(p.draw(c,{spatialReference:s,elevationInfo:A(n),view:o,selfSnappingZ:n.selfSnappingZ}),w),u.toElevationAlignedDehydratedPoint(g,o,t,n)}doneSnapping(){this._removeVisualization(),this._resetSnappingState()}_selectUpdateInput({point:e,scenePoint:t}){switch(this._currentSnappedType){case I.MAIN:return e;case I.SCENE:return t}}_resetSnappingState(){this._currentMainCandidate=null,this._currentOtherActiveCandidates=[],this._currentSnappedType=I.MAIN}_removeVisualization(){this.removeHandles(w)}async _snapSinglePoint({point:e,context:t,signal:n}){const{view:i}=this,{elevationInfo:a}=t,s=u.fromPoint(e,i,a),r=await this._fetchCandidates(s,_.SnappingDomain.ALL,t,n);return this._createSnapResult(s,I.MAIN,r,i,e,t,n)}async _snapMultiPoint({point:e,scenePoint:t,context:n,signal:i}){const{view:a}=this,{coordinateHelper:s,elevationInfo:r,spatialReference:o}=n;await h.initializeProjection(t.spatialReference,o);const d=h.project(t,o),p=u.fromPoint(d,a,r),c=await this._fetchCandidates(p,_.SnappingDomain.FEATURE,n,i);if(c.length>0){const e=await this._fetchCandidates(p,_.SnappingDomain.SELF,n,i);return this._createSnapResult(p,I.SCENE,[...c,...e],a,d,n,i)}const l=u.fromPoint(e,a,r),g=await this._fetchCandidates(l,_.SnappingDomain.SELF,n,i);return this._createSnapResult(l,I.MAIN,g,a,{z:s.hasZ()&&e.hasZ?e.z??0:void 0,m:s.hasM()&&e.hasM?e.m??0:void 0},n,i)}async _fetchCandidates(e,t,n,i){return(await Promise.all(this._engines.map((a=>a.fetchCandidates(e,t,n,i))))).flat()}_createSnapResult(e,t,n,i,s,r,o){return{get valid(){return!a.isAborted(o)},apply:()=>{const{spatialReference:a}=r,{snappedPoint:o,hints:d}=this._processCandidates(e,t,n,r);return this._removeVisualization(),null!=r.visualizer&&this.addHandles(r.visualizer.draw(d,{spatialReference:a,elevationInfo:l.absoluteHeightElevationInfo,view:i,selfSnappingZ:r.selfSnappingZ}),w),u.toElevationAlignedDehydratedPoint(o,i,s,r)}}}_processCandidates(e,t,n,i){if(n.length<1)return this.doneSnapping(),{snappedPoint:e,hints:[]};this._currentSnappedType!==t&&this._resetSnappingState(),v.sortCandidatesInPlace(e,n);const a=this._currentMainCandidate;if(null!=a){const s=this._findOldConstraintInNewCandidates(a,n);if(s>=0){if(!(n[s]instanceof C.IntersectionSnappingCandidate))return this._intersectWithOtherCandidates(s,n,e,t,i);if(this._arePointsWithinScreenThreshold(e,a.targetPoint,i))return this._updateSnappingCandidate(a,t,n,i)}}return this._intersectWithOtherCandidates(0,n,e,t,i)}_findOldConstraintInNewCandidates(e,t){return e instanceof C.IntersectionSnappingCandidate?this._findOldCandidateIndex(t,e.first)>=0&&this._findOldCandidateIndex(t,e.second)>=0?0:-1:this._findOldCandidateIndex(t,e)}_intersectWithOtherCandidates(e,t,n,i,a){const{coordinateHelper:s}=a,r=t[e],o=[];for(let d=0;d<t.length;++d){if(d===e)continue;const i=t[d],a=r.constraint.intersect(i.constraint);if(a)for(const e of a.closestPoints(r.targetPoint))o.push([new C.IntersectionSnappingCandidate(e,r,i,i.isDraped),this._squaredScreenDistance(n,e,s)])}return o.length>0&&(o.sort(((e,t)=>e[1]-t[1])),o[0][1]<this._squaredPointProximityThreshold(a.pointer))?this._updateSnappingCandidate(o[0][0],i,t,a):this.options.constraintsActive&&(r instanceof P.LineSnappingCandidate||r instanceof y.EdgeSnappingCandidate||r instanceof E.RightAngleSnappingCandidate||r instanceof M.ParallelLineSnappingCandidate)?{snappedPoint:n,hints:[]}:this._updateSnappingCandidate(r,i,t,a)}_updateSnappingCandidate(e,t,n,i){this.doneSnapping(),this._currentMainCandidate=e,this._currentSnappedType=t;const a=this._currentMainCandidate.targetPoint,s=[];s.push(...e.hints);for(const r of n){if(e instanceof C.IntersectionSnappingCandidate){if(r.constraint.equals(e.first.constraint)||r.constraint.equals(e.second.constraint))continue}else if(r.constraint.equals(e.constraint))continue;const t=r.constraint.closestTo(a);this._squaredScreenDistance(t,a,i.coordinateHelper)<this._squaredSatisfiesConstraintThreshold&&(r.targetPoint=a,this._currentOtherActiveCandidates.push(r),s.push(...r.hints))}return{snappedPoint:a,hints:s}}_squaredPointProximityThreshold(e){return"touch"===e?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}_arePointsWithinScreenThreshold(e,t,n){return this._squaredScreenDistance(e,t,n.coordinateHelper)<this._squaredPointProximityThreshold(n.pointer)}_squaredScreenDistance(e,t,n){return v.squaredScreenDistance(this._toScreen(e,n),this._toScreen(t,n))}_toScreen(e,t){return m.vectorToScreenPoint(e,t.spatialReference,l.absoluteHeightElevationInfo,this.view)}_findOldCandidateIndex(e,t){let n=-1;for(let i=0;i<e.length;++i)if(t.constraint.equals(e[i].constraint)){n=i;break}return n}get test(){return{visualizationsActive:this.hasHandles(w),engines:this._engines}}},t.__decorate([r.property({constructOnly:!0})],e.SnappingManager.prototype,"view",void 0),t.__decorate([r.property()],e.SnappingManager.prototype,"options",void 0),t.__decorate([r.property({readOnly:!0})],e.SnappingManager.prototype,"updating",null),t.__decorate([r.property()],e.SnappingManager.prototype,"snappingEnginesFactory",void 0),t.__decorate([r.property()],e.SnappingManager.prototype,"_engines",void 0),t.__decorate([r.property()],e.SnappingManager.prototype,"_squaredMouseProximityThreshold",null),t.__decorate([r.property()],e.SnappingManager.prototype,"_squaredTouchProximityThreshold",null),t.__decorate([r.property()],e.SnappingManager.prototype,"_squaredSatisfiesConstraintThreshold",null),e.SnappingManager=t.__decorate([c.subclass("esri.views.interactive.snapping.SnappingManager")],e.SnappingManager),function(e){e[e.MAIN=0]="MAIN",e[e.SCENE=1]="SCENE"}(I||(I={}));const w="visualization-handle";function T(e){return null!=e.scenePoint}function A({coordinateHelper:e,elevationInfo:t}){return e.hasZ()?l.absoluteHeightElevationInfo:t}Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
