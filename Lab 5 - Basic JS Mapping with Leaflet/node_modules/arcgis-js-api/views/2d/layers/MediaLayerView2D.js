/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../geometry","../../../Graphic","../../../renderers/ClassBreaksRenderer","../../../renderers/DictionaryRenderer","../../../renderers/DotDensityRenderer","../../../renderers/HeatmapRenderer","../../../renderers/PieChartRenderer","../../../renderers/Renderer","../../../renderers/SimpleRenderer","../../../renderers/UniqueValueRenderer","../../../renderers/support/jsonUtils","../../../core/Logger","../../../symbols","../../../core/Collection","../../../core/has","../../../core/MapUtils","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/support/aaBoundingRect","../../../geometry/support/contains","../../../geometry/support/intersectsBase","../../../layers/support/MediaElementView","../../../core/Error","../../../core/scheduling","../../../core/accessorSupport/tracking/Flags","../../../core/colorUtils","../../../config","../../../symbols/Font","../../../core/ObjectPool","../../../geometry/Extent","../../../geometry/Geometry","../../../geometry/Multipoint","../../../geometry/Point","../../../geometry/Polygon","../../../geometry/Polyline","../../../geometry/support/Axis","../../../geometry/support/spatialReferenceUtils","../../../geometry/support/TileClipper","../../../symbols/cim/effects/EffectAddControlPoints","../../../symbols/cim/effects/EffectArrow","../../../symbols/cim/effects/EffectBuffer","../../../symbols/cim/effects/EffectControlMeasureLine","../../../symbols/cim/effects/EffectCut","../../../symbols/cim/effects/EffectDashes","../../../symbols/cim/effects/EffectDonut","../../../symbols/cim/effects/EffectJog","../../../symbols/cim/effects/EffectMove","../../../symbols/cim/effects/EffectOffset","../../../symbols/cim/effects/EffectReverse","../../../symbols/cim/effects/EffectRotate","../../../symbols/cim/effects/EffectScale","../../../symbols/cim/effects/EffectWave","../../../symbols/cim/placements/PlacementAlongLineSameSize","../../../symbols/cim/placements/PlacementAtExtremities","../../../symbols/cim/placements/PlacementAtRatioPositions","../../../symbols/cim/placements/PlacementInsidePolygon","../../../symbols/cim/placements/PlacementOnLine","../../../symbols/cim/placements/PlacementOnVertices","../../../symbols/cim/placements/PlacementPolygonCenter","../../../symbols/cim/enums","../../../core/mathUtils","../engine/webgl/definitions","../../../core/libs/gl-matrix-2/factories/vec2f32","../engine/webgl/alignmentUtils","../../../symbols/support/defaults","../../../symbols/cim/OverrideHelper","../../../core/floatRGBA","../../../layers/effects/EffectView","../engine/DisplayObject","./support/util","../../../core/Evented","../engine/webgl/enums","../engine/webgl/brushes/BrushBitmap","../../../core/libs/gl-matrix-2/factories/vec4f32","../../webgl/checkWebGLError","../../webgl/enums","../../webgl/FramebufferObject","../../../chunks/builtins","../../webgl/GLObjectType","../../webgl/Texture","../engine/webgl/shaders/BackgroundPrograms","../engine/webgl/DefaultVertexAttributeLayouts","../tiling/TileKey","../engine/webgl/DisplayEntity","../engine/webgl/number","../engine/webgl/PooledUint32Array","../engine/webgl/shaders/TileInfoPrograms","../engine/vectorTiles/style/StyleDefinition","../engine/vectorTiles/enums","../engine/webgl/shaders/BitBlitPrograms","../../../request","../../../core/urlUtils","../../../core/pbf","../engine/webgl/shaders/StencilPrograms","../engine/webgl/shaders/HighlightPrograms","../engine/webgl/Profiler","../engine/webgl/shaderGraph/techniques/TechniqueRegistry","../../webgl/renderState","../../3d/webgl-engine/core/shaderModules/interfaces","../../3d/webgl-engine/lib/OrderIndependentTransparency","../../webgl/testSVGPremultipliedAlpha","../LabelManager","./graphics/GraphicsView2D","../../../chunks/earcut","../../../geometry/support/aaBoundingBox","../../../core/libs/gl-matrix-2/factories/vec3f32","../../../geometry/support/normalizeUtilsCommon","../../../geometry/SpatialReference","../../../geometry/support/Ellipsoid","../../../kernel","../navigation/MapViewNavigation","../../../core/asyncUtils","../engine/webgl/shaders/MagnifierPrograms","../tiling/TileInfoView","../tiling/TileQueue","../tiling/TileStrategy","../engine/webgl/Overlay","../engine/webgl/OverlayContainer","./LayerView2D","../../layers/LayerView"],(function(e,t,r,s,i,n,l,o,a,c,m,h,d,u,f,g,y,p,b,w,_,v,E,R,S,C,P,T,x,V,U,G,q,A,M,B,L,D,O,k,j,z,H,I,Q,F,W,J,K,N,X,Y,Z,$,ee,te,re,se,ie,ne,le,oe,ae,ce,me,he,de,ue,fe,ge,ye,pe,be,we,_e,ve,Ee,Re,Se,Ce,Pe,Te,xe,Ve,Ue,Ge,qe,Ae,Me,Be,Le,De,Oe,ke,je,ze,He,Ie,Qe,Fe,We,Je,Ke,Ne,Xe,Ye,Ze,$e,et,tt,rt,st,it,nt,lt,ot,at,ct,mt,ht,dt,ut,ft,gt){"use strict";let yt=class extends(ft.LayerView2DMixin(gt)){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this._debugGraphicsView=null,this.layer=null,this.elements=new f}attach(){this.addAttachHandles([b.on((()=>this.layer.effectiveSource),"refresh",(()=>{this._tileStrategy.refresh((e=>this._updateTile(e))),this.requestUpdate()})),b.on((()=>this.layer.effectiveSource),"change",(({element:e})=>this._elementUpdateHandler(e)))]),this._overlayContainer=new ut,this.container.addChild(this._overlayContainer),this._fetchQueue=new mt({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(e,t)=>this._queryElements(e,t)}),this._tileStrategy=new ht({cachePolicy:"purge",resampling:!0,acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear(),this._debugGraphicsView?.destroy()}supportsSpatialReference(e){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(e){this._tileStrategy.update(e),this._debugGraphicsView?.update(e)}async hitTest(e,t){const r=[],s=e.normalize(),i=[s.x,s.y];for(const{projectedElement:{normalizedCoords:n,element:l}}of this._elementReferences.values())null!=n&&R.ringsContainsCoords(n.rings,i)&&r.push({type:"media",element:l,layer:this.layer,mapPoint:e,sourcePoint:l.toSource(e)});return r.reverse()}canResume(){return null!=this.layer.source&&super.canResume()}async doRefresh(){this._fetchQueue.reset(),this._tileStrategy.refresh((e=>this._updateTile(e)))}_acquireTile(e){const t=new _t(e.clone());return this._updateTile(t),t}_updateTile(e){this._updatingHandles.addPromise(this._fetchQueue.push(e.key).then((t=>{const[r,s]=e.setElements(t);this._referenceElements(e,r),this._dereferenceElements(e,s),this.requestUpdate()}),(e=>{p.isAbortError(e)||d.getLogger(this).error(e)})))}_releaseTile(e){this._fetchQueue.abort(e.key.id),e.elements&&this._dereferenceElements(e,e.elements),this.requestUpdate()}async _queryElements(e,t){const r=this.layer.effectiveSource;if(null==r)return[];this.view.featuresTilingScheme.getTileBounds(pt,e,!0);const s=new A({xmin:pt[0],ymin:pt[1],xmax:pt[2],ymax:pt[3],spatialReference:this.view.spatialReference});return r.queryElements(s,t)}_referenceElements(e,t){if(null!=this.layer.source)for(const r of t)this._referenceElement(e,r)}_referenceElement(e,t){y.getOrCreateMapValue(this._elementReferences,t.uid,(()=>{const e=new C.MediaElementView({element:t,spatialReference:this.view.spatialReference}),r=new dt(e);this._overlayContainer.addChild(r),this.elements.add(t);let s=null;return{tiles:new Set,projectedElement:e,overlay:r,debugGraphic:s}})).tiles.add(e)}_dereferenceElements(e,t){for(const r of t)this._dereferenceElement(e,r)}_dereferenceElement(e,t){const r=this._elementReferences.get(t.uid);r.tiles.delete(e),r.tiles.size||(this._overlayContainer.removeChild(r.overlay),r.overlay.destroy(),r.projectedElement.destroy(),this._elementReferences.delete(t.uid),this.elements.remove(t),this._debugGraphicsView?.graphics.remove(r.debugGraphic))}_elementUpdateHandler(e){let t=this._elementReferences.get(e.uid);if(t){const r=t.projectedElement.normalizedCoords;if(null==r)return this._overlayContainer.removeChild(t.overlay),t.overlay.destroy(),t.projectedElement.destroy(),this._elementReferences.delete(e.uid),this.elements.remove(e),void this._debugGraphicsView?.graphics.remove(t.debugGraphic);const s=[],i=[];for(const e of this._tileStrategy.tiles){const n=wt(this.view.featuresTilingScheme,e,r);t.tiles.has(e)?n||i.push(e):n&&s.push(e)}for(const t of s)this._referenceElement(t,e);for(const t of i)this._dereferenceElement(t,e);return t=this._elementReferences.get(e.uid),void(t?.debugGraphic&&(t.debugGraphic.geometry=t.projectedElement.normalizedCoords,this._debugGraphicsView.graphicUpdateHandler({graphic:t.debugGraphic,property:"geometry"})))}const r=new C.MediaElementView({element:e,spatialReference:this.view.spatialReference}).normalizedCoords;if(null!=r)for(const s of this._tileStrategy.tiles){wt(this.view.featuresTilingScheme,s,r)&&this._referenceElement(s,e)}}};e.__decorate([w.property()],yt.prototype,"layer",void 0),e.__decorate([w.property({readOnly:!0})],yt.prototype,"elements",void 0),yt=e.__decorate([v.subclass("esri.views.2d.layers.MediaLayerView2D")],yt);const pt=E.create(),bt={xmin:0,ymin:0,xmax:0,ymax:0};function wt(e,t,r){return e.getTileBounds(pt,t.key,!0),bt.xmin=pt[0],bt.ymin=pt[1],bt.xmax=pt[2],bt.ymax=pt[3],S.extentIntersectsPolygon(bt,r)}class _t{constructor(e){this.key=e,this.elements=null,this.isReady=!1,this.visible=!0}setElements(e){const t=[],r=new Set(this.elements);this.elements=e;for(const s of e)r.has(s)?r.delete(s):t.push(s);return this.isReady=!0,[t,Array.from(r)]}destroy(){}}return yt}));
