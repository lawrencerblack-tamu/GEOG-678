/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../AggregateGraphic","../../../geometry","../../../Graphic","../../../core/arrayUtils","../../../core/Collection","../../../core/compilerUtils","../../../core/Error","../../../core/handleUtils","../../../core/has","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/diffUtils","../../../layers/effects/FeatureEffectView","../../../layers/support/FeatureFilter","../../../layers/support/fieldUtils","../../../layers/support/layerUtils","../../../rest/support/AggregateFeatureSet","../../../rest/support/FeatureSet","../../../rest/support/Query","../engine/highlightReasons","./LayerView2D","./features/FeatureContainer","./features/FeaturePipelineWorkerProxy","./features/FeatureSourceEventLog","./features/layerAdapters/CatalogFootprintLayerAdapter","./features/layerAdapters/FeatureLayerAdapter","./features/layerAdapters/InMemoryLayerAdapter","./features/layerAdapters/KnowledgeGraphSublayerAdapter","./features/layerAdapters/OGCFeatureLayerAdapter","./features/layerAdapters/OrientedImageryLayerAdapter","./features/layerAdapters/StreamLayerAdapter","./features/layerAdapters/SubtypeGroupLayerAdapter","./features/schema/processor/symbols/ComplexSymbolSchema","./support/FeatureCommandQueue","./support/handleNoEngineError","./support/HighlightCounter","../tiling/FeatureTileSubscriptionManager","../../layers/FeatureLayerView","../../layers/LayerView","../../layers/RefreshableLayerView","../../../geometry/Extent"],(function(e,t,r,i,a,s,n,o,u,l,h,c,d,p,y,g,f,_,m,w,b,v,E,F,S,A,C,V,R,U,x,L,k,q,I,Q,O,N,H,M,D,T,J,G,$,P){"use strict";function j(e,t){const r=new Set;return e&&e.forEach((e=>r.add(e))),t&&t.forEach((e=>r.add(e))),r.has("*")?["*"]:Array.from(r)}const z="esri.views.2d.layers.FeatureLayerView2D",B=4294967294;let Z=class extends(J($(A.LayerView2DMixin(G)))){constructor(){super(...arguments),this._commandsQueue=new H({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightCounter=new D.HighlightCounter,this._updateHighlight=d.debounce((async()=>{const e=[];for(const t of this._highlightCounter.ids()){const r=this._highlightCounter.getHighestReason(t),i=S.getHighlightBits(r);e.push({objectId:t,highlightFlags:i})}this._worker.pipeline.updateHighlight({highlights:e})})),this._lastAvailableFields=[],this.eventLog=new R.FeatureSourceEventLog,this._sourceRefreshVersion=1,this._displayRefreshVersion=1,this._pipelineUpdating=!1,this._fields=null,this.featureEffectView=new _}destroy(){this._worker?.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(this._initProxy()),this.featureEffectView.featureEffect=this.featureEffect,this.featureEffectView.endTransitions()}async _initProxy(){const e=this.layer;if("isTable"in e&&e.isTable)throw new o("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:e});if("mesh"===e.geometryType)throw new o("featurelayerview:geometry-type-not-supported",`Geometry type of ${e.geometryType} is not supported`,{layer:e});if(("feature"===e.type||"subtype-group"===e.type)&&!1===b.getEffectiveLayerCapabilities(e)?.operations.supportsQuery)throw new o("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._worker&&this._worker.destroy();const t=this._createClientOptions();this._worker=await V.createFeaturePipelineWorkerProxy(t)}get hasAllFeatures(){return this.layer.visible&&this.eventLog.hasAllFeatures}get hasAllFeaturesInView(){return this.layer.visible&&this.eventLog.hasAllFeaturesInView}get hasFullGeometries(){return this.layer.visible&&this.eventLog.hasFullGeometries}get labelingCollisionInfos(){const e=this.layerAdapter.getLabelingDeconflictionInfo(this.view),t=this.layer.geometryType,r=!this.suspended;return e.map((({vvEvaluators:e,deconflictionEnabled:i})=>({container:this.featureContainer,vvEvaluators:e,deconflictionEnabled:i,geometryType:t,visible:r})))}get layerAdapter(){switch(this.layer.type){case"feature":return"memory"===this.layer.source.type?new L.InMemoryLayerAdapter(this.layer):new x.FeatureLayerAdapter(this.layer);case"geojson":case"csv":case"wfs":return new L.InMemoryLayerAdapter(this.layer);case"subtype-group":return new O.SubtypeGroupLayerAdapter(this.layer);case"ogc-feature":return new q.OGCFeatureLayerAdapter(this.layer);case"stream":return new Q.StreamLayerAdapter(this.layer);case"oriented-imagery":return new I.OrientedImageryLayerAdapter(this.layer);case"knowledge-graph-sublayer":return new k.KnowledgeGraphSublayerAdapter(this.layer);case"catalog-footprint":return new U.CatalogFootprintLayerAdapter(this.layer);default:n.neverReached(this.layer)}return null}get updateHash(){if(!this.layerAdapter)return null;const{availableFields:e,_displayRefreshVersion:t,timeExtent:r,clips:i,filter:a,featureEffect:s,_sourceRefreshVersion:n,view:{timeZone:o}}=this,u=JSON.stringify(i),l=s?.toJSON(),h=a?.toJSON();return JSON.stringify({availableFields:e,clipsHash:u,displayRefreshVersion:t,effectHash:l,filterHash:h,sourceRefreshVersion:n,timeExtent:r,timeZone:o,...this.layerAdapter.getUpdateHashProperties(this.view)})}getDisplayStatistics(e,t){return this.featureContainer?.getDisplayStatistics(e,t)}async queryHeatmapStatistics(e){return this._worker.pipeline.queryHeatmapStatistics(e)}highlight(e,t="highlight"){let r;e instanceof i?r=[e.getObjectId()]:"number"==typeof e||"string"==typeof e?r=[e]:s.isCollection(e)&&e.length>0?r=e.map((e=>e?.getObjectId())).toArray():Array.isArray(e)&&e.length>0&&(r="number"==typeof e[0]||"string"==typeof e[0]?e:e.map((e=>e?.getObjectId())));const n=r?.filter(a.isSome);return n?.length?(this._addHighlight(n,t),u.makeHandle((()=>this._removeHighlight(n,t)))):u.makeHandle()}getHighlightIds(){return Array.from(this._highlightCounter.ids())}hasHighlight(){return!this._highlightCounter.empty}async hitTest(e,r){const a=await this.featureContainer.hitTest(r);if(0===a.length)return null;const{features:s,aggregates:n}=await this._worker.pipeline.getDisplayFeatures(a),o=this.featureContainer.getSortKeys(a),u=({displayId:e},{displayId:t})=>o.has(e)&&o.has(t)?o.get(e)-o.get(t):e-t;return s.sort(u).reverse(),n.sort(u).reverse(),[...n.map((r=>this._createGraphicHit(e,t.fromJSON(r)))),...s.map((t=>this._createGraphicHit(e,i.fromJSON(t))))]}queryStatistics(){return M.handleNoEngineError(this._worker.pipeline.queryStatistics(),{featureCount:0,ringCount:0,vertexCount:0})}querySummaryStatistics(e,t,r){const i={...t,scale:this.view.scale},a=this._worker.features.executeQueryForSummaryStatistics(this._cleanUpQuery(e),i,r);return M.handleNoEngineError(a,{})}async queryAggregateSummaryStatistics(e,t,r){const i={...t,scale:this.view.scale},a=this._worker.aggregates.executeQueryForSummaryStatistics(this._cleanUpAggregateQuery(e),i,r);return M.handleNoEngineError(a,{})}async queryUniqueValues(e,t,r){const i={...t,scale:this.view.scale},a=this._worker.features.executeQueryForUniqueValues(this._cleanUpQuery(e),i,r);return M.handleNoEngineError(a,{uniqueValueInfos:[]})}async queryAggregateUniqueValues(e,t,r){const i={...t,scale:this.view.scale},a=this._worker.aggregates.executeQueryForUniqueValues(this._cleanUpAggregateQuery(e),i,r);return M.handleNoEngineError(a,{uniqueValueInfos:[]})}async queryClassBreaks(e,t,r){const i={...t,scale:this.view.scale},a=this._worker.features.executeQueryForClassBreaks(this._cleanUpQuery(e),i,r);return M.handleNoEngineError(a,{classBreakInfos:[]})}async queryAggregateClassBreaks(e,t,r){const i={...t,scale:this.view.scale},a=this._worker.aggregates.executeQueryForClassBreaks(this._cleanUpAggregateQuery(e),i,r);return M.handleNoEngineError(a,{classBreakInfos:[]})}async queryHistogram(e,t,r){const i={...t,scale:this.view.scale},a=this._worker.features.executeQueryForHistogram(this._cleanUpQuery(e),i,r);return M.handleNoEngineError(a,{bins:[],maxValue:null,minValue:null,normalizationTotal:null})}async queryAggregateHistogram(e,t,r){const i={...t,scale:this.view.scale},a=this._worker.aggregates.executeQueryForHistogram(this._cleanUpAggregateQuery(e),i,r);return M.handleNoEngineError(a,{bins:[],maxValue:null,minValue:null,normalizationTotal:null})}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then((e=>{const t=E.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}async queryVisibleFeatures(e,t){const r=this._worker.pipeline.queryVisibleFeatures(this._cleanUpQuery(e),t),i=await M.handleNoEngineError(r,{features:[]}),a=E.fromJSON(i);return a.features.forEach((e=>this._setLayersForFeature(e))),a}async queryAggregates(e,t){const r=this._worker.aggregates.executeQuery(this._cleanUpAggregateQuery(e),t),i=await M.handleNoEngineError(r,{features:[]}),a=v.fromJSON(i);return a.features.forEach((e=>this._setLayersForFeature(e))),a}queryAggregateIds(e,t){const r=this._worker.aggregates.executeQueryForIds(this._cleanUpAggregateQuery(e),t);return M.handleNoEngineError(r,[])}queryAggregateCount(e,t){const r=this._worker.aggregates.executeQueryForCount(this._cleanUpAggregateQuery(e),t);return M.handleNoEngineError(r,0)}queryAggregateJSON(e,t){const r=this._worker.aggregates.executeQuery(this._cleanUpAggregateQuery(e),t);return M.handleNoEngineError(r,{features:[]})}async queryFeaturesJSON(e,t){const r=this._worker.features.executeQuery(this._cleanUpQuery(e),t);return M.handleNoEngineError(r,{features:[]})}queryObjectIds(e,t){const r=this._worker.features.executeQueryForIds(this._cleanUpQuery(e),t);return M.handleNoEngineError(r,[])}queryFeatureCount(e,t){const r=this._worker.features.executeQueryForCount(this._cleanUpQuery(e),t);return M.handleNoEngineError(r,0)}async queryExtent(e,t){const r=this._worker.features.executeQueryForExtent(this._cleanUpQuery(e),t),i=await M.handleNoEngineError(r,{count:0,extent:null});return{count:i.count,extent:P.fromJSON(i.extent)}}async getSampleFeatures(e){return this._worker.pipeline.getSampleFeatures(e)}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._subscriptionManager)return;const t=this._subscriptionManager.update(e);this.featureContainer.setVisibleTiles(t)}attach(){l("esri-2d-update-debug")&&console.debug("FeatureLayerView2D.attach"),this.featureContainer=new C.FeatureContainer(this),this.container.addChild(this.featureContainer),this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._subscriptionManager=new T.FeatureTileSubscriptionManager({tileInfoView:this.view.featuresTilingScheme,updateSubscriptions:e=>{this.featureContainer.updateSubscriptions(e),this._worker.pipeline.updateSubscriptions(e)},isDone:e=>this.featureContainer.isDone(e)}),this.requestUpdate(),this.addAttachHandles([p.watch((()=>this.updateHash),(()=>this._update()),p.initial),p.watch((()=>this.updateSuspended),(e=>{e||this._subscriptionManager.resume()}))]),"stream"!==this.layer.type&&"catalog-footprint"!==this.layer.type&&this.addAttachHandles(this.layer.on("edits",(e=>this._edit(e))))}detach(){l("esri-2d-update-debug")&&console.debug("FeatureLayerView2D.detach"),this._fields=null,this.featureContainer.destroy(),this._commandsQueue.clear(),this.container.removeAllChildren(),this._subscriptionManager=c.destroyMaybe(this._subscriptionManager),this._worker.pipeline.onDetach()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){const e="renderer"in this.layer&&null!=this.layer.renderer,t=this._commandsQueue.updateTracking.updating,r=null!=this._updatingRequiredFieldsPromise,i=this.featureContainer.updatingHandles.updating,a=e&&(t||r)||i||this._pipelineUpdating||this.dataUpdating;if(l("esri-2d-log-updating")){console.log(`Updating FLV2D (${this.layer.id}): ${a}\n  -> hasRenderer ${e}\n  -> updatingRequiredFields ${r}\n  -> hasPendingCommand ${t}\n  -> dataUpdating ${this.dataUpdating}\n  -> processing ${this._pipelineUpdating}\n  -> updatingContainer ${i}\n`);for(const e of this.featureContainer.subscriptions())console.log(`    -> Tile[${e.id}] Done: ${e.done}`)}return a}_createClientOptions(){const e=this;return{get container(){return e.featureContainer},setUpdating:e=>{this._set("_pipelineUpdating",e.pipeline),this._set("dataUpdating",e.data)},emitEvent:e=>{this.emit(e.name,e.event)},get eventLog(){return e.eventLog},fetch:t=>Promise.all(t.map((t=>e.view.stage.painter.textureManager.rasterizeItem(t)))),fetchDictionary:e=>Promise.all(e.map((e=>this._fetchDictionaryRequest(e))))}}async _fetchDictionaryRequest(e){try{if("subtype-group"===this.layer.type)throw new Error("InternalError: SubtypeGroupLayer does not support dictionary renderer");const t=this.layer.renderer;if(!t||"dictionary"!==t.type)throw new Error("InternalError: Expected layer to have a DictionaryRenderer");const r=this._lastSchema.processor.mesh.factory.symbology;if("dictionary"!==r.type)throw new Error("InternalError: Expected schema to be of type 'dictionary'");const i={cimAnalyzer:this.view.stage.cimAnalyzer,cimResourceManager:this.view.stage.painter.textureManager.resourceManager,store:this.featureContainer.instanceStore,scaleExpression:r.scaleExpression};this._fields||(this._fields=this.layer.fields.map((e=>e.toJSON())));const a=r.visualVariableUniforms,s=await t.getSymbolAsync(e.feature,{fields:this._fields});if(!s||!s.data)return{type:"dictionary-response",meshes:[]};return{type:"dictionary-response",meshes:await N.createComplexSymbolInstances(s.data,{uniforms:a,path:"renderer",schemaOptions:i})}}catch(t){return{type:"dictionary-response",meshes:[]}}}_cleanUpQuery(e){const t=F.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t.toJSON()}_cleanUpAggregateQuery(e){const t=F.from(e)||this.createAggregateQuery();t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference);const r=t.objectIds??[];for(const i of t.aggregateIds??[])r.push(i);return t.objectIds=r,t.aggregateIds=[],t.toJSON()}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){if(this.updateSuspended)return void this._subscriptionManager.suspend();return this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}).catch(d.throwIfNotAbortError):void 0}async doRefresh(e){this.attached&&(this.updateSuspended&&e||(e?this.incrementSourceRefreshVersion():this.incrementDisplayRefreshVersion()))}incrementSourceRefreshVersion(){this._sourceRefreshVersion=(this._sourceRefreshVersion+1)%B+1}incrementDisplayRefreshVersion(){this._displayRefreshVersion=(this._displayRefreshVersion+1)%B+1}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,r=e.deletedFeatures.some((e=>-1===e.objectId||!e.objectId)),i=t&&this.availableFields.includes(t);return r&&!i?(h.getLogger(this).error(new o("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){"featureReduction"in this.layer&&this.layer.featureReduction&&this.layer.featureReduction!==this._lastFeatureReduction&&(this.layer.featureReduction=this.layer.featureReduction?.clone(),this._lastFeatureReduction=this.layer.featureReduction);try{if(await this._updateRequiredFields(),this.destroyed||!this.layerAdapter?.hasRequiredSupport||!this._subscriptionManager)return;const e=this.featureContainer.instanceStore;this.featureContainer.attributeView.lockTextureUploads(),e.updateStart();const t=this.featureEffect,r={store:e,cimAnalyzer:this.view.stage.cimAnalyzer,cimResourceManager:this.view.stage.painter.textureManager.resourceManager,scaleExpression:void 0},i=await this.layerAdapter.createServiceOptions(this.view),a=this._createViewSchemaConfig(),s={source:this.layerAdapter.createSourceSchema(i,a,this._sourceRefreshVersion),processor:await this.layerAdapter.createProcessorSchema(r,a,this._displayRefreshVersion)},n=!!f.diff(this._lastSchema?.source.mutable,s.source.mutable)||!!f.diff(this._lastSchema?.processor,s.processor);if(!n)return this.featureContainer.requestRender(),this.featureContainer.attributeView.unlockTextureUploads(),e.updateEnd(),void(this.featureEffectView.featureEffect=t);this._lastSchema=s,this._fields=null;const o=Math.round(performance.now());l("esri-2d-update-debug")&&console.debug(`Id[${this.layer.uid}] Version[${o}] FeatureLayerView2D._doUpdate`,{changes:n});let u=[];Array.isArray(i.source)&&(u=i.source),await this._worker.pipeline.updateSchema(s,o,{transferList:u}),e.updateEnd(),this.featureEffectView.featureEffect=t,this.featureEffectView.endTransitions(),this.featureContainer.attributeView.unlockTextureUploads(),this.featureContainer.swapRenderState(),this.featureContainer.requestRender(),l("esri-2d-update-debug")&&console.debug(`Version[${o}] FeatureLayerView2D.updateEnd`),this.requestUpdate()}catch(e){l("esri-2d-update-debug")&&console.error("Encountered an error during update",e)}}async _doEdit(e){try{this.featureContainer.editStart(),await this._worker.pipeline.onEdits(e),this.featureContainer.editEnd()}catch(t){d.isAbortError(t),0}}get hasFilter(){const e=this.layerAdapter.hasFilters?.(this.view)??!1;return null!=this.filter||null!=this.timeExtent||this._visibilityOverrides.size>0||e}_getEffectiveAvailableFields(e){const t=j(this._lastAvailableFields,e);return this._lastAvailableFields=t,w.packFields(this.layer.fieldsIndex,t)}_createViewSchemaConfig(){const e=[K(this.view,this.layerAdapter,this.timeExtent,this._visibilityOverrides,this.filter),this.featureEffect?.filter?.toJSON()??null];return{availableFields:this._getEffectiveAvailableFields(this.availableFields),filters:e,outSpatialReference:this.view.spatialReference,tileInfoJSON:this.view.featuresTilingScheme.tileInfo.toJSON(),scale:this.view.scale,timeZone:this.view.timeZone}}_addHighlight(e,t){this._highlightCounter.addReason(e,t),this._updateHighlight().catch((e=>{d.isAbortError(e)||h.getLogger(this).error(e)}))}_removeHighlight(e,t){this._highlightCounter.deleteReason(e,t),this._updateHighlight().catch((e=>{d.isAbortError(e)||h.getLogger(this).error(e)}))}_setLayersForFeature(e){e.layer=e.sourceLayer=this.layer,this.layerAdapter.setGraphicOrigin&&this.layerAdapter.setGraphicOrigin(e)}_createGraphicHit(e,t){return this._setLayersForFeature(t),null!=t.geometry&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};function K(e,t,r,i,a){a&&(a=a.clone());const s=null!=a?a.timeExtent:null,n=null!=r&&null!=s?r.intersection(s):r||s;n&&(a??=new m,a.timeExtent=n),a=t.addFilters?.(a,e)??a;let o=a?.toJSON()??null;return i.size&&(o??=(new m).toJSON(),o.hiddenIds=Array.from(i)),o}e.__decorate([y.property()],Z.prototype,"_worker",void 0),e.__decorate([y.property()],Z.prototype,"_commandsQueue",void 0),e.__decorate([y.property()],Z.prototype,"_sourceRefreshVersion",void 0),e.__decorate([y.property()],Z.prototype,"_displayRefreshVersion",void 0),e.__decorate([y.property({readOnly:!0})],Z.prototype,"_pipelineUpdating",void 0),e.__decorate([y.property({readOnly:!0})],Z.prototype,"hasAllFeatures",null),e.__decorate([y.property({readOnly:!0})],Z.prototype,"hasAllFeaturesInView",null),e.__decorate([y.property({readOnly:!0})],Z.prototype,"hasFullGeometries",null),e.__decorate([y.property()],Z.prototype,"featureEffectView",void 0),e.__decorate([y.property()],Z.prototype,"labelingCollisionInfos",null),e.__decorate([y.property()],Z.prototype,"layerAdapter",null),e.__decorate([y.property()],Z.prototype,"updateHash",null),e.__decorate([y.property()],Z.prototype,"updating",void 0),Z=e.__decorate([g.subclass(z)],Z);return Z}));
