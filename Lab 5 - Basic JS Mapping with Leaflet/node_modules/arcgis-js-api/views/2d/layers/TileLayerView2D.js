/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/handleUtils","../../../core/Logger","../../../core/promiseUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/support/spatialReferenceUtils","../../../support/GraphicsCollection","../../../core/Error","../../../core/scheduling","../../../core/accessorSupport/tracking/Flags","../../../core/colorUtils","../../../config","../../../core/mathUtils","../../../geometry/Extent","../../../symbols/Font","../../../core/ObjectPool","../../../geometry/Geometry","../../../geometry/Multipoint","../../../geometry/Point","../../../geometry/Polygon","../../../geometry/Polyline","../../../geometry/support/Axis","../../../geometry/support/TileClipper","../../../symbols/cim/effects/EffectAddControlPoints","../../../symbols/cim/effects/EffectArrow","../../../symbols/cim/effects/EffectBuffer","../../../symbols/cim/effects/EffectControlMeasureLine","../../../symbols/cim/effects/EffectCut","../../../symbols/cim/effects/EffectDashes","../../../symbols/cim/effects/EffectDonut","../../../symbols/cim/effects/EffectJog","../../../symbols/cim/effects/EffectMove","../../../symbols/cim/effects/EffectOffset","../../../symbols/cim/effects/EffectReverse","../../../symbols/cim/effects/EffectRotate","../../../symbols/cim/effects/EffectScale","../../../symbols/cim/effects/EffectWave","../../../symbols/cim/placements/PlacementAlongLineSameSize","../../../symbols/cim/placements/PlacementAtExtremities","../../../symbols/cim/placements/PlacementAtRatioPositions","../../../symbols/cim/placements/PlacementInsidePolygon","../../../symbols/cim/placements/PlacementOnLine","../../../symbols/cim/placements/PlacementOnVertices","../../../symbols/cim/placements/PlacementPolygonCenter","../../../symbols/cim/enums","../engine/webgl/definitions","../../../core/libs/gl-matrix-2/factories/vec2f32","../engine/webgl/alignmentUtils","../../../symbols/support/defaults","../../../symbols/cim/OverrideHelper","../../../core/floatRGBA","../../../layers/effects/EffectView","../engine/DisplayObject","./support/util","../../../core/Evented","../engine/webgl/enums","../engine/webgl/brushes/BrushBitmap","../../../core/libs/gl-matrix-2/factories/vec4f32","../../webgl/checkWebGLError","../../webgl/enums","../../webgl/FramebufferObject","../../../chunks/builtins","../../webgl/GLObjectType","../../webgl/Texture","../engine/webgl/shaders/BackgroundPrograms","../engine/webgl/DefaultVertexAttributeLayouts","../tiling/TileKey","../engine/webgl/DisplayEntity","../engine/webgl/number","../engine/webgl/PooledUint32Array","../engine/webgl/shaders/TileInfoPrograms","../engine/vectorTiles/style/StyleDefinition","../engine/vectorTiles/enums","../engine/webgl/shaders/BitBlitPrograms","../../../request","../../../core/urlUtils","../../../core/pbf","../engine/webgl/shaders/StencilPrograms","../engine/webgl/shaders/HighlightPrograms","../engine/webgl/Profiler","../engine/webgl/shaderGraph/techniques/TechniqueRegistry","../../webgl/renderState","../../3d/webgl-engine/core/shaderModules/interfaces","../../3d/webgl-engine/lib/OrderIndependentTransparency","../../webgl/testSVGPremultipliedAlpha","../LabelManager","./graphics/GraphicsView2D","../../../core/asyncUtils","../../../core/Collection","../../../core/accessorSupport/watch","../../../core/accessorSupport/tracking/SimpleTrackingTarget","../../../chunks/earcut","../../../geometry/support/aaBoundingBox","../../../core/libs/gl-matrix-2/factories/vec3f32","../../../geometry/support/normalizeUtilsCommon","../../../geometry/SpatialReference","../../../geometry/support/Ellipsoid","../../../geometry","../../../kernel","../navigation/MapViewNavigation","../engine/webgl/shaders/MagnifierPrograms","./BitmapTileLayerView2D","./LayerView2D","./graphics/HighlightGraphicContainer","./support/imageUtils","../tiling/TileInfoView","../tiling/TileQueue","../tiling/TileStrategy","../../layers/LayerView","../../layers/RefreshableLayerView","../../layers/support/MapServiceLayerViewHelper","../../support/drapedUtils"],(function(e,t,i,s,r,l,a,n,o,c,h,p,g,u,m,f,y,d,w,b,_,V,v,I,T,P,S,H,E,U,L,C,q,k,A,G,x,B,D,Q,R,M,O,F,z,j,W,J,K,N,X,Y,Z,$,ee,te,ie,se,re,le,ae,ne,oe,ce,he,pe,ge,ue,me,fe,ye,de,we,be,_e,Ve,ve,Ie,Te,Pe,Se,He,Ee,Ue,Le,Ce,qe,ke,Ae,Ge,xe,Be,De,Qe,Re,Me,Oe,Fe,ze,je,We,Je,Ke,Ne,Xe,Ye,Ze,$e,et,tt,it,st,rt,lt,at){"use strict";const nt=[0,0];let ot=class extends(rt(Xe.BitmapTileLayerView2D(Ye.LayerView2DMixin(st)))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new c.GraphicsCollection,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||!1!==this.layer.resampling}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this._highlightView?.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null,t=this.tilemapCache;if(this._tileInfoView=new et(this.layer.tileInfo,this.layer.fullExtent,t?.effectiveMinLOD,t?.effectiveMaxLOD),this._fetchQueue=new tt({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new it({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),lt.isMapServiceLayerView(this,this.layer)){const e=this._highlightView=new Ge({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Ze(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new lt.MapServiceLayerViewHelper({createFetchPopupFeaturesQueryGeometry:(e,t)=>at.createQueryGeometry(e,t,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(t,i)=>{e.graphicUpdateHandler({graphic:t,property:i})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add((()=>this.resampling),(()=>{this.doRefresh()}))),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t):[]}highlight(e){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(e):t.makeHandle()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){return o.equals(this.layer.tileInfo?.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e))))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(nt,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,t={}){const i=this.tilemapCache,{signal:r,resamplingLevel:l=0}=t;if(!i)try{return await this._fetchImage(e,r)}catch(o){if(!s.isAbortError(o)&&!this.resampling)return $e.createBlankImage(this._tileInfoView.tileInfo.size);if(l<3){const i=this._tileInfoView.getTileParentId(e.id);if(i){const s=new fe(i),r=await this.fetchTile(s,{...t,resamplingLevel:l+1});return $e.resampleImage(this._tileInfoView,r,s,e)}}throw o}const a=new fe(0,0,0,0);let n;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,a,{signal:r}),a.level!==e.level&&!this.resampling)return $e.createBlankImage(this._tileInfoView.tileInfo.size);n=await this._fetchImage(a,r)}catch(o){if(s.isAbortError(o))throw o;n=await this._fetchImage(e,r)}return this.resampling?$e.resampleImage(this._tileInfoView,n,a,e):n}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(t){s.isAbortError(t)||i.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};e.__decorate([r.property()],ot.prototype,"resampling",null),e.__decorate([r.property()],ot.prototype,"tilemapCache",null),ot=e.__decorate([n.subclass("esri.views.2d.layers.TileLayerView2D")],ot);return ot}));
