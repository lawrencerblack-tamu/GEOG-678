/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../renderers/ClassBreaksRenderer","../../../../renderers/DictionaryRenderer","../../../../renderers/DotDensityRenderer","../../../../renderers/HeatmapRenderer","../../../../renderers/PieChartRenderer","../../../../renderers/Renderer","../../../../renderers/SimpleRenderer","../../../../renderers/UniqueValueRenderer","../../../../renderers/support/jsonUtils","../../../../core/Logger","../../../../symbols","../../../../core/Error","../../../../core/has","../../../../core/MD5","../../../../layers/support/AggregateField","../../../../layers/support/ExpressionInfo","../../../../renderers/support/AuthoringInfo","../../../../symbols/SimpleMarkerSymbol"],(function(e,r,s,n,i,t,a,l,o,u,d,p,c,f,m,v,b,g,y){"use strict";const x=()=>d.getLogger("esri.views.2d.layers.support.clusterUtils");f.add("esri-cluster-arcade-enabled",!0);const E=f("esri-cluster-arcade-enabled"),_=new Set(["simple-line","simple-fill","picture-fill"]);function h(e,r){let s=r.clone();if(!C(s))return s;if(r.getSymbols().some((e=>_.has(e.type)))&&(s=new l({symbol:new y})),s.authoringInfo||(s.authoringInfo=new g),s.authoringInfo.isAutoGenerated=!0,"visualVariables"in s){const r=(s.visualVariables||[]).filter((e=>"$view.scale"!==e.valueExpression));r.forEach((r=>{"rotation"===r.type?r.field?r.field=$(e,r.field,"avg_angle","number"):r.valueExpression&&(r.field=S(e,r.valueExpression,"avg_angle","number"),r.valueExpression=null):r.normalizationField?(r.field=$(e,r.field,"avg_norm","number",r.normalizationField),r.normalizationField=null):r.field?r.field=$(e,r.field,"avg","number"):r.valueExpression&&(r.field=S(e,r.valueExpression,"avg","number"),r.valueExpression=null)})),s.visualVariables=r}switch(s.type){case"simple":break;case"pie-chart":for(const r of s.attributes)r.field?r.field=$(e,r.field,"sum","number"):r.valueExpression&&(r.field=S(e,r.valueExpression,"sum","number"),r.valueExpression=null);break;case"unique-value":s.field?s.field=$(e,s.field,"mode","string"):s.valueExpression&&(s.field=S(e,s.valueExpression,"mode","string"),s.valueExpression=null);break;case"class-breaks":s.normalizationField?(s.field=$(e,s.field,"avg_norm","number",s.normalizationField),s.normalizationField=null):s.field?s.field=$(e,s.field,"avg","number"):s.valueExpression&&(s.field=S(e,s.valueExpression,"avg","number"),s.valueExpression=null)}return s}const w=e=>{for(const r of e)if("size"===r.type)return r;return null},R=e=>{for(const r of e)if("cluster_count"===r.field)return!0;return!1},C=e=>{const r=r=>x().error(new c("Unsupported-renderer",r,{renderer:e}));if(!e)return!1;switch(e.type){case"unique-value":if(e.field2||e.field3)return r("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1;break;case"class-breaks":if(e.normalizationField){const s=e.normalizationType;if("field"!==s)return r(`FeatureReductionCluster does not support a normalizationType of ${s}`),!1}break;case"simple":case"pie-chart":break;default:return r(`FeatureReductionCluster does not support renderers of type ${e.type}`),!1}if(!E){if("valueExpression"in e&&e.valueExpression)return r("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in e&&e.visualVariables||[]).some((e=>!(!("valueExpression"in e)||!e.valueExpression))))return r("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};function F(e,r,s){switch(e){case"sum":return`cluster_sum_${r}`;case"avg":case"avg_angle":return`cluster_avg_${r}`;case"mode":return`cluster_type_${r}`;case"avg_norm":{const e=s,n="field",i=r.toLowerCase()+",norm:"+n+","+e.toLowerCase();return"cluster_avg_"+m.createMD5Hash(i)}}}function S(e,r,s,n){const i=m.createMD5Hash(r),t="mode"===s?`cluster_type_${i}`:"sum"===s?`cluster_sum_${i}`:`cluster_avg_${i}`;return e.some((e=>e.name===t))||e.push(new v({name:t,isAutoGenerated:!0,onStatisticExpression:new b({expression:r,returnType:n}),statisticType:s})),t}function $(e,r,s,n,i){if("cluster_count"===r||e.some((e=>e.name===r)))return r;const t=F(s,r,i);return e.some((e=>e.name===t))||("avg_norm"===s?e.push(new v({name:t,isAutoGenerated:!0,onStatisticExpression:new b({expression:`$feature.${r} / $feature.${i}`,returnType:n}),statisticType:"avg"})):e.push(new v({name:t,isAutoGenerated:!0,onStatisticField:r,statisticType:s}))),t}e.createInferredClusterRenderer=h,e.findSizeVV=w,e.hasClusterCountVV=R,e.isClusterCompatibleRenderer=C,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
