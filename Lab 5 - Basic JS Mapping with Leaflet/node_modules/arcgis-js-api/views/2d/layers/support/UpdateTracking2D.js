/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/has","../../../../core/ReactiveMap","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/support/UpdatingHandles"],(function(e,t,a,r,s,d,n,o,i,p,c){"use strict";e.UpdateTracking2D=class extends a{constructor(e){super(e),this.debugName="",this._updatingHandles=new c.UpdatingHandles,this._idToUpdatingState=new s}get updating(){const e=this._updatingHandles.updating||Array.from(this._idToUpdatingState.values()).some((e=>e));if(r("esri-2d-log-updating")){const t=Array.from(this._idToUpdatingState.entries()).map((([e,t])=>`-> ${e}: ${t}`)).join("\n");console.log(`${this.debugName}: Updating: ${e}\n-> Handles: ${this._updatingHandles.updating}\n${t}`)}return e}addUpdateTracking(e,t){const a=d.watch((()=>t.updating),(t=>this._idToUpdatingState.set(e,t)),{sync:!0});this.addHandles(a)}addPromise(e){return this._updatingHandles.addPromise(e)}},t.__decorate([n.property({constructOnly:!0})],e.UpdateTracking2D.prototype,"debugName",void 0),t.__decorate([n.property({readOnly:!0})],e.UpdateTracking2D.prototype,"updating",null),e.UpdateTracking2D=t.__decorate([p.subclass("esri.view.2d.layers.support.UpdateTracking2D")],e.UpdateTracking2D),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
