/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../../core/maybe","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f32","../../../webgl/BufferObject","../../../webgl/FramebufferObject","../../../../core/has","../../../webgl/checkWebGLError","../../../webgl/enums","../../../../chunks/builtins","../../../webgl/GLObjectType","../../../webgl/Texture","../../../webgl/VertexArrayObject","../../engine/DisplayObject","../../../webgl/VertexElementDescriptor"],(function(e,t,r,s,a,i,n,o,c,f,l,h,_,u){"use strict";const m={geometry:[new u.VertexElementDescriptor("a_PositionAndFlags",3,o.DataType.SHORT,0,6)]},d=new Map;d.set("a_PositionAndFlags",0);const g={vsPath:"debug/overlay",fsPath:"debug/overlay",attributes:d};class b extends _.DisplayObject{constructor(e){super(),this._conf=e}static makeFlags(e,t){return e|t<<2}_createTransforms(){return{displayViewScreenMat3:r.create()}}doRender(e){this._updateTransforms(e),this._ensureResources(e);const{context:t}=e;t.useProgram(this._program),this._program.setUniformMatrix3fv("u_dvsMat3",this.transforms.displayViewScreenMat3),this._program.setUniform4fv("u_colors",this._conf.getColors(e)),this._program.setUniform1fv("u_opacities",this._conf.getOpacities(e));const{vertexData:r,indexData:s}=this._conf.getMesh(e);this._vertexBuffer.setData(r),this._indexBuffer.setData(s),t.bindVAO(this._vertexArray),t.setBlendingEnabled(!0),t.setBlendFunction(o.BlendFactor.ONE,o.BlendFactor.ONE_MINUS_SRC_ALPHA),t.setDepthTestEnabled(!1),t.setStencilTestEnabled(!1),t.setColorMask(!0,!0,!0,!0),t.drawElements(o.PrimitiveType.TRIANGLES,s.length,o.DataType.UNSIGNED_INT,0)}onDetach(){this._vertexArray=e.disposeMaybe(this._vertexArray)}_updateTransforms(e){t.identity(this.transforms.displayViewScreenMat3),t.translate(this.transforms.displayViewScreenMat3,this.transforms.displayViewScreenMat3,[-1,1]),t.scale(this.transforms.displayViewScreenMat3,this.transforms.displayViewScreenMat3,[2/e.state.size[0],-2/e.state.size[1],1])}_ensureResources(e){const{context:t}=e;this._program||(this._program=e.painter.materialManager.getProgram(g)),this._vertexBuffer||(this._vertexBuffer=s.BufferObject.createVertex(t,o.Usage.STREAM_DRAW)),this._indexBuffer||(this._indexBuffer=s.BufferObject.createIndex(t,o.Usage.STREAM_DRAW)),this._vertexArray||(this._vertexArray=new h.VertexArrayObject(t,d,m,{geometry:this._vertexBuffer},this._indexBuffer))}}return b}));
