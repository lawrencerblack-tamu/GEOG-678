/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../Graphic","../../../core/arrayUtils","../../../core/Collection","../../../core/handleUtils","../../../core/reactiveUtils","../../../core/Logger","../../../core/has","../../../core/Error","../../../core/accessorSupport/decorators/subclass","../engine/highlightReasons","./LayerView2D","./graphics/GraphicContainer","./graphics/GraphicsView2D","../../layers/LayerView"],(function(i,e,t,s,h,a,r,n,l,o,c,g,p,d,u){"use strict";const w="sublayers",y="layerView";let f=class extends(g.LayerView2DMixin(u)){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){null==this._graphicsViewsFeatureCollectionMap?null==this._graphicsViews?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,e){return Array.from(this.graphicsViews(),(e=>{const t=e.hitTest(i);if(null!=this._graphicsViewsFeatureCollectionMap){const i=this._graphicsViewsFeatureCollectionMap.get(e);for(const e of t)!e.popupTemplate&&i.popupTemplate&&(e.popupTemplate=i.popupTemplate),e.sourceLayer=e.layer=this.layer}return t})).flat().map((e=>({type:"graphic",graphic:e,layer:this.layer,mapPoint:i})))}highlight(i){let a;"number"==typeof i?a=[i]:i instanceof e?a=[i.uid]:Array.isArray(i)&&i.length>0?a="number"==typeof i[0]?i:i.map((i=>i&&i.uid)):s.isCollection(i)&&(a=i.map((i=>i&&i.uid)).toArray());const r=a?.filter(t.isSome);return r?.length?(this._addHighlight(r),h.makeHandle((()=>this._removeHighlight(r)))):h.makeHandle()}update(i){for(const e of this.graphicsViews())e.processUpdate(i)}attach(){const i=this.view,e=()=>this.requestUpdate(),t=this.layer.featureCollections;if(null!=t&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of t){const t=new p(this.view.featuresTilingScheme),h=new d({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:e,container:t});this._graphicsViewsFeatureCollectionMap.set(h,s),this.container.addChild(h.container),this.addHandles([a.watch((()=>s.visible),(i=>h.container.visible=i),a.initial),a.watch((()=>h.updating),(()=>this.notifyChange("updating")),a.initial)],y)}this._updateHighlight()}else null!=this.layer.sublayers&&this.addHandles(a.on((()=>this.layer.sublayers),"change",(()=>this._createGraphicsViews()),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),w)}detach(){this._destroyGraphicsViews(),this.removeHandles(w)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(y);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),null==this.layer.sublayers)return;const i=[],e=this.view,t=()=>this.requestUpdate();for(const s of this.layer.sublayers){const h=new p(this.view.featuresTilingScheme);h.fadeTransitionEnabled=!0;const r=new d({view:e,graphics:s.graphics,requestUpdateCallback:t,container:h});this.addHandles([s.on("graphic-update",r.graphicUpdateHandler),a.watch((()=>s.visible),(i=>r.container.visible=i),a.initial),a.watch((()=>r.updating),(()=>this.notifyChange("updating")),a.initial)],y),this.container.addChild(r.container),i.push(r)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e);this._highlightIds.set(e,i+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e)-1;0===i?this._highlightIds.delete(e):this._highlightIds.set(e,i)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),e=c.getHighlightBits("highlight");for(const t of this.graphicsViews())t.setHighlight(i.map((i=>({objectId:i,highlightFlags:e}))))}};f=i.__decorate([o.subclass("esri.views.2d.layers.MapNotesLayerView2D")],f);return f}));
