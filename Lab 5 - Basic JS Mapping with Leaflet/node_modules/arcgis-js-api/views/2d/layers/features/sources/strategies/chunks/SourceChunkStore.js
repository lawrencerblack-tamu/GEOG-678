/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../../../core/Evented","../../../../../../../core/has","../../../../../../../geometry/support/aaBoundingBox","../../../FeatureStoreQueryAdapter","./OverrideChunk"],(function(e,s,r,o,t,n){"use strict";class h{constructor(e){this._onChange=e,this._chunks=new Map,this._chunksToRemove=[],this.events=new s,this.featureAdapter=new t.FeatureStoreQueryAdapter}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),null!=this._overrideChunk&&this._chunksToRemove.push(this._overrideChunk),this._overrideChunk=null}*chunks(){this._overrideChunk&&(yield this._overrideChunk),yield*this._chunks.values()}insert(e){r("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrideChunk?.overridenIds.size&&e.reader.removeIds(this._overrideChunk.overridenIds),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){r("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyOverrides(e,s){null==this._overrideChunk&&(this._overrideChunk=new n.OverrideChunk(s)),this._overrideChunk.applyOverrides(e);for(const r of this._chunks.values())r.reader.removeIds(this._overrideChunk.overridenIds),r.invalidate()}forEach(e){const s=new Set;for(const r of this.chunks()){const o=r.reader.getCursor();for(;o.next();){const r=o.getObjectId();s.has(r)||(e(o.copy()),s.add(r))}}}forEachUnsafe(e){const s=new Set;for(const r of this.chunks()){const o=r.reader.getCursor();for(;o.next();){const r=o.getObjectId();s.has(r)||(e(o),s.add(r))}}}forEachInBounds(e,s){const r=new Set;for(const o of this.chunks()){const t=o.queryFeaturesInBounds(e);for(;t.next();){const e=t.getObjectId();r.has(e)||(s(t.copy()),r.add(e))}}}forEachBounds(e,s){const r=o.create();for(const o of e){o.getBounds(r)&&s(r)}}}e.FeatureSourceChunkStore=h,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
