/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../../core/promiseUtils","./ATileLoadStrategy","./chunks/PagedTileSourceChunk","../../support/FeatureSetReaderJSON"],(function(t,e,o,r,s){"use strict";class a{constructor(t,o){this.subscription=t,this._pages=new Set,this._controller=new AbortController,this._done=!1,e.onAbort(t.options,(()=>this._controller.abort())),e.onAbort(o,(()=>this._controller.abort()))}resetAbortController(){this._controller=new AbortController}get pageStart(){let t=-1;for(const e of this._pages.values())t=Math.max(t,e);return t+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(t,e){this._pages.add(t),this._done=this._done||e}}class n extends o.ATileLoadStrategy{constructor(){super(...arguments),this._loadStates=new Map}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(t){this._loadStates.has(t.key.id)||this._loadStates.set(t.key.id,new a(t,this._options));const o=this._loadStates.get(t.key.id);let n;o.resetAbortController();try{await this._fetchPages(o)}catch(l){n=l}const i=new r.PagedTileSourceChunk(s.FeatureSetReaderJSON.empty(this._metadata),null,t.tile,-1,!0);if(e.isAborted(o.options)||this._addChunk(i),n)throw n}unload(t){super.unload(t),this._loadStates.delete(t.key.id)}async _fetchPages(t){const o=4,r=20;let s=0,a=t.pageStart,n=1;for(;s<r&&!t.done;){const r=[];for(let e=0;e<n;e++)r.push(this._fetchChunk(t,a++));const i=await Promise.all(r);for(const o of i)(0!==o.size()||o.first)&&(t.add(o.page,!o.reader.exceededTransferLimit),e.throwIfAborted(t.options),this._addChunk(o));s++,n=Math.min(n+1,o)}}async _fetchChunk(t,e){const o=t.subscription.tile,s=this._queryInfo.createPagedTileQuery(o,e),a=await this._fetch(s,t.options);return new r.PagedTileSourceChunk(a,s.inner.toJSON(),o,e,!1)}}t.PagedTileLoadStrategy=n,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
