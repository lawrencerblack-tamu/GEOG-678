/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","./ASourceChunk","../../../support/FeatureSetReaderJSON"],(function(e,r,t){"use strict";class s extends r.ASourceChunk{constructor(e){super(),this.metadata=e,this.chunkId="override",this.normalizedChunkId="override",this.removed=new Set,this.overridenIds=new Set,this._features=[]}get reader(){return t.FeatureSetReaderJSON.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}applyOverrides(e){super.invalidate();const{reader:r,removed:t}=e,s=[],d=new Set,o=r.getCursor(),n=new Set(t);for(this.overridenIds.clear();o.next();){const e=o.readOptimizedFeatureWorldSpace(),r=e.objectId;s.push(e),d.add(r),this.overridenIds.add(r),this.removed.delete(r)}for(const i of this._features){const e=i.objectId;n.has(e)||d.has(e)||(s.push(i),this.overridenIds.add(e))}this._features=s;for(const i of d.values())this.removed.delete(i);for(const i of t)this.removed.add(i),this.overridenIds.add(i)}getTileReader(e){if(!this._features.length)return null;const r=this.queryFeaturesInBounds(e.bounds);return r.setTransformForDisplay(e.transform),r}}e.OverrideChunk=s,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
