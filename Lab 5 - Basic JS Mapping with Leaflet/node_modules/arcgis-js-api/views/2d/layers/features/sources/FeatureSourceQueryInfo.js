/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../TimeExtent","../../../../../core/has","../../../../../geometry/SpatialReference","../../../../../layers/support/arcgisLayerUrl","../../../../../rest/support/Query"],(function(e,t,r,i,a,o){"use strict";const s=4;function n(e,r){const{service:o}=e,s=o.orderByFields??r.objectIdField+" ASC",n=o.source,u={returnCentroid:!(null!==n&&"object"==typeof n&&"path"in n&&a.isHostedAgolService(n.path))&&"esriGeometryPolygon"===r.geometryType,returnGeometry:!0,timeReferenceUnknownClient:r.timeReferenceUnknownClient??void 0,outSpatialReference:i.fromJSON(e.mutable.dataFilter.outSpatialReference),orderByFields:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields};if("feature"===e.type){const{gdbVersion:r,historicMoment:i,timeExtent:a}=e.mutable.dataFilter;return{...u,gdbVersion:r,historicMoment:i?new Date(i):null,timeExtent:a?t.fromJSON(a):null,outFields:e.mutable.availableFields}}return u}class u{static fromSchema(e,t){return new u(n(e,t),e.mutable.dataFilter.customParameters,t.geometryType,e.service.queryMetadata.capabilities)}constructor(e,t,r,i){this._queryParams=e,this._customParameters=t,this._geometryType=r,this._capabilities=i}get pageSize(){if(null==this._capabilities)throw new Error("InternalError: Service does not support paged queries");const{query:e}=this._capabilities,t=e.supportsMaxRecordCountFactor?s:null,r=(e.maxRecordCount??8e3)*(t??1);return Math.min(8e3,r)}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){const r=e.clone();if("*"===this._queryParams.outFields[0]){if("*"===(r.outFields??[])[0])return null;r.outFields=this._queryParams.outFields}else{const e=new Set(this._queryParams.outFields),i=[];for(const r of e)t.hasField(r)||i.push(r);if(0===i.length)return null;r.outFields=i}return r.returnGeometry=!1,r.returnCentroid=!1,r.quantizationParameters=null,r.cacheHint=!0,{inner:r,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new o({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(null==this._capabilities)throw new Error("InternalError: Service does not support tile queries");const i=this.createQuery(t),a=i.inner;return a.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),a.resultType="tile",a.geometry=e.extent,this._capabilities.query.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(a.maxAllowableOffset=e.resolution*r("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(a.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===this._geometryType&&(a.maxAllowableOffset*=r("feature-polyline-generalization-factor"))),a.defaultSpatialReferenceEnabled=this._capabilities.query.supportsDefaultSpatialReference,a.compactGeometryEnabled=this._capabilities.query.supportsCompactGeometry,this._capabilities.query.supportsMaxRecordCountFactor&&(a.maxRecordCountFactor=s),i}createPagedTileQuery(e,t){const r=this.pageSize;return this.createTileQuery(e,{start:r*t,num:r,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:s})}}e.FeatureSourceQueryInfo=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
