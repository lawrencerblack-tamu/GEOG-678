/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/Error","../../../../../core/has","../../../../../core/Logger","../../../../../core/accessorSupport/diffUtils","../../../engine/highlightReasons","../../../engine/webgl/definitions","../../../engine/webgl/DisplayId","../../../engine/webgl/Utils","../../../engine/webgl/shaderGraph/techniques/shaders/constants","../../../engine/webgl/util/debug","./DisplayIdGenerator","./FeatureFilter","../../../../webgl/enums"],(function(e,t,i,s,r,a,n,l,o,h,c,d,u,g){"use strict";function p(e,t){if(!e||!t)return e;switch(t){case"radius":case"distance":return 2*e;case"diameter":case"width":return e;case"area":return Math.sqrt(e)}return e}const y=()=>s.getLogger("esri.views.layers.2d.features.support.AttributeStore"),_=c.createDebugLogger(c.DEBUG_ATTR_UPDATES,y()),f={sharedArrayBuffer:i("esri-shared-array-buffer"),atomics:i("esri-atomics")};class b{constructor(e,t,i){this.size=0,this.texelSize=4,this.dirtyStart=0,this.dirtyEnd=0;const{pixelType:s,layout:r,textureOnly:a}=t;this.textureOnly=a||!1,this.pixelType=s,this.layout=r,this._resetRange(),this.size=e,this.isLocal=i,a||(this.data=this._initData(s,e))}get buffer(){return this.data?.buffer}unsetComponentAllTexels(e,t){const i=this.data;for(let s=0;s<this.size*this.size;s++)i[s*this.texelSize+e]&=~t;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponentAllTexels(e,t){const i=this.data;for(let s=0;s<this.size*this.size;s++)i[s*this.texelSize+e]|=255&t;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponent(e,t,i){const s=this.data;for(const r of i)s[r*this.texelSize+e]|=t,this.dirtyStart=Math.min(this.dirtyStart,r),this.dirtyEnd=Math.max(this.dirtyEnd,r)}setComponentTexel(e,t,i){this.data[i*this.texelSize+e]|=t,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}unsetComponentTexel(e,t,i){this.data[i*this.texelSize+e]&=~t,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}getData(e,t){const i=l.getDisplayIdTexel(e);return this.data[i*this.texelSize+t]}setData(e,t,i){const s=l.getDisplayIdTexel(e),r=1<<t;0!=(this.layout&r)?null!=this.data&&(this.data[s*this.texelSize+t]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)):y().error("mapview-attributes-store","Tried to set a value for a texel's readonly component")}expand(e){if(this.size=e,!this.textureOnly){const t=this._initData(this.pixelType,e),i=this.data;t.set(i),this.data=t}}toMessage(){const e=this.dirtyStart,t=this.dirtyEnd,i=this.texelSize;if(e>t)return null;this._resetRange();const s=!this.isLocal,r=this.pixelType,a=this.layout,n=this.data;return{start:e,end:t,data:s&&n.slice(e*i,(t+1)*i)||null,pixelType:r,layout:a}}_initData(e,t){const i=ArrayBuffer,s=o.getPixelArrayCtor(e),r=new s(new i(t*t*4*s.BYTES_PER_ELEMENT));for(let a=0;a<r.length;a+=4)r[a+1]=255;return r}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}}class m{constructor(e){this._client=e,this._filters=[],this._blocks=new Array,this._attributeComputeInfo=null,this._abortController=new AbortController,this._size=n.attributeStoreInitialSize,this._idsToHighlight=new Map,this._referencesScale=!1,this._referencesGeometry=!1,this._initialized=!1,this.version=0,this._idGenerator=new d.DisplayIdGenerator,this._epoch=1}destroy(){this._abortController.abort()}_initialize(){if(null!=this._blockDescriptors)return;const e=g.PixelType.FLOAT;_(`Creating AttributeStore ${f.sharedArrayBuffer?"with":"without"} shared memory`),this._blockDescriptors=[{pixelType:g.PixelType.UNSIGNED_BYTE,layout:1},{pixelType:g.PixelType.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:g.PixelType.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:e,layout:15},{pixelType:e,layout:15},{pixelType:e,layout:15},{pixelType:e,layout:15}],this._blocks=this._blockDescriptors.map((()=>null))}get referencesScale(){return this._referencesScale}get referencesGeometry(){return this._referencesGeometry}get _signal(){return this._abortController.signal}get hasHighlight(){return this._idsToHighlight.size>0}createDisplayIdForObjectId(e){return this._idGenerator.createIdForObjectId(e)}releaseDisplayIdForObjectId(e){return this._idGenerator.releaseIdForObjectId(e)}incrementDisplayIdGeneration(){this._idGenerator.incrementGeneration()}releaseAllIds(){this._idGenerator.releaseAll()}async update(e,t,s,a,n=0){const l=r.diff(this._schema,e);if(this.version=n,l&&(i("esri-2d-update-debug")&&console.debug(`Version[${n}] AttributeStore.update`,{changed:l}),this._schema=e,this._attributeComputeInfo=null,this._initialize(),null!=e))if(s&&(this._filters=await Promise.all(e.filters.map((e=>e?u.create({geometryType:s.geometryType,hasM:!1,hasZ:!1,timeInfo:s.timeInfo,fieldsIndex:s.fieldsIndex,spatialReference:a??s.spatialReference,filterJSON:e}):null)))),"subtype"!==e.type)this._attributeComputeInfo={isSubtype:!1,map:new Map},await Promise.all(e.bindings.map((async e=>{const i=await this._bind(t,e);this._referencesGeometry=this._referencesGeometry||(i?.referencesGeometry()??!1),this._referencesScale=this._referencesScale||(i?.referencesScale()??!1)})));else{this._attributeComputeInfo={isSubtype:!0,subtypeField:e.subtypeField,map:new Map},this._referencesScale=!1,this._referencesGeometry=!1;for(const i in e.bindings){const s=e.bindings[i];await Promise.all(s.map((async e=>{const s=await this._bind(t,e,parseInt(i,10));this._referencesGeometry=this._referencesGeometry||(s?.referencesGeometry()??!1),this._referencesScale=this._referencesScale||(s?.referencesScale()??!1)})))}}}setHighlight(e,t){const i=this._getBlock(0);i.unsetComponentAllTexels(0,(1<<a.highlightReasons.length)-1);for(const{displayId:s,highlightFlags:r}of e){if(null==s)continue;const e=l.getDisplayIdTexel(s);i.setComponent(0,r,[e])}this._idsToHighlight.clear();for(const{objectId:s,highlightFlags:r}of e)this._idsToHighlight.set(s,r);for(const{objectId:s,highlightFlags:r}of t)this._idsToHighlight.set(s,r)}setData(e,t,i,s){const r=l.getDisplayIdTexel(e);this._ensureSizeForTexel(r),this._getBlock(t).setData(e,i,s)}getData(e,t,i){return this._getBlock(t).getData(e,i)}getHighlightFlags(e){return this._idsToHighlight.get(e)||0}unsetAttributeData(e){const t=l.getDisplayIdTexel(e);this._getBlock(0).setData(t,0,0)}setAttributeData(e,t,i){const s=l.getDisplayIdTexel(e);this._ensureSizeForTexel(s),this._getBlock(0).setData(s,0,this.getFilterFlags(t));const r=this._attributeComputeInfo,a=1,o=4;let c=null;r&&(c=r.isSubtype?r.map.get(t.readAttribute(r.subtypeField)):r.map,c?.size&&c.forEach(((e,r)=>{const l=r*a%o,c=Math.floor(r*a/o),d=this._getBlock(c+n.AttributeDataType.VV);let u=e.field?.read(t,i);e.valueRepresentation&&(u=p(u,e.valueRepresentation));(null===u||isNaN(u)||u===1/0||u===-1/0)&&(u=h.nanMagicNumber),d.setData(s,l,u)})))}get epoch(){return this._epoch}async sendUpdates(){const e=this._blocks.map((e=>null!=e?e.toMessage():null)),t=this._getInitArgs();i("esri-2d-log-updating")&&console.log("AttributeStore: _doSendUpdate.start"),await this._client.update({initArgs:t,blockData:e,version:this.version,sendUpdateEpoch:this._epoch},this._signal),this._epoch+=1,i("esri-2d-log-updating")&&console.log("AttributeStore: _doSendUpdate.end")}_ensureSizeForTexel(e){for(;e>=this._size*this._size;)if(this._expand())return}async _bind(e,t,i){const s=await e.createComputedField(t),{valueRepresentation:r}=t,a=this._attributeComputeInfo;if(a.isSubtype){const e=a.map.get(i)??new Map;e.set(t.binding,{field:s,valueRepresentation:r}),a.map.set(i,e)}else a.map.set(t.binding,{field:s,valueRepresentation:r});return s}_getInitArgs(){return this._initialized?null:(this._initialized=!0,this._getBlock(n.AttributeDataType.Animation),this._getBlock(n.AttributeDataType.GPGPU),{blockSize:this._size,blockDescriptors:this._blocks.map((e=>null!=e?{textureOnly:e.textureOnly,buffer:e.buffer,pixelType:e.pixelType}:null))})}_getBlock(e){const t=this._blocks[e];if(null!=t)return t;_(`Initializing AttributeBlock at index ${e}`);const i=new b(this._size,this._blockDescriptors[e],this._client.isLocal);return this._blocks[e]=i,this._initialized=!1,i}_expand(){if(this._size<this._schema.capabilities.maxTextureSize){const e=this._size<<=1;_("Expanding block size to",e,this._blocks);for(const t of this._blocks)t?.expand(e);return this._initialized=!1,this._size=e,0}return y().error(new t("mapview-limitations","Maximum number of onscreen features exceeded.")),-1}isVisible(e){return!!(this._getBlock(0).getData(e,0)&1<<a.highlightReasons.length)}getFilterFlags(e){let t=0;for(let s=0;s<this._filters.length;s++){const i=!!(1<<s),r=this._filters[s];t|=(!i||null==r||r.check(e)?1:0)<<s}let i=0;if(this._idsToHighlight.size){const t=e.getObjectId();i=this.getHighlightFlags(t)}return t<<a.highlightReasons.length|i}}e.AttributeStore=m,e.getVisualVariableSizeValueRepresentationRatio=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
