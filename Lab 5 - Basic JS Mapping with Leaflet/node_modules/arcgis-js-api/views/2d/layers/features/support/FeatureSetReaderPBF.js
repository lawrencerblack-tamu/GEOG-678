/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/Error","../../../../../core/Logger","../../../../../core/maybe","../../../../../core/pbf","../../../../../layers/graphics/OptimizedGeometry","./FeatureSetCache","./FeatureSetReader","./FeatureSetReaderPBFHeader"],(function(e,t,r,s,n,a,i,h,o){"use strict";const d=!0,u=268435455,c=128,g=128e3,l={small:{delta:new Int32Array(c),decoded:new Int32Array(c)},large:{delta:new Int32Array(g),decoded:new Int32Array(g)}};function _(e){return e<=l.small.delta.length?l.small:(e<=l.large.delta.length||(l.large.delta=new Int32Array(Math.round(1.25*e)),l.large.decoded=new Int32Array(Math.round(1.25*e))),l.large)}function f(e){try{const t=2,r=new n(new Uint8Array(e),new DataView(e));for(;r.next();){if(r.tag()===t)return I(r.getMessage());r.skip()}}catch(s){const e=new t("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:s});r.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(e)}return null}function I(e){const t=1;for(;e.next();){if(e.tag()===t)return e.getMessage();e.skip()}return null}function p(e){const t=1,r=2,s=3,n=4,a=5,i=6,h=7,o=8,d=9,u=e.getLength(),c=e.pos()+u;for(;e.pos()<c&&e.next();)switch(e.tag()){case t:return e.getString();case r:return e.getFloat();case s:return e.getDouble();case n:return e.getSInt32();case a:return e.getUInt32();case i:return e.getInt64();case h:return e.getUInt64();case o:return e.getSInt64();case d:return e.getBool();default:return e.skip(),null}return null}function y(e,t,r,s,n,a){return.5*Math.abs(e*s+r*a+n*t-e*a-r*t-n*s)}function m(e,t,r,s){return 0===e*s-r*t&&e*r+t*s>0}class x extends h.FeatureSetReader{static fromBuffer(e,t,r=!1){const s=t.geometryType,n=f(e),a=o.parseHeader(n,"esriGeometryPoint"===s,r);return new x(n,a,t)}constructor(e,t,r){super(r),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=r.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints="esriGeometryPoint"===r.geometryType}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new x(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===u?null:new a([],[e,t])}_readGeometry(e=!1){if(void 0===this._cache.geometry){let r=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===u)return null;const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];r=new a([],[e,t])}else{const s=this._header.offsets.geometry[this._featureIndex],n=this._reader;if(0===s)return null;n.move(s);try{r=e?this._parseGeometryForDisplay(n):this._parseGeometry(n)}catch(t){return console.error("Failed to parse geometry!",t),null}}return 0===r?.coords.length&&(r=null),this._cache.geometry=r,r}return this._cache.geometry}_readAttribute(e,t){const r=this._header.fields.get(e);if(null==r)return;let s=this._readAttributeAtIndex(r.index);"esriFieldTypeTimestampOffset"===this.fields.get(e)?.type&&(s=this.parseTimestampOffset(s));const n=this._header.fields.isDateField(r.name);return t?null==s?s:n?new Date(s):s:s}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new i.FeatureSetCache(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const r=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;s.move(r);const n=p(s);return t.set(this._featureIndex,n),n}_readGeometryDeltaDecoded(e=!1){if(void 0===this._cache.unquantGeometry){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const r=_(t.coords.length).decoded,s=t.clone(r),n=s.coords;let a=0;for(const e of s.lengths){for(let t=1;t<e;t++){const e=2*(a+t),r=2*(a+t-1);n[e]+=n[r],n[e+1]+=n[r+1]}a+=e}return this._cache.unquantGeometry=s,s}return this._cache.unquantGeometry}_parseGeometry(e){const t=2,r=3,s=e.asUnsafe(),n=s.getLength(),i=s.pos()+n,h=[],o=[];for(;s.pos()<i&&s.next();)switch(s.tag()){case t:{const e=s.getUInt32(),t=s.pos()+e;for(;s.pos()<t;)o.push(s.getUInt32());break}case r:{const e=s.getUInt32(),t=s.pos()+e;for(h.push(s.getSInt64()),h.push(s.getSInt64()),this.hasZ&&s.getSInt64(),this.hasM&&s.getSInt64();s.pos()<t;)h.push(s.getSInt64()),h.push(s.getSInt64()),this.hasZ&&s.getSInt64(),this.hasM&&s.getSInt64();break}default:s.skip()}return new a(o,h)}_parseGeometryForDisplay(e){const t=2,r=3,n=e.asUnsafe(),i=n.getLength(),h=n.pos()+i,o=[],u=[];let c=0,g=0,l=null,f=0;const I="esriGeometryPolygon"===this.geometryType;for(;n.pos()<h&&n.next();)switch(n.tag()){case t:{const e=n.getUInt32(),t=n.pos()+e;for(;n.pos()<t;){const e=n.getUInt32();o.push(e),c+=e}l=_(2*c).delta;break}case r:{n.getUInt32();const e=2+(this.hasZ?1:0)+(this.hasM?1:0);s.assertIsSome(l);for(const t of o)if(g+e*t>l.length)for(let e=0;e<t;e++)n.getSInt32(),n.getSInt32(),this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32();else if(I&&d){const e=this.getAreaSimplificationThreshold(t,this._header.vertexCount);let r=2,s=1;const a=!1;let i=n.getSInt32(),h=n.getSInt32();l[g++]=i,l[g++]=h,this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32();let o=n.getSInt32(),d=n.getSInt32();for(this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32();r<t;){let t=n.getSInt32(),a=n.getSInt32();this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32();const u=i+o,c=h+d;y(i,h,u,c,u+t,c+a)>=e?(f+=-.5*(u-i)*(c+h),s>1&&m(l[g-2],l[g-1],o,d)?(l[g-2]+=o,l[g-1]+=d):(l[g++]=o,l[g++]=d,s++),i=u,h=c):(t+=o,a+=d),o=t,d=a,r++}s<3||a?g-=2*s:(f+=-.5*(i+o-i)*(h+d+h),m(l[g-2],l[g-1],o,d)?(l[g-2]+=o,l[g-1]+=d,u.push(s)):(l[g++]=o,l[g++]=d,u.push(++s)))}else{let e=0,r=n.getSInt32(),s=n.getSInt32();this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32(),l[g++]=r,l[g++]=s,e+=1;for(let a=1;a<t;a++){const t=n.getSInt32(),i=n.getSInt32(),h=r+t,o=s+i;f+=-.5*(h-r)*(o+s),this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32(),a>2&&m(l[g-2],l[g-1],t,i)?(l[g-2]+=t,l[g-1]+=i):(l[g++]=t,l[g++]=i,e+=1),r=h,s=o}u.push(e)}break}default:n.skip()}return this._cache.area=f,u.length?new a(u,l):null}}e.FeatureSetReaderPBF=x,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
