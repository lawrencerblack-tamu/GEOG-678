/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","./featureReductionUtils","./geometryUtils","./labelingUtils","../schema/processor/SimpleProcessorSchema","../support/rendererUtils"],(function(e,t,r,i,n,l){"use strict";class o{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,r=i.getFeatureReductionDeconflictionEnabled(t,e)??i.getLayerDeconflictionEnabled(t);return[{vvEvaluators:{0:i.createLabelVVEvaluator(t.renderer)},deconflictionEnabled:r}]}async createServiceOptions(e){const t=this.layer,{objectIdField:i}=t,n=r.getEffectiveGeometryType(t),l=t.timeInfo?.toJSON()||null,o=t.spatialReference?t.spatialReference.toJSON():null;return{source:this.layer.parsedUrl,metadata:{fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:n,objectIdField:i,timeInfo:l,timeReferenceUnknownClient:null,spatialReference:o,subtypeField:null,subtypes:null,globalIdField:null,typeIdField:null,types:null}}}createSourceSchema(e,t,r){const{definitionExpression:i,geometryDefinition:n,customParameters:l}=this.layer;return{type:"stream",service:e,tileInfoJSON:t.tileInfoJSON,mutable:{sourceRefreshVersion:r,availableFields:t.availableFields,dataFilter:{geometryDefinition:n?.toJSON(),definitionExpression:i,outSpatialReference:t.outSpatialReference.toJSON(),customParameters:l??null,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,purgeOptions:this.layer.purgeOptions.toJSON()}}}}createProcessorSchema(e,r,i){const{fields:l,renderer:o,geometryType:a,labelingInfo:s,labelsVisible:c,objectIdField:d}=this.layer,u={fields:l.map((e=>e.toJSON())),renderer:o?.clone(),featureReduction:t.getEffectiveFeatureReduction(this.layer,r),geometryType:a,labelingInfo:s,labelsVisible:c,objectIdField:d,orderBy:"default"};return n.createSimpleProcessorSchema(e,r,u,i)}get hasRequiredSupport(){return l.isRendererSupported(this.layer.renderer)}getUpdateHashProperties(e){const r=this.layer,{definitionExpression:i,renderer:n}=r,l=this.layer.labelsVisible?this.layer.labelingInfo:null,o=JSON.stringify(r.customParameters),a=t.getEffectiveFeatureReduction(r,e)?.toJSON();return{definitionExpression:i,renderer:n,labelingInfo:l,featureReduction:a,customParameters:o,streamFilter:`${JSON.stringify(r.geometryDefinition)}${r.definitionExpression}`}}}e.StreamLayerAdapter=o,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
