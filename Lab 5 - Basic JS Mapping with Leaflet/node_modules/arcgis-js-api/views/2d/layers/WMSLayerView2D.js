/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/Extent","../engine/BitmapContainer","./LayerView2D","./support/ExportStrategy","../../layers/LayerView","../../layers/RefreshableLayerView","../../layers/WMSLayerView"],(function(e,t,r,i,a,s,o,n,h,p,c,d,u,y,m,g){"use strict";let l=class extends(g(m(d.LayerView2DMixin(y)))){constructor(){super(...arguments),this.bitmapContainer=new c.BitmapContainer}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch((e=>{i.isAbortError(e)||t.getLogger(this).error(e)}))}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:r}=e;this.bitmapContainer=new c.BitmapContainer,this.container.addChild(this.bitmapContainer),this.strategy=new u({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(a.watch((()=>this.exportImageVersion),(()=>this.requestUpdate())))}detach(){this.strategy=r.destroyMaybe(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:r}=this,{x:i,y:a}=e,{spatialReference:s}=t;let o,n=0,h=0;if(r.children.some((e=>{const{width:t,height:r,resolution:c,x:d,y:u}=e,y=d+c*t,m=u-c*r;return i>=d&&i<=y&&a<=u&&a>=m&&(o=new p({xmin:d,ymin:m,xmax:y,ymax:u,spatialReference:s}),n=t,h=r,!0)})),!o)return null;const c=o.width/n,d=Math.round((i-o.xmin)/c),u=Math.round((o.ymax-a)/c);return{extent:o,width:n,height:h,x:d,y:u}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,i){return this.layer.fetchImageBitmap(e,t,r,{timeExtent:this.timeExtent,...i})}};e.__decorate([s.property()],l.prototype,"strategy",void 0),e.__decorate([s.property()],l.prototype,"updating",void 0),l=e.__decorate([h.subclass("esri.views.2d.layers.WMSLayerView2D")],l);return l}));
