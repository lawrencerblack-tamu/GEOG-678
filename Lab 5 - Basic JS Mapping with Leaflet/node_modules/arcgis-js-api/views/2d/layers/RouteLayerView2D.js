/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/arrayUtils","../../../core/Collection","../../../core/CollectionFlattener","../../../core/handleUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","../../../rest/support/DirectionLine","../../../rest/support/DirectionPoint","../../../rest/support/PointBarrier","../../../rest/support/PolygonBarrier","../../../rest/support/PolylineBarrier","../../../rest/support/RouteInfo","../../../rest/support/Stop","../engine/highlightReasons","./LayerView2D","./graphics/GraphicContainer","./graphics/GraphicsView2D","../../layers/LayerView"],(function(e,t,i,r,s,a,h,o,n,p,l,c,g,d,u,_,w,y,f,m,k,M){"use strict";const V=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],v={graphic:null,property:null,oldValue:null,newValue:null};function G(e){return e instanceof l||e instanceof c||e instanceof g||e instanceof d||e instanceof u||e instanceof _||e instanceof w}function I(e){return i.isCollection(e)&&e.length&&G(e.at(0))}function F(e){return Array.isArray(e)&&e.length>0&&G(e[0])}let H=class extends(f.LayerView2DMixin(M)){constructor(){super(...arguments),this._graphics=new i,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new r({getCollections:()=>null==this.layer||this.destroyed?[]:[null!=this.layer.routeInfo?new i([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange((()=>this._routeItems),(e=>this._routeItemsChanged(e)),a.initial)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeaturesAtLocation(e,t){return this._graphicsView.hitTest(e).filter((({popupTemplate:e})=>!!e))}highlight(e){let i;i=G(e)?[this._getNetworkFeatureUid(e)]:F(e)?e.map((e=>this._getNetworkFeatureUid(e))):I(e)?e.map((e=>this._getNetworkFeatureUid(e))).toArray():[e.uid];const r=i.filter(t.isSome);return r.length?(this._addHighlight(r),s.makeHandle((()=>this._removeHighlight(r)))):s.makeHandle()}async hitTest(e,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(e).filter(t.isSome).map((e=>this._networkGraphicMap.get(e)));if(!r.length)return null;const{layer:s}=this;return r.reverse().map((t=>({type:"route",layer:s,mapPoint:e,networkFeature:t})))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(e){this._graphicsView.processUpdate(e)}viewChange(){this._graphicsView.viewChange()}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_createGraphic(e){const t=e.toGraphic();return t.layer=this.layer,t.sourceLayer=this.layer,t}_createGraphicsView(){const e=this.view,t=()=>this.requestUpdate(),i=new m(e.featuresTilingScheme);this._graphicsView=new k({container:i,graphics:this._graphics,requestUpdateCallback:t,view:e}),this.container.addChild(i),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(e){const t=this._networkGraphicMap.get(e);return V.indexOf(t.type)}_getNetworkFeatureUid(e){return this._networkFeatureMap.has(e)?this._networkFeatureMap.get(e).uid:null}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_routeItemsChanged(e){if(e.removed.length){this._graphics.removeMany(e.removed.map((e=>{const t=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(t),t})));for(const t of e.removed)this.removeHandles(t)}if(e.added.length){this._graphics.addMany(e.added.map((e=>{const t=this._createGraphic(e);return null==t.symbol?null:(this._networkFeatureMap.set(e,t),this._networkGraphicMap.set(t,e),t)})).filter(t.isSome));for(const t of e.added)this.addHandles([a.watch((()=>t.geometry),((e,i)=>{this._updateGraphic(t,"geometry",e,i)})),a.watch((()=>t.symbol),((e,i)=>{this._updateGraphic(t,"symbol",e,i)}))],t);this._graphics.sort(((e,t)=>this._getDrawOrder(e)-this._getDrawOrder(t)))}}_updateGraphic(e,t,i,r){if(!this._networkFeatureMap.has(e)){const t=this._createGraphic(e);return this._networkFeatureMap.set(e,t),this._networkGraphicMap.set(t,e),void this._graphics.add(t)}const s=this._networkFeatureMap.get(e);s[t]=i,v.graphic=s,v.property=t,v.oldValue=r,v.newValue=i,this._graphicsView.graphicUpdateHandler(v)}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=y.getHighlightBits("highlight");this._graphicsView.setHighlight(e.map((e=>({objectId:e,highlightFlags:t}))))}};e.__decorate([h.property()],H.prototype,"_graphics",void 0),e.__decorate([h.property()],H.prototype,"_routeItems",null),H=e.__decorate([p.subclass("esri.views.2d.layers.RouteLayerView2D")],H);return H}));
