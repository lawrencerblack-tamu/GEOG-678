/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../../core/promiseUtils","./enums","./WorkerTile","./style/StyleRepository"],(function(e,t,s,r){"use strict";const o=25;class n{constructor(){this._spriteInfo={},this._glyphInfo={},this._sourceDataMaxLOD=o}reset(){return this._spriteInfo={},this._glyphInfo={},Promise.resolve()}getLayers(){return this._styleRepository?.layers??[]}async createTileAndParse(t,r){const{key:o}=t,n={};for(const e of Object.keys(t.sourceName2DataAndRefKey)){const s=t.sourceName2DataAndRefKey[e];n[e]=s.refKey}const a=new s(o,n,this,this._styleRepository);try{return await a.parse({...t,sourceDataMaxLOD:this._sourceDataMaxLOD},r)}catch(i){if(a.setObsolete(),a.release(),!e.isAbortError(i))throw i;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const s=this._styleRepository;for(const r of e){const e=r.type,o=r.data;switch(e){case t.StyleUpdateType.PAINTER_CHANGED:s.setPaintProperties(o.layer,o.paint);break;case t.StyleUpdateType.LAYOUT_CHANGED:s.setLayoutProperties(o.layer,o.layout);break;case t.StyleUpdateType.LAYER_REMOVED:s.deleteStyleLayer(o.layer);break;case t.StyleUpdateType.LAYER_CHANGED:s.setStyleLayer(o.layer,o.index);break;case t.StyleUpdateType.SPRITES_CHANGED:this._spriteInfo={}}}}setStyle(e){const{style:t,sourceDataMaxLOD:s}=e;this._styleRepository=new r(t),this._sourceDataMaxLOD=s,this._spriteInfo={},this._glyphInfo={}}fetchSprites(e,t,s){const r=[],o=this._spriteInfo;for(const n of e){void 0===o[n.name]&&r.push(n)}return 0===r.length?Promise.resolve():t.invoke("getSprites",r,{signal:s?.signal}).then((e=>{for(const t in e){const s=e[t];o[t]=s}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,s,r,o){const n=[];let a=this._glyphInfo[t];return a?s.forEach((e=>{a[e]||n.push(e)})):(a=this._glyphInfo[t]=[],s.forEach((e=>n.push(e)))),0===n.length?Promise.resolve():r.invoke("getGlyphs",{tileID:e,font:t,codePoints:n},o).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(a[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}return n}));
