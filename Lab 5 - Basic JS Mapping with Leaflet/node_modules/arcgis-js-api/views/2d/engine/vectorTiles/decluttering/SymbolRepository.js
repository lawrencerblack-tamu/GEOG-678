/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","./util"],(function(e,s){"use strict";const o=32,l=8,t=64;class i{constructor(e,s,o){this.tileCoordRange=e,this._visibleTiles=s,this._createUnique=o,this._tiles=new Map,this._uniqueSymbolsReferences=new Map}get uniqueSymbols(){return null==this._uniqueSymbolLayerArray&&(this._uniqueSymbolLayerArray=this._createUniqueSymbolLayerArray()),this._uniqueSymbolLayerArray}get uniqueSymbolsReferences(){return this._uniqueSymbolsReferences}add(e,i){this._uniqueSymbolLayerArray=null;let n=this._tiles.get(e.id);n||(n={symbols:new Map},this._tiles.set(e.id,n));const r=new Map;if(i)for(const s of i)n.symbols.has(s)&&(r.set(s,n.symbols.get(s)),n.symbols.delete(s));else for(const[s,o]of e.layerData)n.symbols.has(s)&&(r.set(s,n.symbols.get(s)),n.symbols.delete(s));this._removeSymbols(r);const y=e.symbols,a=new Map;for(const[u,c]of y){let e=c.length;if(e>=o){let o=this.tileCoordRange;do{o/=2,e/=4}while(e>l&&o>t);const i=new s.GridIndex(this.tileCoordRange,this.tileCoordRange,o);a.set(u,{flat:c,index:i}),n.symbols.set(u,{flat:c,index:i});for(const e of c)i.getCell(e.xTile,e.yTile).push(e)}else a.set(u,{flat:c}),n.symbols.set(u,{flat:c})}this._addSymbols(e.key,y)}deleteStyleLayers(e){this._uniqueSymbolLayerArray=null;for(const[s,o]of this._tiles){const l=new Map;for(const s of e)o.symbols.has(s)&&(l.set(s,o.symbols.get(s)),o.symbols.delete(s));this._removeSymbols(l),0===o.symbols.size&&this._tiles.delete(s)}}removeTile(e){this._uniqueSymbolLayerArray=null;const s=this._tiles.get(e.id);if(!s)return;const o=new Map;for(const[l,t]of e.symbols)s.symbols.has(l)&&(o.set(l,s.symbols.get(l)),s.symbols.delete(l));this._removeSymbols(o),0===s.symbols.size&&this._tiles.delete(e.id)}querySymbols(e,o,l,t){const i=[],n=this.uniqueSymbols;for(const r of n){const t=r.styleLayerUID,n=r.uniqueSymbols;for(const r of n){const n=r.tileSymbols.find((e=>e.selectedForRendering));n&&s.isSearchCircleOverlapingSymbol(n,e,o*(window.devicePixelRatio||1),l)&&i.push({vtlSymbol:n,styleLayerUID:t,tileKey:n.tile.key})}}return i}_removeSymbols(e){for(const[s,{flat:o}]of e)for(const e of o){const o=e.unique,l=o.tileSymbols,t=l.length-1;for(let s=0;s<t;s++)if(l[s]===e){l[s]=l[t];break}if(l.length=t,0===t){const e=this._uniqueSymbolsReferences.get(s);e.delete(o),0===e.size&&this._uniqueSymbolsReferences.delete(s)}e.unique=null}}_addSymbols(e,s){if(0===s.size)return;const o=this._visibleTiles;for(const l of o)l.parentTile||l.key.world!==e.world||l.key.level===e.level&&!l.key.equals(e)||this._matchSymbols(l,e,s);for(const[l,t]of s)for(const e of t)if(null==e.unique){const s=this._createUnique();e.unique=s,s.tileSymbols.push(e);let o=this._uniqueSymbolsReferences.get(l);o||(o=new Set,this._uniqueSymbolsReferences.set(l,o)),o.add(s)}}_matchSymbols(e,o,l){if(e.key.level>o.level){const s=e.key.level-o.level;if(e.key.row>>s!==o.row||e.key.col>>s!==o.col)return}if(o.level>e.key.level){const s=o.level-e.key.level;if(o.row>>s!==e.key.row||o.col>>s!==e.key.col)return}if(o.equals(e.key)){for(const s of e.childrenTiles)this._matchSymbols(s,o,l);return}const t=new Map;for(const[i,n]of l){const l=[];for(const t of n){const i=s.tileCoordChange(this.tileCoordRange,t.xTile,o.level,o.col,e.key.level,e.key.col),n=s.tileCoordChange(this.tileCoordRange,t.yTile,o.level,o.row,e.key.level,e.key.row);i>=0&&i<this.tileCoordRange&&n>=0&&n<this.tileCoordRange&&l.push({symbol:t,xTransformed:i,yTransformed:n})}const r=[],y=e.key.level<o.level?1:1<<e.key.level-o.level,a=this._tiles.get(e.id).symbols.get(i);if(a){const e=a.flat;for(const s of l){let o,l=!1;const t=s.xTransformed,i=s.yTransformed;o=null!=a.index?a.index.getCell(t,i):e;const n=s.symbol,u=n.hash;for(const e of o)if(u===e.hash&&Math.abs(t-e.xTile)<=y&&Math.abs(i-e.yTile)<=y){const s=e.unique;n.unique=s,s.tileSymbols.push(n),l=!0;break}l||r.push(n)}}r.length>0&&t.set(i,r)}for(const s of e.childrenTiles)this._matchSymbols(s,o,t)}_createUniqueSymbolLayerArray(){const e=this._uniqueSymbolsReferences,s=new Array(e.size);let o,l=0;for(const[t,i]of e){const e=new Array(i.size);o=0;for(const s of i)e[o++]=s;s[l]={styleLayerUID:t,uniqueSymbols:e},l++}return s}}e.SymbolRepository=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
