/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../../../chunks/tslib.es6","../../GraphShaderModule","../../graph/glsl","./markerConstants","../shaders/AFeatureShader","../shaders/constants","../shaders/hittestUtils","../shaders/MosaicInfo","../shaders/utils","../shaders/VisualVariableColor","../shaders/VisualVariableOpacity","../shaders/VisualVariableRotation","../shaders/VisualVariableSizeMinMaxValue","../shaders/VisualVariableSizeScaleStops","../shaders/VisualVariableSizeStops","../shaders/VisualVariableSizeUnitValue","../shaders/vvUtils"],(function(t,e,i,o,a,l,r,s,n,u,d,c,p,y,V,m,x,h){"use strict";class _ extends l.FeatureVertexInput{}e.__decorate([i.location(3,o.Vec4)],_.prototype,"color",void 0),e.__decorate([i.location(4,o.Vec4)],_.prototype,"outlineColor",void 0),e.__decorate([i.location(5,o.Vec2)],_.prototype,"offset",void 0),e.__decorate([i.location(6,o.Vec2)],_.prototype,"textureUV",void 0),e.__decorate([i.location(7,o.Vec4)],_.prototype,"sizing",void 0),e.__decorate([i.location(8,o.Float)],_.prototype,"placementAngle",void 0),e.__decorate([i.location(9,o.Float)],_.prototype,"sizeRatio",void 0),e.__decorate([i.location(10,o.Vec2)],_.prototype,"zoomRange",void 0);class g extends i.ComputeVertexInput{}e.__decorate([i.location(12,o.Vec2)],g.prototype,"offsetNextVertex1",void 0),e.__decorate([i.location(13,o.Vec2)],g.prototype,"offsetNextVertex2",void 0),e.__decorate([i.location(14,o.Vec2)],g.prototype,"textureUVNextVertex1",void 0),e.__decorate([i.location(15,o.Vec2)],g.prototype,"textureUVNextVertex2",void 0);class b extends l.FeatureFragmentInput{}function v(t,e,i,o){return e.multiply(t.x).add(i.multiply(t.y)).add(o.multiply(t.z))}function w(t){return t.multiply(t).divide(128)}class S extends l.AFeatureShader{constructor(){super(...arguments),this.computeAttributes={offset:["offsetNextVertex1","offsetNextVertex2"],textureUV:["textureUVNextVertex1","textureUVNextVertex2"]}}vertex(t,e){const i=w(t.sizing.x),l=w(t.sizing.y),s=w(t.sizing.z),n=t.placementAngle,d=u.getBit(t.bitset,a.MarkerConstants.bitset.isSDF),c=u.getBit(t.bitset,a.MarkerConstants.bitset.isMapAligned),p=u.getBit(t.bitset,a.MarkerConstants.bitset.scaleSymbolsProportionally),y=u.getBitBool(t.bitset,a.MarkerConstants.bitset.colorLocked),V=h.getVisualVariableOpacity(this,t.id),m=h.getVisualVariableColor(this,t.id,t.color,y).multiply(V),x=this.view.displayViewScreenMat3.multiply(new o.Vec3(t.pos.xy,1)),_=h.getVisualVariableSize(this,t.id,s).divide(s),g=i.multiply(_),b=t.offset.xy.multiply(_);let v=l.multiply(p.multiply(_.subtract(1)).add(1));v=o.min(v,o.max(g.subtract(.99),new o.Float(0)));const S=o.max(v,new o.Float(1)),f=o.min(v,new o.Float(1)),M=o.Mat3.fromRotation(n.multiply(r.c256ToRad)),z=h.getVisualVariableRotation(this,t.id),C=this._getViewRotationMatrix(c).multiply(z).multiply(M).multiply(new o.Vec3(b.xy,0)),F=this.clip(t.id,t.zoomRange),T=new o.Vec4(x.xy.add(C.xy),F,1),R=t.textureUV.divide(this.mosaicInfo.size),U=t.outlineColor.multiply(f),k=u.getBit(t.bitset,a.MarkerConstants.bitset.overrideOutlineColor),B=t.sizeRatio.multiply(g).multiply(.5);return{glPosition:T,color:m,textureUV:R,outlineColor:U,outlineSize:S,distanceToPx:B,isSDF:d,overrideOutlineColor:k,...this.maybeRunHittest(t,e,{pos:t.pos,size:g,sizeCorrection:_,isMapAligned:c,outlineSize:S,distanceToPx:B,isSDF:d})}}fragment(t){const e=this._getColor(t.textureUV,t);return this.getFragmentOutput(e,t)}hittest(t,e,i){return o.ifElse(o.lessThan(i.size,this.hittestRequest.smallSymbolSizeThreshold),this._hittestSmallMarker(t,e,i),this._hittestMarker(t,e,i))}_getViewRotationMatrix(t){const e=this.view.displayViewMat3,i=this.view.displayMat3,a=new o.Float(1).subtract(t);return e.multiply(t).add(i.multiply(a))}_getViewScreenMatrix(t){const e=this.view.viewMat3.multiply(this.view.tileMat3),i=this.view.tileMat3,a=new o.Float(1).subtract(t);return e.multiply(t).add(i.multiply(a))}_getColor(t,e){return o.ifElse(o.equal(e.isSDF,new o.Float(1)),this._getSDFColor(t,e),this._getSpriteColor(t,e))}_getSpriteColor(t,e){return o.texture2D(this.mosaicInfo.texture,t).multiply(e.color)}_getSDFColor(t,e){const i=o.texture2D(this.mosaicInfo.texture,t),a=new o.Float(.5).subtract(u.rgba2float(i)).multiply(e.distanceToPx).multiply(r.softEdgeRatio),l=o.clamp(new o.Float(.5).subtract(a),new o.Float(0),new o.Float(1)),s=e.color.multiply(l);let n=e.outlineSize;this.highlight&&(n=o.max(n,e.overrideOutlineColor.multiply(4)));const d=n.multiply(.5),c=o.abs(a).subtract(d),p=o.clamp(new o.Float(.5).subtract(c),new o.Float(0),new o.Float(1)),y=o.mix(e.outlineColor,e.color,e.overrideOutlineColor).multiply(p);return new o.Float(1).subtract(y.a).multiply(s).add(y)}_hittestSmallMarker(t,e,i){const{position:a,distance:l,smallSymbolDistance:r}=this.hittestRequest,s=l.subtract(r),{viewMat3:n,tileMat3:u}=this.view,d=n.multiply(u).multiply(new o.Vec3(i.pos,1)).xy,c=i.size.multiply(.5);return o.distance(d,a).subtract(c).add(s)}_hittestMarker(t,e,i){const{pos:a,size:l,sizeCorrection:r,isMapAligned:n,outlineSize:u,isSDF:d,distanceToPx:c}=i,p=new o.Vec3(t.offset.multiply(r),0),y=new o.Vec3(e.offsetNextVertex1.multiply(r),0),V=new o.Vec3(e.offsetNextVertex2.multiply(r),0),{viewMat3:m,tileMat3:x}=this.view,h=m.multiply(x).multiply(new o.Vec3(a,1)),_=this._getViewScreenMatrix(n),g=h.add(_.multiply(p)).xy,b=h.add(_.multiply(y)).xy,w=h.add(_.multiply(V)).xy,S=this.hittestRequest.position,f=this.hittestRequest.distance,M=s.xyToBarycentric(S.add(new o.Vec2(o.negate(f),o.negate(f))),g,b,w),z=s.xyToBarycentric(S.add(new o.Vec2(0,o.negate(f))),g,b,w),C=s.xyToBarycentric(S.add(new o.Vec2(f,o.negate(f))),g,b,w),F=s.xyToBarycentric(S.add(new o.Vec2(o.negate(f),0)),g,b,w),T=s.xyToBarycentric(S,g,b,w),R=s.xyToBarycentric(S.add(new o.Vec2(f,0)),g,b,w),U=s.xyToBarycentric(S.add(new o.Vec2(o.negate(f),f)),g,b,w),k=s.xyToBarycentric(S.add(new o.Vec2(0,f)),g,b,w),B=s.xyToBarycentric(S.add(new o.Vec2(f,f)),g,b,w),I=t.textureUV.divide(this.mosaicInfo.size),N=e.textureUVNextVertex1.divide(this.mosaicInfo.size),D=e.textureUVNextVertex2.divide(this.mosaicInfo.size),O={color:new o.Vec4(1),outlineColor:new o.Vec4(1),overrideOutlineColor:new o.Float(1),outlineSize:u,distanceToPx:c,isSDF:d};let A=new o.Float(0);return A=A.add(s.inTriangle(M).multiply(this._getColor(v(M,I,N,D),O).a)),A=A.add(s.inTriangle(z).multiply(this._getColor(v(z,I,N,D),O).a)),A=A.add(s.inTriangle(C).multiply(this._getColor(v(C,I,N,D),O).a)),A=A.add(s.inTriangle(F).multiply(this._getColor(v(F,I,N,D),O).a)),A=A.add(s.inTriangle(T).multiply(this._getColor(v(T,I,N,D),O).a)),A=A.add(s.inTriangle(R).multiply(this._getColor(v(R,I,N,D),O).a)),A=A.add(s.inTriangle(U).multiply(this._getColor(v(U,I,N,D),O).a)),A=A.add(s.inTriangle(k).multiply(this._getColor(v(k,I,N,D),O).a)),A=A.add(s.inTriangle(B).multiply(this._getColor(v(B,I,N,D),O).a)),o.step(A,new o.Float(.05)).multiply(s.failHittest(this.hittestRequest))}}e.__decorate([i.option(d.VisualVariableColor)],S.prototype,"visualVariableColor",void 0),e.__decorate([i.option(c.VisualVariableOpacity)],S.prototype,"visualVariableOpacity",void 0),e.__decorate([i.option(p.VisualVariableRotation)],S.prototype,"visualVariableRotation",void 0),e.__decorate([i.option(y.VisualVariableSizeMinMaxValue)],S.prototype,"visualVariableSizeMinMaxValue",void 0),e.__decorate([i.option(V.VisualVariableSizeScaleStops)],S.prototype,"visualVariableSizeScaleStops",void 0),e.__decorate([i.option(m.VisualVariableSizeStops)],S.prototype,"visualVariableSizeStops",void 0),e.__decorate([i.option(x.VisualVariableSizeUnitValue)],S.prototype,"visualVariableSizeUnitValue",void 0),e.__decorate([i.uniform(n.MosaicInfo)],S.prototype,"mosaicInfo",void 0),e.__decorate([e.__param(0,i.input(_)),e.__param(1,i.input(g))],S.prototype,"vertex",null),e.__decorate([e.__param(0,i.input(b))],S.prototype,"fragment",null),t.MarkerFragmentInput=b,t.MarkerShader=S,t.MarkerVertexInput=_,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
