/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../enums","../featureTechniqueUtils","../Technique","../mesh/MeshWriterRegistry","./TextShader"],(function(e,t,s,r,i,a){"use strict";class n extends r.Technique{constructor(){super(...arguments),this.meshWriter=i.meshWriterRegistry.TextMeshWriter,this.shaders={geometry:new a.TextShader},this.symbologyPlane=t.FeatureSymbologyDrawOrder.TEXT}render(e,t){const{context:r,painter:i}=e,a=s.getSelectionDefines(e),n={shader:this.shaders.geometry,uniforms:{...s.resolveDynamicUniforms(e,t.target,t.instance.getInput().geometry),...s.getFeatureUniforms(e,t.target),mosaicInfo:i.textureManager.getMosaicInfo(r,t.textureKey)},defines:{...a,isHaloPass:!1,isBackgroundPass:!0,isLabel:!1},optionalAttributes:t.instance.optionalAttributes,useComputeBuffer:s.isHittest(e)};i.setShader(n),i.setPipelineState(s.getFeaturePipelineState(e)),i.submitDraw(r,t),i.setShader({...n,defines:{...a,isHaloPass:!0,isBackgroundPass:!1,isLabel:!1}}),i.submitDraw(r,t),i.setShader({...n,defines:{...a,isHaloPass:!1,isBackgroundPass:!1,isLabel:!1}}),i.submitDraw(r,t)}}e.TextTechnique=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
