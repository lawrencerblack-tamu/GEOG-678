/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../definitions","../featureTechniqueUtils","../Technique","./DotDensityPointShader","./DotDensityPolygonShader","./DotDensityResources","../mesh/MeshWriterRegistry","../shaders/FillShader","../../../../../../webgl/enums"],(function(e,t,i,r,s,o,n,l,a,d){"use strict";class u extends r.Technique{constructor(){super(...arguments),this.shaders={polygon:new o.DotDensityPolygonShader,point:new s.DotDensityPointShader,fill:new a.FillShader},this.meshWriter=l.meshWriterRegistry.DotDensityMeshWriter,this._resources=new Map}render(e,t){i.isHighlight(e)||i.isHittest(e)?this._renderPolygons(e,t):this._renderDotDensity(e,t)}_renderPolygons(e,t){const{context:r,painter:s}=e;s.setShader({shader:this.shaders.fill,uniforms:{...i.getFeatureUniforms(e,t.target),visualVariableColor:null,visualVariableOpacity:null},defines:{...i.getSelectionDefines(e)},optionalAttributes:{zoomRange:!1},useComputeBuffer:i.isHittest(e)}),s.setPipelineState(i.getFeaturePipelineState(e)),s.submitDraw(r,t)}_renderDotDensity(e,r){const{context:s,painter:o,requiredLevel:n}=e,l=r.instance.getInput(),a=this._getOrCreateResourcesRecord(s),u=a.getDotDensityTextures(s,t.tileSize,l.seed),c=1/2**(n-r.target.key.level),h=t.tileSize,g=h*window.devicePixelRatio*h*window.devicePixelRatio,p=1/c*(1/c),f=l.dotScale?e.state.scale/l.dotScale:1,w=l.dotValue*f*p;o.setShader({shader:this.shaders.polygon,uniforms:{...i.getFeatureUniforms(e,r.target),instance:{isActive:l.isActive,colors:l.colors,dotValue:Math.max(1,w)},draw:{dotTexture0:{unit:t.textureBindingRenderer0,texture:u[0]},dotTexture1:{unit:t.textureBindingRenderer1,texture:u[1]},tileZoomFactor:c,pixelRatio:window.devicePixelRatio,tileDotsOverArea:g/(t.tileSize*window.devicePixelRatio*t.tileSize*window.devicePixelRatio)}},defines:{...i.getSelectionDefines(e),blending:l.blending},optionalAttributes:{},useComputeBuffer:!1}),o.setPipelineState(i.getFeaturePipelineState(e));const D=s.getViewport();s.setViewport(0,0,t.tileSize,t.tileSize);const S=s.getBoundFramebufferObject(),m=a.getFBO(s);s.bindFramebuffer(m),s.setClearColor(0,0,0,0),o.setPipelineState({color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1}),o.updatePipelineState(s),s.clear(d.ClearBufferBit.COLOR_BUFFER_BIT),o.submitDraw(s,r),s.bindFramebuffer(S),s.setViewport(D.x,D.y,D.width,D.height);const y=a.getFBO(s).colorTexture;o.setShader({shader:this.shaders.point,uniforms:{view:i.getViewUniforms(e,r.target),instance:{dotSize:l.dotSize},draw:{locations:{unit:t.textureBindingRenderer0,texture:y},tileZoomFactor:1,pixelRatio:window.devicePixelRatio}},defines:{...i.getSelectionDefines(e)},optionalAttributes:{},useComputeBuffer:!1}),o.setPipelineState({color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1}),o.submitDrawMesh(s,a.getDotDensityMesh(s))}shutdown(e){super.shutdown(e),this._resources.get(e)?.destroy(),this._resources.delete(e)}_getOrCreateResourcesRecord(e){let t=this._resources.get(e);return null==t&&(t=new n.DotDensityResources,this._resources.set(e,t)),t}}e.DotDensityTechnique=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
