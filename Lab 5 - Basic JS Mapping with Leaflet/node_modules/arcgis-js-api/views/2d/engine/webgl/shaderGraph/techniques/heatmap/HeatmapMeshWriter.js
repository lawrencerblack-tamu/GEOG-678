/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../mesh/MeshWriter","../../../../../../webgl/enums"],(function(e,t,r){"use strict";const i={createComputedParams:e=>e,attributes:{pos:{type:r.DataType.SHORT,count:2,pack:"position",packPrecisionFactor:10},id:{type:r.DataType.UNSIGNED_BYTE,count:3,pack:"id"},bitset:{type:r.DataType.UNSIGNED_BYTE,count:1},offset:{type:r.DataType.BYTE,count:2,packAlternating:{count:4,pack:()=>[[-1,-1],[1,-1],[-1,1],[1,1]]}}}};class a extends t.MeshWriter{constructor(){super(...arguments),this.vertexSpec=i}_write(e,t){e.recordStart(this.instanceId,this.attributeLayout);const r=t.getDisplayId();if("esriGeometryPoint"===t.geometryType){const i=t.readXForDisplay(),a=t.readYForDisplay();this._writeQuad(e,r,i,a)}else if("esriGeometryMultipoint"===t.geometryType){const i=t.readGeometryForDisplay();i?.forEachVertex(((t,i)=>{t>=0&&t<=512&&i>=0&&i<=512&&this._writeQuad(e,r,t,i)}))}e.recordEnd()}_writeQuad(e,t,r,i){const a=e.vertexCount();this._writeVertex(e,t,r,i),e.indexWrite(a+0),e.indexWrite(a+1),e.indexWrite(a+2),e.indexWrite(a+1),e.indexWrite(a+3),e.indexWrite(a+2)}}e.HeatmapMeshWriter=a,e.heatmapVertexSpec=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
