/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../../../chunks/tslib.es6","../../GraphShaderModule","../../graph/glsl","./heatmapUtils"],(function(e,t,o,r,a){"use strict";class n extends o.VertexInput{}t.__decorate([o.location(0,r.Vec2)],n.prototype,"pos",void 0);class i extends o.FragmentInput{}class p extends o.UniformGroup{}t.__decorate([o.uniform(r.Sampler2D)],p.prototype,"texture",void 0),t.__decorate([o.uniform(r.Vec2)],p.prototype,"minAndInvRange",void 0),t.__decorate([o.uniform(r.Float)],p.prototype,"normalization",void 0);class s extends o.UniformGroup{}t.__decorate([o.uniform(r.Sampler2D)],s.prototype,"texture",void 0);class u extends o.GraphShaderModule{constructor(){super(...arguments),this.usesHalfFloatPrecision=!1}vertex(e){return{glPosition:new r.Vec4(e.pos.multiply(2).subtract(1),1,1),uv:e.pos}}fragment(e){const{accumulatedDensity:t,gradient:n}=this;let i=r.texture2D(t.texture,e.uv).r.multiply(new r.Float(a.getHeatmapCompressionFactor(this.usesHalfFloatPrecision)));i=i.multiply(t.normalization),i=i.subtract(t.minAndInvRange.x).multiply(t.minAndInvRange.y);const p=r.texture2D(n.texture,new r.Vec2(i,.5)),s=new o.FragmentOutput;return s.glFragColor=new r.Vec4(p.rgb.multiply(p.a),p.a),s}}t.__decorate([o.define],u.prototype,"usesHalfFloatPrecision",void 0),t.__decorate([o.uniform(p)],u.prototype,"accumulatedDensity",void 0),t.__decorate([o.uniform(s)],u.prototype,"gradient",void 0),t.__decorate([t.__param(0,o.input(n))],u.prototype,"vertex",null),t.__decorate([t.__param(0,o.input(i))],u.prototype,"fragment",null),e.AccumulatedDensity=p,e.Gradient=s,e.HeatmapResolveFragmentInput=i,e.HeatmapResolveShader=u,e.HeatmapResolveVertexInput=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
