/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../../../chunks/tslib.es6","../../GraphShaderModule","../../graph/glsl","./AFeatureShader","./constants","./hittestUtils","./LineShader","./utils","./VisualVariableColor","./VisualVariableOpacity","./VisualVariableSizeMinMaxValue","./VisualVariableSizeScaleStops","./VisualVariableSizeStops","./VisualVariableSizeUnitValue","./vvUtils"],(function(e,t,i,a,o,l,r,n,s,p,u,c,V,d,_,S){"use strict";class y extends o.FeatureVertexInput{}t.__decorate([i.location(3,a.Vec2)],y.prototype,"offset",void 0),t.__decorate([i.location(4,a.Vec4)],y.prototype,"color",void 0),t.__decorate([i.location(5,a.Vec2)],y.prototype,"normal",void 0),t.__decorate([i.location(6,a.Float)],y.prototype,"halfWidth",void 0),t.__decorate([i.location(7,a.Float)],y.prototype,"referenceHalfWidth",void 0),t.__decorate([i.location(8,a.Vec2)],y.prototype,"zoomRange",void 0);class b extends n.LineFragmentInput{}function h(e,t,i){const{id:o,bitset:r}=t,p=s.getBit(r,l.bitsetTypeFillOutline),u=a.greaterThan(p,new a.Float(.5)),c=n.getLineVertexData(e,t),V=a.ifElse(u,c.halfWidth,new a.Float(0)),d=S.getVisualVariableOpacity(e,o),_=S.getVisualVariableColor(e,o,t.color),y=a.ifElse(u,t.color,_.multiply(d)),b=e.view.displayViewScreenMat3.multiply(new a.Vec3(t.pos.xy,1)),h=e.clip(t.id),g=new a.Vec4(b.xy,h,1),v=a.ifElse(u,c.glPosition,g),F=i&&e.maybeRunHittest(t,i,u);return{isOutline:p,color:y,opacity:new a.Float(1),halfWidth:V,normal:c.normal,glPosition:v,...F}}class g extends o.AFeatureShader{constructor(){super(...arguments),this.computeAttributes={pos:["nextPos1","nextPos2"]}}}t.__decorate([i.uniform(n.AntialiasingControls)],g.prototype,"antialiasingControls",void 0),t.__decorate([i.option(p.VisualVariableColor)],g.prototype,"visualVariableColor",void 0),t.__decorate([i.option(u.VisualVariableOpacity)],g.prototype,"visualVariableOpacity",void 0),t.__decorate([i.option(c.VisualVariableSizeMinMaxValue)],g.prototype,"visualVariableSizeMinMaxValue",void 0),t.__decorate([i.option(V.VisualVariableSizeScaleStops)],g.prototype,"visualVariableSizeScaleStops",void 0),t.__decorate([i.option(d.VisualVariableSizeStops)],g.prototype,"visualVariableSizeStops",void 0),t.__decorate([i.option(_.VisualVariableSizeUnitValue)],g.prototype,"visualVariableSizeUnitValue",void 0);class v extends g{vertex(e,t){return h(this,e,t)}fragment(e){const{color:t,isOutline:i}=e,o=a.greaterThan(i,new a.Float(.5)),l=n.getLineFragmentColor(e,this.antialiasingControls.blur),r=t,s=a.ifElse(o,l,r),p=a.ifElse(o,new a.Float(1/255),new a.Float(0));return this.getFragmentOutput(s,e,p)}hittest(e,t,i){return a.ifElse(i,r.failHittest(this.hittestRequest),r.hittestFill(this,e,t))}}t.__decorate([t.__param(0,i.input(y)),t.__param(1,i.input(o.BaseHittestVertexInput))],v.prototype,"vertex",null),t.__decorate([t.__param(0,i.input(b))],v.prototype,"fragment",null),e.AOutlineFillShader=g,e.OutlineFillFragmentInput=b,e.OutlineFillShader=v,e.OutlineFillVertexInput=y,e.getOutlineFillVertexData=h,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
