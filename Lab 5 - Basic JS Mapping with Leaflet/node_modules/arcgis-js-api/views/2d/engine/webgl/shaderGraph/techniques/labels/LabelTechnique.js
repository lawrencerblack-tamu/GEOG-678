/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../enums","../featureTechniqueUtils","../Technique","../mesh/MeshWriterRegistry","../text/TextShader"],(function(e,t,s,r,a,i){"use strict";class n extends r.Technique{constructor(){super(...arguments),this.meshWriter=a.meshWriterRegistry.LabelMeshWriter,this.shaders={geometry:new i.TextShader},this.drawPhase=t.WGLDrawPhase.LABEL|t.WGLDrawPhase.LABEL_ALPHA,this.symbologyPlane=t.FeatureSymbologyDrawOrder.TEXT}render(e,t){const{context:r,painter:a}=e,i=s.getSelectionDefines(e),n={...s.getFeaturePipelineState(e)},o={shader:this.shaders.geometry,uniforms:{...s.resolveDynamicUniforms(e,t.target,t.instance.getInput().geometry),...s.getFeatureUniforms(e,t.target),mosaicInfo:a.textureManager.getMosaicInfo(r,t.textureKey)},defines:{...i,isHaloPass:!1,isBackgroundPass:!0,isLabel:!0},optionalAttributes:t.instance.optionalAttributes,useComputeBuffer:!1};a.setShader(o),a.setPipelineState(n),a.submitDraw(r,t),a.setShader({...o,defines:{...i,isHaloPass:!0,isBackgroundPass:!1,isLabel:!0}}),a.setPipelineState(n),a.submitDraw(r,t),a.setShader({...o,defines:{...i,isHaloPass:!1,isBackgroundPass:!1,isLabel:!0}}),a.setPipelineState(n),a.submitDraw(r,t)}}e.LabelTechnique=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
