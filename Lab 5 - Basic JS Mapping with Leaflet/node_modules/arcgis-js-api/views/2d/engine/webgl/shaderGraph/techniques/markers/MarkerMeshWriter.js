/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../../../core/screenUtils","../../../../../../../core/libs/gl-matrix-2/math/mat2d","../../../../../../../core/libs/gl-matrix-2/factories/mat2df32","../../../../../../../core/libs/gl-matrix-2/math/vec2","../../../../../../../geometry/GeometryCursor","../../../../../../../symbols/cim/constants","../../../../../../../symbols/cim/enums","../../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper","../../../definitions","../fill/meshWriterUtils","./ComputedMarkerParams","./markerConstants","../mesh/loadGeometryEngine","../mesh/MeshWriter","../../../../../../webgl/enums"],(function(e,t,a,r,o,s,i,n,c,l,u,d,m,p,h,y){"use strict";const M=3.14159265359/180,f=128/Math.PI;function k(e,t){return e%=t,Math.abs(e>=0?e:e+t)}function x(e){return k(e*f,256)}function g(e,t,o,s,i=!1){const n=r.create(),c=i?1:-1;return e?a.fromRotation(n,c*M*e):a.identity(n),(t||o)&&a.translate(n,n,[t,-o]),s&&a.rotate(n,n,c*M*-s),n}const P={createComputedParams:e=>d.ComputedMarkerParams.from(e),attributes:{pos:{type:y.DataType.SHORT,count:2,pack:"position",packPrecisionFactor:10},id:{type:y.DataType.UNSIGNED_BYTE,count:3,pack:"id"},bitset:{type:y.DataType.UNSIGNED_BYTE,count:1,pack:({sprite:e,alignment:t,scaleSymbolsProportionally:a,overrideOutlineColor:r,colorLocked:o})=>{let s=0;return e.sdf&&(s|=u.getBitMask(m.MarkerConstants.bitset.isSDF)),t===n.Alignment.MAP&&(s|=u.getBitMask(m.MarkerConstants.bitset.isMapAligned)),a&&(s|=u.getBitMask(m.MarkerConstants.bitset.scaleSymbolsProportionally)),r&&(s|=u.getBitMask(m.MarkerConstants.bitset.overrideOutlineColor)),o&&(s|=u.getBitMask(m.MarkerConstants.bitset.colorLocked)),s}},zoomRange:{type:y.DataType.SHORT,count:2,packPrecisionFactor:l.minMaxZoomPrecisionFactor,pack:({scaleInfo:e},{tileInfo:t})=>u.getMinMaxZoom(e,t)},offset:{type:y.DataType.SHORT,count:2,packPrecisionFactor:4,packAlternating:{count:4,pack:({angle:e,computedWidth:t,computedHeight:a,anchorX:r,anchorY:s,offsetX:i,offsetY:n,rotateClockwise:c})=>{const l=g(0,i,n,-e,c),u=-(.5+r)*t,d=-(.5-s)*a,m=[u,d],p=[u+t,d],h=[u,d+a],y=[u+t,d+a];return o.transformMat2d(m,m,l),o.transformMat2d(p,p,l),o.transformMat2d(h,h,l),o.transformMat2d(y,y,l),[m,p,h,y]}}},textureUV:{type:y.DataType.SHORT,count:2,packPrecisionFactor:4,packAlternating:{count:4,pack:({texXmax:e,texXmin:t,texYmax:a,texYmin:r})=>[[t,r],[e,r],[t,a],[e,a]]}},color:{type:y.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({color:e})=>u.processColorInput(e)},outlineColor:{type:y.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({outlineColor:e})=>u.processColorInput(e)},sizing:{type:y.DataType.UNSIGNED_BYTE,count:4,pack:({rawWidth:e,rawHeight:t,outlineSize:a,referenceSize:r})=>{const o=Math.max(e,t);return[u.packByteSqrt(o,128),u.packByteSqrt(a,128),u.packByteSqrt(r,128),0]}},placementAngle:{type:y.DataType.UNSIGNED_BYTE,count:1,packTessellation:({placementAngle:e})=>x(e)},sizeRatio:{type:y.DataType.UNSIGNED_SHORT,count:1,packPrecisionFactor:64,pack:({sizeRatio:e})=>e}}};class T extends h.MeshWriter{constructor(){super(...arguments),this.vertexSpec=P}getBoundsInfo(){return this.evaluatedMeshParams.boundsInfo}_write(e,t,a){const r=this.evaluatedMeshParams.sprite?.textureBinding,o=t.getDisplayId();e.recordStart(this.instanceId,this.attributeLayout,r);const s=this.evaluatedMeshParams.minPixelBuffer,n=Math.max(this.evaluatedMeshParams.computedWidth,s),c=Math.max(this.evaluatedMeshParams.computedHeight,s),l=this.evaluatedMeshParams.offsetX,u=-this.evaluatedMeshParams.offsetY;if(null!=this.evaluatedMeshParams.placement)this._writePlacedMarkers(e,t,a,n,c);else if(a&&a.nextPath()){a.nextPoint();const t=a.x,r=a.y;e.recordBounds(t+l,r+u,n,c),this._writeQuad(e,o,t,r)}else if("esriGeometryPolygon"===t.geometryType){const a=t.readCentroidForDisplay();if(!a)return;const[r,s]=a.coords;e.recordBounds(r+l,s+u,n,c),this._writeQuad(e,o,r,s)}else if("esriGeometryPoint"===t.geometryType){const a=t.readXForDisplay(),r=t.readYForDisplay();e.recordBounds(a+l,r+u,n,c),this._writeQuad(e,o,a,r)}else{const a=t.readGeometryForDisplay();a?.forEachVertex(((t,a)=>{e.recordBounds(t+l,a+u,n,c),Math.abs(t)>i.maxTileCoordValue||Math.abs(a)>i.maxTileCoordValue||this._writeQuad(e,o,t,a)}))}e.recordEnd()}_writePlacedMarkers(e,a,r,o,n){const l=r??s.GeometryCursor.fromFeatureSetReaderCIM(a)?.clone();if(!l)return;const u=-1,d=c.CIMMarkerPlacementHelper.getPlacement(l,u,this.evaluatedMeshParams.placement,t.pt2px(1),e.id,p.getGeometryEngine());if(!d)return;const m=a.getDisplayId();let h=d.next();const y=this.evaluatedMeshParams.offsetX,M=-this.evaluatedMeshParams.offsetY;for(;null!=h;){const t=h.tx,a=-h.ty;if(Math.abs(t)>i.maxTileCoordValue||Math.abs(a)>i.maxTileCoordValue){h=d.next();continue}const r=-h.getAngle();e.recordBounds(t+y,a+M,o,n),this._writeQuad(e,m,t,a,r),h=d.next()}}_writeQuad(e,t,a,r,o){const s=e.vertexCount(),i=null==o?null:{placementAngle:o};this._writeVertex(e,t,a,r,i),e.indexWrite(s+0),e.indexWrite(s+1),e.indexWrite(s+2),e.indexWrite(s+1),e.indexWrite(s+3),e.indexWrite(s+2)}}e.MarkerMeshWriter=T,e.MarkerVertexSpec=P,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
