/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../../../core/RandomLCG","../../../definitions","../../../meshing/SimpleMesh","../mesh/utils","../../../../../../webgl/enums","../../../../../../webgl/FramebufferObject","../../../../../../webgl/Renderbuffer","../../../../../../webgl/RenderbufferDescriptor","../../../../../../webgl/Texture","../../../../../../webgl/TextureDescriptor"],(function(e,t,s,r,i,o,n,u,d,l,h){"use strict";class T{constructor(){this._dotTextureSize=0,this._dotTextures=null,this._dotMesh=null}destroy(){this._disposeTextures(),this._dotFBO&&this._dotFBO.dispose(),this._dotMesh&&this._dotMesh.destroy()}getFBO(e){if(null==this._dotFBO){const t=s.tileSize,r=s.tileSize,i=new h.TextureDescriptor(t,r);i.samplingMode=o.TextureSamplingMode.NEAREST,i.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE;const l=new u.Renderbuffer(e,new d.RenderbufferDescriptor(o.RenderbufferFormat.DEPTH_STENCIL,t,r));this._dotFBO=new n.FramebufferObject(e,i,l)}return this._dotFBO}getDotDensityMesh(e){if(null==this._dotMesh){const t=s.tileSize,n=t*t,u=2,d=new Int16Array(n*u);for(let e=0;e<t;e++)for(let s=0;s<t;s++)d[u*(s+e*t)]=s,d[u*(s+e*t)+1]=e;const l=[{count:2,type:o.DataType.UNSIGNED_SHORT,name:"a_position",offset:0}],h={hash:i.vertexLayoutHash(l),attributes:l,stride:4};this._dotMesh=r.SimpleMesh.create(e,{primitive:o.PrimitiveType.POINTS,vertex:d,count:n,layout:h})}return this._dotMesh}getDotDensityTextures(e,s,r){if(this._dotTextureSize===s&&this._seed===r||(this._disposeTextures(),this._dotTextureSize=s,this._seed=r),null===this._dotTextures){const i=new t(r);this._dotTextures=[this._allocDotDensityTexture(e,s,i),this._allocDotDensityTexture(e,s,i)]}return this._dotTextures}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_allocDotDensityTexture(e,t,s){const r=new Float32Array(t*t*4);for(let o=0;o<r.length;o++)r[o]=s.getFloat();const i=new h.TextureDescriptor;return i.dataType=o.PixelType.FLOAT,i.samplingMode=o.TextureSamplingMode.NEAREST,i.width=t,i.height=t,new l.Texture(e,i,r)}}e.DotDensityResources=T,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
