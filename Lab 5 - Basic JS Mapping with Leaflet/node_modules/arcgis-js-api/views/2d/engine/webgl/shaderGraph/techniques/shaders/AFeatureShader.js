/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../../../chunks/tslib.es6","../../../../highlightReasons","../../GraphShaderModule","../../graph/glsl","./EntityStorage","./ShaderHighlight","./ShaderHittest","./utils","./ViewInfo"],(function(t,e,i,o,l,r,a,s,h,n){"use strict";class d extends o.VertexInput{}e.__decorate([o.location(0,l.Vec3)],d.prototype,"id",void 0),e.__decorate([o.location(1,l.Float)],d.prototype,"bitset",void 0),e.__decorate([o.location(2,l.Vec2)],d.prototype,"pos",void 0);class g extends o.ComputeVertexInput{}e.__decorate([o.location(14,l.Vec2)],g.prototype,"nextPos1",void 0),e.__decorate([o.location(15,l.Vec2)],g.prototype,"nextPos2",void 0);class c extends o.FragmentInput{}class u extends o.GraphShaderModule{clip(t,e){let i=new l.Float(0);const o=this.storage.getFilterFlags(t);if(i=i.add(l.float(2).multiply(l.float(1).subtract(h.getFilterBit(o,0)))),this.inside?i=i.add(l.float(2).multiply(l.float(1).subtract(h.getFilterBit(o,1)))):this.outside?i=i.add(l.float(2).multiply(h.getFilterBit(o,1))):this.highlight&&(i=i.add(l.float(2).multiply(l.float(1).subtract(this._checkHighlight(o))))),null!=e){const t=new l.Float(1).subtract(l.step(e.x,this.view.currentZoom)),o=l.step(e.y,this.view.currentZoom);i=i.add(new l.Float(2).multiply(t.add(o)))}return i}getFragmentOutput(t,e,i=new l.Float(1/255)){const r=new o.FragmentOutput;return r.glFragColor=this._maybeWriteHittest(e)??this._maybeHighlight(t,i)??t,r}_maybeHighlight(t,e){return this.highlight?new l.Vec4(t.rgb,l.step(e,t.a)):null}_checkHighlight(t){let e=this._checkHighlightBit(t,0);for(let o=1;o<i.highlightReasons.length;o++)e=e.add(this._checkHighlightBit(t,o));return l.step(new l.Float(.1),e.add(this.highlight.highlightAll))}_checkHighlightBit(t,e){return h.getHighlightBit(t,e).multiply(h.getBit(this.highlight.activeReasons,e))}maybeRunHittest(t,e,i){if(null==this.hittestRequest)return null;const o=this.hittest(t,e,i);let r=l.ifElse(l.greaterThan(o,this.hittestRequest.distance),new l.Float(2),new l.Float(0));const a=this.storage.getAttributeDataCoords(t.id),s=h.uvToClip(a);r=r.add(this.clip(t.id,t.zoomRange));const n=new l.Vec4(new l.Float(1/255),0,0,0);return{glPointSize:new l.Float(1),glPosition:new l.Vec4(s,r,1),color:n}}_maybeWriteHittest(t){return null!=this.hittestRequest?t.color:null}}e.__decorate([o.define],u.prototype,"inside",void 0),e.__decorate([o.define],u.prototype,"outside",void 0),e.__decorate([o.option(a.ShaderHighlight)],u.prototype,"highlight",void 0),e.__decorate([o.uniform(r.EntityStorage)],u.prototype,"storage",void 0),e.__decorate([o.uniform(n.ViewInfo)],u.prototype,"view",void 0),e.__decorate([o.option(s.ShaderHittest)],u.prototype,"hittestRequest",void 0),t.AFeatureShader=u,t.BaseHittestVertexInput=g,t.FeatureFragmentInput=c,t.FeatureVertexInput=d,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
