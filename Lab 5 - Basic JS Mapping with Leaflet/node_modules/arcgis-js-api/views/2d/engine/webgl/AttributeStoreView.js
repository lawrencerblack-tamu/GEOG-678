/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/Error","../../../../core/has","../../../../core/Logger","../../../../core/promiseUtils","./definitions","./DisplayId","./Utils","../../../webgl/enums","../../../webgl/FramebufferObject","../../../webgl/Texture","../../../webgl/TextureDescriptor"],(function(t,e,i,s,r,a,n,u,o,h,d,l){"use strict";const p=()=>s.getLogger("esri.views.2d.engine.webgl.AttributeStoreView");class g{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:a}=t,n=u.getPixelArrayCtor(r);this.blockIndex=i,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new n(s)),this._resetRange()}destroy(){this._texture?.dispose();for(const t in this._fbos){const e=this._fbos[t];e&&("0"===t&&e.detachColorTexture(),e.dispose()),this._fbos[t]=null}this._texture=null}get _textureDesc(){const t=new l.TextureDescriptor;return t.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE,t.samplingMode=o.TextureSamplingMode.NEAREST,t.dataType=this.pixelType,t.width=this.size,t.height=this.size,t}setData(t,e,i){const s=n.getDisplayIdTexel(t),r=this.data,a=s*this.texelSize+e;!r||a>=r.length||(r[a]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(null==this.data)return null;const i=n.getDisplayIdTexel(t)*this.texelSize+e;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return this._texture??this._initTexture(t)}getFBO(t,e=0){if(!this._fbos[e]){const i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new h.FramebufferObject(t,i)}return this._fbos[e]}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(t,s){try{const r=this.dirtyStart,a=this.dirtyEnd;if(!this.hasDirty)return;i("esri-2d-update-debug")&&console.debug(`Version[${s}] AttributeStoreView.updateTexture`,{start:r,end:a,firstBytes:new Uint8Array(this.data.buffer.slice(0,16)),block:this}),this._resetRange();const n=this.data.buffer,o=this.getTexture(t),h=4,d=(r-r%this.size)/this.size,l=(a-a%this.size)/this.size,g=d,c=this.size,x=l,_=d*this.size*h,b=(c+x*this.size)*h-_,f=u.getPixelArrayCtor(this.pixelType),T=new f(n,_*f.BYTES_PER_ELEMENT,b),y=this.size,D=x-g+1;if(D>this.size)return void p().error(new e("mapview-webgl","Out-of-bounds index when updating AttributeData"));o.updateData(0,0,g,y,D,T)}catch(r){}}update(t){const{data:e,start:i,end:s}=t;if(null!=e&&null!=this.data){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const a=1<<i%this.texelSize;t.layout&a&&(s[r+i]=e[i])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=u.getPixelArrayCtor(this.pixelType);this.destroy(),this.data=new s(t.buffer)}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new d.Texture(t,this._textureDesc,this.data??void 0);if(null!=this._lastTexture&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(t),o=u.getPixelBytes(r),h=new(u.getPixelArrayCtor(r))(new ArrayBuffer(i*s*o*this.texelSize)),d=t.getBoundFramebufferObject(),{x:l,y:p,width:g,height:c}=t.getViewport();t.bindFramebuffer(n),n.readPixels(0,0,i,s,a,r,h),e.updateData(0,0,0,2*i,s/2,h),t.setViewport(l,p,g,c),t.bindFramebuffer(d)}return this.destroy(),this._texture=e,this._texture}}class c{constructor(){this.size=0,this._pendingAttributeUpdates=[],this._version=0,this._epoch=0,this._locked=!1}_initialize(t){if(!t)throw new Error("InternalError: initArgs must be defined");const e=t.blockDescriptors;if(this.size=t.blockSize,i("esri-2d-update-debug")&&console.debug("AttributeStoreView.initialize",{message:t}),null==this._data)this._data=e.map(((t,e)=>null!=t?new g(t,this.size,e):null));else for(let i=0;i<this._data.length;i++){const t=this._data[i],s=e[i];null!=s&&(null==t?this._data[i]=new g(s,this.size,i):t.resize(s,this.size))}}destroy(){for(const t of this._data??[])t?.destroy();this._defaultTexture?.dispose();for(const{resolver:t}of this._pendingAttributeUpdates)t.reject("AttributeStore destroyed");this._pendingAttributeUpdates=[]}isEmpty(){return null==this._data}getBlock(t){if(null==this._data)return null;return this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,a.AttributeDataType.VV,0,0)}getData(t,e,i,s){if(!this._data)return 0;const r=this._data[e];if(null==r)return 0;const a=r.getData(t,i);return null!=a?a:s}setData(t,e,i,s){this._data[e].setData(t,i,s)}lockTextureUploads(){this._locked=!0}unlockTextureUploads(){this._locked=!1,this.update()}async requestUpdate(t){const e=r.createResolver();e.promise=e.promise.catch((t=>{i("esri-2d-update-debug")&&console.error("AttributeStoreView.requestUpdate rejected",t)})),this._version=t.version,this._pendingAttributeUpdates.push({inner:t,resolver:e}),i("esri-2d-update-debug")&&console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`,{message:t})}get currentEpoch(){return this._epoch}update(){if(this._locked)return;const t=this._pendingAttributeUpdates;this._pendingAttributeUpdates=[];for(const{inner:e,resolver:s}of t){const{blockData:t,initArgs:r,sendUpdateEpoch:a,version:n}=e;i("esri-2d-update-debug")&&console.debug(`Version[${this._version}] Epoch[${a}] AttributeStoreView.applyUpdate`),this._version=n,this._epoch=a,null!=r&&this._initialize(r);const u=this._data;for(let e=0;e<t.length;e++){const s=t[e],r=u[e];null!=r&&null!=s&&(i("esri-2d-update-debug")&&console.debug(`Version[${this._version}] CpuBlock[${e}] AttributeStoreView.update`,{block:s}),r.update(s))}s.resolve()}}getUniforms(t){return{filterFlags:{texture:this._getTexture(t,a.AttributeDataType.FilterFlags),unit:a.filterFlagsUnit},animation:{texture:this._getTexture(t,a.AttributeDataType.Animation),unit:a.animationUnit},gpgpu:{texture:this._getTexture(t,a.AttributeDataType.GPGPU),unit:a.gpgpuUnit},visualVariableData:{texture:this._getTexture(t,a.AttributeDataType.VV),unit:a.visualVariableUnit},dataDriven0:{texture:this._getTexture(t,a.AttributeDataType.DD0),unit:a.dataDrivenUnit0},dataDriven1:{texture:this._getTexture(t,a.AttributeDataType.DD1),unit:a.dataDrivenUnit1},dataDriven2:{texture:this._getTexture(t,a.AttributeDataType.DD2),unit:a.dataDrivenUnit2},size:this.size}}_getTexture(t,e){const i=this._data?.[e];return i?(i.updateTexture(t,this._version),i.getTexture(t)):this._getDefaultTexture(t)}_getDefaultTexture(t){if(null==this._defaultTexture){const e=new l.TextureDescriptor;e.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE,e.samplingMode=o.TextureSamplingMode.NEAREST,e.width=1,e.height=1,this._defaultTexture=new d.Texture(t,e,new Uint8Array(4))}return this._defaultTexture}}t.AttributeStoreView=c,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
