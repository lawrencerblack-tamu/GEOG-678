/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/promiseUtils","./definitions"],(function(e,t,s){"use strict";class r{constructor(e){this._queue=[],this._refreshable=e}destroy(){this._queue=[]}enqueueTextureUpdate(e,r){const o=t.createResolver(),u=e,n=s.textureUploadManagerChunkSize,a=Math.ceil(u.height/n);t.throwIfAborted(r);for(let t=0;t<a;t++){const s=t*n,h=t===a-1,i=h?u.height-n*t:n;this._queue.push({type:"chunk",request:e,resolver:o,chunk:t,chunkOffset:s,destHeight:i,chunkIsLast:h,options:r})}return t.onAbortOrThrow(r,(e=>o.reject(e))),o.promise}upload(){let e=0;for(;this._queue.length;){const t=performance.now(),r=this._queue.shift();if(r){if(null!=r.options.signal&&r.options.signal.aborted)continue;switch(r.type){case"chunk":this._uploadChunk(r);break;case"no-chunk":this._uploadNoChunk(r)}const o=performance.now()-t;if(e+=o,e+o>=s.textureUploadManagerBudget)break}}this._queue.length&&this._refreshable.requestRender()}_uploadChunk(e){const{request:t,resolver:s,chunkOffset:r,chunkIsLast:o,destHeight:u}=e,{data:n,texture:a,width:h}=t;null!=n&&(a.updateData(0,0,r,h,u,n,r),o&&s.resolve())}_uploadNoChunk(e){const{request:t,resolver:s}=e,{data:r,texture:o}=t;o.setData(r),s.resolve()}}e.TextureUploadManager=r,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
