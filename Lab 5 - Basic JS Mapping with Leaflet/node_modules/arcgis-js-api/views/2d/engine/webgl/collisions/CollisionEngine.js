/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/has","../definitions","./CollisionGrid"],(function(e,t,i,o){"use strict";const n=254,l=255,s=0;function c(e,t){const i=e.children.slice();i.sort(((e,t)=>e.tileAge-t.tileAge)),i.forEach((e=>{null!=e.labelMetrics&&e.isReady&&t(e,e.labelMetrics)}))}function a(e,t){return(!e.minScale||e.minScale>=t)&&(!e.maxScale||e.maxScale<=t)}class r{run(e,i,o,n){const l=[];for(let t=e.length-1;t>=0;t--){const i=e[t];i.labelingCollisionInfos?.length&&l.push(...i.labelingCollisionInfos)}t("esri-2d-update-debug")&&l.length&&console.debug("CollisionEngine.run"),this._transformMetrics(l),this._runCollision(l,i,o,n);for(const t of l)t.container.requestRender()}_runCollision(e,t,i,r){const[f,d]=t.state.size,u=new o.CollisionBitsetGrid(f,d,t.pixelRatio);for(const{container:o,deconflictionEnabled:b,visible:h}of e){const e=o.attributeView;b?h?(this._prepare(o),this._collideVisible(u,o,i,r),this._collideInvisible(u,o)):c(o,((t,i)=>{for(const o of i)e.setLabelMinZoom(o.entityTexel,l)})):c(o,((t,o)=>{for(const l of o)a(l,i)?(e.setLabelMinZoom(l.entityTexel,s),h&&u.insertMetrics(l)):e.setLabelMinZoom(l.entityTexel,n)}))}}_isFiltered(e,t,o){const n=t.getFilterFlags(e),l=!o.hasFilter||!!(n&i.filterFlag0),s=null==o.featureEffect||o.featureEffect.excludedLabelsVisible||!!(n&i.effectFlag0);return!(l&&s)}_prepare(e){const t=e.attributeView,i=new Set;c(e,((o,c)=>{for(const a of c){const o=a.entityTexel;if(i.has(o))continue;if(i.add(o),this._isFiltered(o,t,e.layerView)){t.setLabelMinZoom(o,n);continue}t.getLabelMinZoom(o)!==s?t.setLabelMinZoom(o,l):t.setLabelMinZoom(o,s)}}))}_collideVisible(e,t,i,l){const r=t.attributeView,f=new Set;c(t,((t,c)=>{for(let d=0;d<c.length;d++){const u=c[d].entityTexel;if(f.has(u))continue;if(t.key.level!==l){r.setLabelMinZoom(u,n),f.add(u);continue}if(!a(c[d],i)){r.setLabelMinZoom(u,n),f.add(u);continue}if(0!==r.getLabelMinZoom(u)){f.add(u);continue}let b=!1,h=!0;const g=d;let m=d;for(;m<c.length;m++){const t=c[m];if(t.entityTexel!==u)break;if(b)continue;switch(e.hasCollision(t)){case o.outsideExtent:break;case o.hasCollision:b=!0,h=!1;break;case o.none:h=!1}}if(!b)for(let t=g;t<m;t++)e.insertMetrics(c[t]);d=m-1,h||(f.add(u),r.setLabelMinZoom(u,b?n:s))}}))}_collideInvisible(e,t){const i=t.attributeView,n=new Set;c(t,((t,c)=>{for(let a=0;a<c.length;a++){const t=c[a].entityTexel;if(n.has(t))continue;if(i.getLabelMinZoom(t)!==l){n.add(t);continue}let r=!1,f=!0;const d=a;let u=a;for(;u<c.length;u++){const i=c[u];if(i.entityTexel!==t)break;if(r)continue;switch(e.hasCollision(i)){case o.outsideExtent:break;case o.hasCollision:r=!0,f=!1;break;case o.none:f=!1}}if(!r)for(let i=d;i<u;i++)e.insertMetrics(c[i]);a=u-1,f||(n.add(t),i.setLabelMinZoom(t,r?l:s))}}))}_transformMetrics(e){for(const{container:t,geometryType:i,vvEvaluators:o}of e)c(t,((e,n)=>{const l=t.attributeView,s=e.transforms.labelMat2d;s[4]=Math.round(s[4]),s[5]=Math.round(s[5]);const c="polyline"===i;for(const t of n){const{entityTexel:e,anchorX:i,anchorY:n}=t;let a=t.referenceBounds?.size??0;const r=o[0];if(null!=r){const t=r(l.getVVSize(e));a=isNaN(t)||null==t||t===1/0?a:t}const f=t.directionX*(a/2),d=t.directionY*(a/2);for(const o of t.bounds){let e=i,t=n;if(c){let i=e+o.x+f,n=t+o.y+d;i=s[0]*i+s[2]*n+s[4],n=s[1]*i+s[3]*n+s[5],o.computedX=Math.floor(i),o.computedY=Math.floor(n)}else{e=s[0]*i+s[2]*n+s[4],t=s[1]*i+s[3]*n+s[5];const l=e+o.x+f,c=t+o.y+d;o.computedX=l,o.computedY=c}}}}))}}e.CollisionEngine=r,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
