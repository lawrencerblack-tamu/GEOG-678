/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../../../../core/Logger","../../../highlightReasons","../../definitions","./parameters","../../../../../webgl/enums","../../../../../webgl/Texture","../../../../../webgl/TextureDescriptor"],(function(i,o,t,e,l,h,n){"use strict";const r=()=>i.getLogger("esri.views.2d.engine.webgl.painter.highlight.HighlightGradient");function s(i,o){o.fillColor[0]=i.color.r/255,o.fillColor[1]=i.color.g/255,o.fillColor[2]=i.color.b/255,o.fillColor[3]=i.color.a,i.haloColor?(o.outlineColor[0]=i.haloColor.r/255,o.outlineColor[1]=i.haloColor.g/255,o.outlineColor[2]=i.haloColor.b/255,o.outlineColor[3]=i.haloColor.a):(o.outlineColor[0]=o.fillColor[0],o.outlineColor[1]=o.fillColor[1],o.outlineColor[2]=o.fillColor[2],o.outlineColor[3]=o.fillColor[3]),o.fillColor[3]*=i.fillOpacity,o.outlineColor[3]*=i.haloOpacity,o.fillColor[0]*=o.fillColor[3],o.fillColor[1]*=o.fillColor[3],o.fillColor[2]*=o.fillColor[3],o.outlineColor[0]*=o.outlineColor[3],o.outlineColor[1]*=o.outlineColor[3],o.outlineColor[2]*=o.outlineColor[3],o.outlineWidth=e.highlightSizing.outlineWidth,o.outerHaloWidth=e.highlightSizing.outerHaloWidth,o.innerHaloWidth=e.highlightSizing.innerHaloWidth,o.outlinePosition=e.highlightSizing.outlinePosition}const a=[0,0,0,0];class u{constructor(){this.type="single",this._convertedHighlightOptions={fillColor:[.2*.75,.6*.75,.675,.75],outlineColor:[.2*.9,.54,.81,.9],outlinePosition:e.highlightSizing.outlinePosition,outlineWidth:e.highlightSizing.outlineWidth,innerHaloWidth:e.highlightSizing.innerHaloWidth,outerHaloWidth:e.highlightSizing.outerHaloWidth},this._shadeTexChanged=!0,this._texelData=new Uint8Array(4*e.shadeTextureSize),this._minMaxDistance=[0,0]}setHighlightOptions(i){const o=this._convertedHighlightOptions;s(i,o);const t=o.outlinePosition-o.outlineWidth/2-o.outerHaloWidth,l=o.outlinePosition-o.outlineWidth/2,h=o.outlinePosition+o.outlineWidth/2,n=o.outlinePosition+o.outlineWidth/2+o.innerHaloWidth,u=Math.sqrt(Math.PI/2)*e.sigma,g=Math.abs(t)>u?Math.round(10*(Math.abs(t)-u))/10:0,d=Math.abs(n)>u?Math.round(10*(Math.abs(n)-u))/10:0;let C;g&&!d?r().error("The outer rim of the highlight is "+g+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards positive values (inwards)."):!g&&d?r().error("The inner rim of the highlight is "+d+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards negative values (outwards)."):g&&d&&r().error("The highlight is "+Math.max(g,d)+"px away from the edge of the feature; consider reducing some width values.");const f=[void 0,void 0,void 0,void 0];function c(i,o,t){f[0]=(1-t)*i[0]+t*o[0],f[1]=(1-t)*i[1]+t*o[1],f[2]=(1-t)*i[2]+t*o[2],f[3]=(1-t)*i[3]+t*o[3]}const{_texelData:x}=this;for(let r=0;r<e.shadeTextureSize;++r)C=t+r/(e.shadeTextureSize-1)*(n-t),C<t?(f[0]=0,f[1]=0,f[2]=0,f[3]=0):C<l?c(a,o.outlineColor,(C-t)/(l-t)):C<h?[f[0],f[1],f[2],f[3]]=o.outlineColor:C<n?c(o.outlineColor,o.fillColor,(C-h)/(n-h)):[f[0],f[1],f[2],f[3]]=o.fillColor,x[4*r]=255*f[0],x[4*r+1]=255*f[1],x[4*r+2]=255*f[2],x[4*r+3]=255*f[3];this._minMaxDistance[0]=t,this._minMaxDistance[1]=n,this._shadeTexChanged=!0}applyHighlightOptions(i,o){if(!this._shadeTex){const o=new n.TextureDescriptor;o.wrapMode=l.TextureWrapMode.CLAMP_TO_EDGE,o.width=e.shadeTextureSize,o.height=1,this._shadeTex=new h.Texture(i,o)}this._shadeTexChanged&&(this._shadeTex.updateData(0,0,0,e.shadeTextureSize,1,this._texelData),this._shadeTexChanged=!1),i.bindTexture(this._shadeTex,t.textureBindingHighlight1),o.setUniform2fv("u_minMaxDistance",this._minMaxDistance)}destroy(){this._shadeTex?.dispose(),this._shadeTex=null}getReasonsWithGradients(){return[{activeReasons:(1<<o.highlightReasons.length)-1,activeGradient:this}]}}return u}));
