/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../../config","../../../../request","../../../../core/BidiText","../../../../core/Error","../../../../core/fontUtils","../../../../core/has","../../../../core/Logger","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../core/string","../../../../symbols/cim/CIMResourceManager","../../../../symbols/cim/CIMSymbolHelper","../../../../symbols/cim/Rasterizer","./definitions","./enums","./GlyphMosaic","./GlyphSource","./SDFConverter","./SpriteMosaic","./Utils","./animatedFormats/AnimatableTextureResource","../../../support/QueueProcessor","../../../webgl/enums"],(function(e,t,i,s,r,a,n,o,c,h,u,l,d,p,g,m,y,f,_,M,I,w,S){"use strict";const T="arial-unicode-ms-regular",z=()=>n.getLogger("esri.views.2d.engine.webgl.TextureManager"),x=(e,t,i)=>z().error(new s(e,t,i));function R(e){switch(e.type){case"fill-style":case"CIMHatchFill":return p.patternFillRasterizationScale}return 1}class C{static fromMosaic(e,t){return new C(e,t.page,t.sdf)}constructor(e,t,i){this.mosaicType=e,this.page=t,this.sdf=i}}class b{constructor(i){this._requestRender=i,this._resourceManager=new u,this._invalidFontsMap=new Map,this._sdfConverter=new f(p.sdfTextureSize),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._ongoingRasterizations=new Map,this._imageRequestQueue=new w.QueueProcessor({concurrency:10,process:async(e,i)=>{o.throwIfAborted(i);try{return await t(e,{responseType:"image",signal:i})}catch(r){if(!o.isAbortError(r))throw new s("mapview-invalid-resource",`Could not fetch requested resource at ${e}`,r);throw r}}}),this._spriteMosaic=new _(2048,2048,500),this._glyphSource=new y(`${e.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new m(1024,1024,this._glyphSource),this._rasterizer=new d(this.resourceManager)}dispose(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null,this._imageRequestQueue.clear(),this._imageRequestQueue=null,this._resourceManager.destroy()}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}get resourceManager(){return this._resourceManager}async rasterizeItem(e,t){if(null==e)return x("mapview-null-resource","Unable to rasterize null resource"),null;if("cim-rasterization-info"!==e.type)return x("mapview-unexpected-resource","Unable to rasterize resource"),null;const{resource:i}=e;if("text"===i.type){const e=await this._rasterizeText(i,t);for(const t of e.glyphs)this._setTextureBinding(g.MosaicType.GLYPH,t);return e}const s=await this._rasterizeSprite(i,t);return s&&this._setTextureBinding(g.MosaicType.SPRITE,s),s}getMosaicInfo(e,t,i=!1){const s=this._getTextureBindingInfo(e,t,i);return s?{size:s.size,texture:{texture:s.texture,unit:"sprite"===s.type?p.textureBindingSpriteAtlas:p.textureBindingGlyphAtlas}}:(x("mapview-invalid-resource",`Unable to find resource for ${t}`),{size:[0,0],texture:{texture:null,unit:0}})}_getTextureBindingInfo(e,t,i){const s=this._bindingInfos[t-1],r=s.page,a=i?S.TextureSamplingMode.LINEAR_MIPMAP_LINEAR:S.TextureSamplingMode.LINEAR;switch(s.mosaicType){case g.MosaicType.SPRITE:{const t=[this.sprites.getWidth(r),this.sprites.getHeight(r)],i=this._spriteMosaic.getTexture(e,r);return i.setSamplingMode(a),{type:"sprite",texture:i,size:t}}case g.MosaicType.GLYPH:{const t=[this.glyphs.width,this.glyphs.height],i=this._glyphMosaic.getTexture(e,r);return this._glyphMosaic.bind(e,a,r,p.textureBindingGlyphAtlas),i.setSamplingMode(a),{type:"glyph",texture:i,size:t}}default:return x("mapview-texture-manager",`Cannot handle unknown type ${s.mosaicType}`),null}}_hashMosaic(e,t){return 1|e<<1|(t.sdf?1:0)<<2|t.page<<3}_setTextureBinding(e,t){const i=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(i)){const s=C.fromMosaic(e,t),r=this._bindingInfos.length+1;this._hashToBindingIndex.set(i,r),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(i)}async _rasterizeText(e,t){const{font:s,textString:n}=e,o=r.getFullyQualifiedFontName(s),c=this._invalidFontsMap.has(o),[h,u]=i.bidiText(n),l=M.charCodes(h);try{const e=c?T:o;a("esri-2d-stabilize-glyphs")&&await this._glyphMosaic.preloadASCIIGlyphCache(e);return{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(e,l,t),isRightToLeft:u}}catch(d){x("mapview-invalid-resource",`Couldn't find font ${o}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(o,!0);return{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(T,l,t),isRightToLeft:u}}}_hashSpriteResource(e){switch(e.type){case"path":return`path:${e.path}.${e.asFill?1:0}`;case"CIMPictureMarker":return`${e.type}:${e.url}:${e.size}`;case"CIMPictureFill":return`${e.type}:${e.url}:${e.height}`;case"CIMPictureStroke":return`${e.type}:${e.url}:${e.width}`;case"dash":return`dash:${e.capStyle}.${e.dashTemplate.join("")}`;case"sdf":return`sdf:${JSON.stringify(e.geom)}.${e.asFill?1:0}`;case"fill-style":return`fill_style:${e.style}`;case"animated":return JSON.stringify(M.discardUrlIfHasUrlHash(e));case"CIMHatchFill":case"CIMVectorMarker":return JSON.stringify(e)}}async _rasterizeSprite(e,t){if(!e)return null;const i=h.numericHash(this._hashSpriteResource(e));if(this._spriteMosaic.has(i))return this._spriteMosaic.getSpriteItem(i);if("url"in e&&e.url||"CIMPictureFill"===e.type||"CIMPictureStroke"===e.type||"CIMPictureMarker"===e.type||"CIMVectorMarker"===e.type){const t=[];l.CIMSymbolHelper.fetchResources({type:"CIMPointSymbol",symbolLayers:[e]},this._resourceManager,t),t.length>0&&await Promise.all(t)}switch(e.type){case"CIMPictureMarker":return"CIMMarkerPlacementInsidePolygon"===e.markerPlacement?.type?this._rasterizeJSONResource(i,e):this._handleAsyncResource(i,e,t);case"animated":case"CIMPictureFill":case"CIMPictureStroke":case"path":return this._handleAsyncResource(i,e,t);case"sdf":case"dash":case"fill-style":case"CIMVectorMarker":case"CIMHatchFill":return this._rasterizeJSONResource(i,e)}}_rasterizeJSONResource(e,t){const i=this._rasterizer.rasterizeJSONResource(t,R(t));if(i){const{size:s,image:r,sdf:a,simplePattern:n,rasterizationScale:o}=i;return this._addItemToMosaic(e,s,{type:"static",data:r},P(t),a,n,o)}return null}async _handleAsyncResource(e,t,i){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;return s="path"===t.type?this._handleSVG(t,e,i):this._handleImage(t,e,i),this._ongoingRasterizations.set(e,s),s.finally((()=>this._ongoingRasterizations.delete(e))),s}async _handleSVG(e,t,i){const s=[p.sdfTextureSize,p.sdfTextureSize],{asFill:r}=e,a=await this._sdfConverter.draw(e.path,r,i);return this._addItemToMosaic(t,s,{type:"static",data:new Uint32Array(a.buffer)},!1,!0,!0)}async _handleGIFOrPNG(e,t,i){const s=e.url,r=this.resourceManager.getResource(s);if(null==r)return null;const{width:a,height:n}=r;if(r instanceof HTMLImageElement){if("animated"===e.type)return x("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),null;const i="colorSubstitutions"in e?e.colorSubstitutions:void 0,{size:s,sdf:o,image:c}=this._rasterizer.rasterizeImageResource(a,n,r,i);return this._addItemToMosaic(t,s,{type:"static",data:c},P(e),o,!1)}let o,c,h;"animated"===e.type?(o=!1,c={playAnimation:e.playAnimation,reverseAnimation:e.reverseAnimation,randomizeStartTime:e.randomizeStartTime,randomizeStartSeed:e.randomizeStartSeed,startTimeOffset:e.startTimeOffset,duration:e.duration,repeatType:e.repeatType,repeatDelay:e.repeatDelay},h=e.startGroup||0):(o=P(e),c={},h=0);const u=new I.AnimatableTextureResource(r,this._requestRender,c,h);return this._addItemToMosaic(t,[u.width,u.height],{type:"animated",data:u},o,!1,!1)}async _handleImage(e,t,i){const r=e.url;if(A(r)||k(r))return this._handleGIFOrPNG(e,t,i);if("animated"===e.type)return x("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),null;try{let s;const a=this.resourceManager.getResource(r);if(null!=a&&a instanceof HTMLImageElement)s=a;else{const{data:e}=await this._imageRequestQueue.push(r,{...i});s=e}if(M.isSVGImage(r))if("width"in e&&"height"in e)s.width=c.pt2px(e.width),s.height=c.pt2px(e.height);else if("cim"in e){const t=e;s.width=c.pt2px(t.width??t.scaleX*t.size),s.height=c.pt2px(t.size)}if(!s.width||!s.height)return null;const n=s.width,o=s.height,h="colorSubstitutions"in e?e.colorSubstitutions:void 0,{size:u,sdf:l,image:d}=this._rasterizer.rasterizeImageResource(n,o,s,h);return this._addItemToMosaic(t,u,{type:"static",data:d},P(e),l,!1)}catch(x){if(!o.isAbortError(x))throw new s("mapview-invalid-resource",`Could not fetch requested resource at ${r}. ${x.message}`);throw x}}_addItemToMosaic(e,t,i,s,r,a,n){return this._spriteMosaic.addSpriteItem(e,t,i,s,r,a,n)}}function P(e){switch(e.type){case"CIMVectorMarker":case"CIMPictureMarker":return F(e);default:return!0}}const v=e=>null!=e&&e.startsWith("data:image/gif"),A=e=>e&&(e.includes(".gif")||v(e)),$=e=>null!=e&&e.startsWith("data:image/png"),k=e=>e&&(e.includes(".png")||$(e)),F=e=>e&&"markerPlacement"in e&&e.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===e.markerPlacement.type;return b}));
