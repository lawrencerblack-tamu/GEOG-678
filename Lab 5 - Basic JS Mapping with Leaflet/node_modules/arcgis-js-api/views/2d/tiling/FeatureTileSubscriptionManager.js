/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","./TileKey"],(function(e,s){"use strict";function i(e,s){const i=new Set;for(const t of e instanceof Set?e.values():e.keys())s.has(t)||i.add(t);return i}class t{constructor(e){this.version=e}}class n{constructor(e){this._subscriptions=new Map,this._visible=new Set,this._paused=new Set,this._version=0,this._config=e}destroy(){}get _coverageSet(){const e=this._coverage?Array.from(this._coverage.keys()).map((e=>e.id)):[];return new Set(e)}suspend(){this._suspendedOverage=this._coverage,this._coverage=null,this._updateSubscriptions()}resume(){null==this._coverage&&(this._coverage=this._suspendedOverage,this._suspendedOverage=null,this._updateSubscriptions())}update(e){return this._version=this._version+1%Number.MAX_SAFE_INTEGER,this._updateCoverage(e),this._updateSubscriptions(),new Set(this._visible)}_updateCoverage(e){this._coverage=this._config.tileInfoView.getTileCoverage(e.state,0,!0,"closest")}_updateSubscriptions(){const e=this._coverageSet,s=this._updateVisibility(),n=i(s,e),o=i(this._subscriptions,s),r=i(e,this._subscriptions),a=i(o,e),u=i(n,a),c=i(u,this._paused);this._visible=s;for(const i of r.values())this._subscriptions.set(i,new t(this._version));for(const i of c.values())this._paused.add(i);for(const i of a.values())this._subscriptions.delete(i),this._paused.delete(i);(r.size||a.size||c.size)&&this._sendUpdateSubscriptions(r,a,c)}_sendUpdateSubscriptions(e,s,i){const t=Array.from(e.values()).map((e=>({tileId:e,version:this._subscriptions.get(e).version})));this._config.updateSubscriptions({subscribe:t,unsubscribe:Array.from(s.values()),pause:Array.from(i.values()),tileInfoJSON:this._config.tileInfoView.tileInfo.toJSON()})}_updateVisibility(){const e=new Set;if(!this._coverage)return e;for(const s of this._coverage.keys()){if(this._config.isDone(s)){e.add(s.id);continue}if(this._addVisibleParent(e,s))continue;this._addVisibleChildren(e,s)||e.add(s.id)}return e}_addVisibleParent(e,i){let t=!1;for(const n of this._visible.values()){new s(n).containsChild(i)&&(e.add(n),t=!0)}return t}_addVisibleChildren(e,i){let t=!1;for(const n of this._visible.values()){const o=new s(n);i.containsChild(o)&&(e.add(n),t=!0)}return t}}e.FeatureTileSubscriptionManager=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
