/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../geometry","../../Viewpoint","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/libs/gl-matrix-2/math/common","../../core/libs/gl-matrix-2/math/mat2d","../../core/libs/gl-matrix-2/factories/mat2df32","../../core/libs/gl-matrix-2/factories/mat2df64","../../core/libs/gl-matrix-2/math/mat3","../../core/libs/gl-matrix-2/factories/mat3f32","../../core/libs/gl-matrix-2/math/vec2","../../core/libs/gl-matrix-2/factories/vec2f32","../../core/libs/gl-matrix-2/factories/vec2f64","../../core/libs/gl-matrix-2/types/vec2","../../geometry/support/normalizeUtils","./viewpointUtils","../../geometry/Extent","../../geometry/Point"],(function(t,e,i,s,r,o,a,n,c,l,p,h,m,d,f,u,v,w,y,_,g,x,R){"use strict";var M;const z=[0,0];let S=M=class extends s.JSONSupport{constructor(t){super(t),this._viewpoint2D={center:w.create(),rotation:0,scale:0,spatialReference:void 0},this.center=[0,0],this.extent=new x,this.id=0,this.inverseTransform=m.create(),this.resolution=0,this.rotation=0,this.scale=0,this.transform=m.create(),this.transformNoRotation=m.create(),this.displayMat3=f.create(),this.displayViewMat3=f.create(),this.viewMat3=f.create(),this.viewMat2d=h.create(),this.worldScreenWidth=0,this.size=[0,0]}set pixelRatio(t){this._set("pixelRatio",t),this._update()}set size(t){this._set("size",t),this._update()}set viewpoint(t){if(t){const e=this._viewpoint2D,i=t.targetGeometry;e.center[0]=i.x,e.center[1]=i.y,e.rotation=t.rotation,e.scale=t.scale,e.spatialReference=i.spatialReference}this._update()}copy(t){const e=this.size,i=this.viewpoint;return i&&e?(this.viewpoint=g.copy(i,t.viewpoint),this._set("size",u.copy(e,t.size))):(this.viewpoint=t.viewpoint.clone(),this._set("size",[t.size[0],t.size[1]])),this._set("pixelRatio",t.pixelRatio),this}clone(){return new M({size:this.size,viewpoint:this.viewpoint.clone(),pixelRatio:this.pixelRatio})}toMap(t,e,i){return y.isVec2(e)?u.transformMat2d(t,e,this.inverseTransform):(z[0]=e,z[1]=i,u.transformMat2d(t,z,this.inverseTransform))}toScreen(t,e,i){return y.isVec2(e)?u.transformMat2d(t,e,this.transform):(z[0]=e,z[1]=i,u.transformMat2d(t,z,this.transform))}toScreenNoRotation(t,e,i){return y.isVec2(e)?u.transformMat2d(t,e,this.transformNoRotation):(z[0]=e,z[1]=i,u.transformMat2d(t,z,this.transformNoRotation))}toScreenClosest(t,e,i){y.isVec2(e)?(z[0]=e[0],z[1]=e[1]):(z[0]=e,z[1]=i);const[s]=z,{center:r,extent:o,spatialReference:a,transform:n}=this;return(s<o.xmin||s>o.xmax)&&(z[0]=_.getClosestDenormalizedXToReference(s,r[0],a)),u.transformMat2d(t,z,n)}getScreenTransform(t,e){const{center:i}=this._viewpoint2D,s=this._get("pixelRatio")||1,r=this._get("size");return g.getMatrix(t,i,r,e,0,s),t}_update(){const{center:t,spatialReference:e,scale:s,rotation:r}=this._viewpoint2D,o=this._get("pixelRatio")||1,a=this._get("size"),n=new i({targetGeometry:new R(t[0],t[1],e),scale:s,rotation:r});if(this._set("viewpoint",n),!a||!e||!s)return;this.resolution=g.getResolution(n),this.rotation=r,this.scale=s,this.spatialReference=e,u.copy(this.center,t);const c=0!==a[0]?2/a[0]:0,h=0!==a[1]?-2/a[1]:0;d.set(this.displayMat3,c,0,0,0,h,0,-1,1,1);const m=d.identity(this.viewMat3),f=v.fromValues(a[0]/2,a[1]/2),w=v.fromValues(-a[0]/2,-a[1]/2),y=l.toRadian(r);d.translate(m,m,f),d.rotate(m,m,y),d.translate(m,m,w),d.multiply(this.displayViewMat3,this.displayMat3,m);const _=p.fromTranslation(this.viewMat2d,f);return p.rotate(_,_,y),p.translate(_,_,w),g.getExtent(this.extent,n,a),g.getTransform(this.transform,n,a,o),p.invert(this.inverseTransform,this.transform),g.getTransformNoRotation(this.transformNoRotation,n,a,o),this.worldScreenWidth=g.getWorldScreenWidth(this.spatialReference,this.resolution),this._set("id",this.id+1),this}};t.__decorate([r.property({readOnly:!0})],S.prototype,"id",void 0),t.__decorate([r.property({value:1,json:{write:!0}})],S.prototype,"pixelRatio",null),t.__decorate([r.property({json:{write:!0}})],S.prototype,"size",null),t.__decorate([r.property()],S.prototype,"spatialReference",void 0),t.__decorate([r.property({type:i,json:{write:!0}})],S.prototype,"viewpoint",null),S=M=t.__decorate([c.subclass("esri.views.2d.ViewState")],S);return S}));
