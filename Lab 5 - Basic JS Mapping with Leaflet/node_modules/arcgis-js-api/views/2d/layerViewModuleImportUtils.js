/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","exports","../../core/Error"],(function(e,r,a){"use strict";const n=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));function i(){return Promise.all([new Promise(((r,a)=>e(["./webglDeps"],r,a))),new Promise(((r,a)=>e(["./mapViewDeps"],r,a)))])}const l=()=>i().then((()=>new Promise(((r,a)=>e(["./layers/TileLayerView2D"],(e=>r(n(e))),a))))),s=()=>i().then((()=>new Promise(((r,a)=>e(["./layers/FeatureLayerView2D"],(e=>r(n(e))),a))))),t={"base-dynamic":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/BaseDynamicLayerView2D"],(e=>r(n(e))),a))))),"base-tile":l,"bing-maps":l,catalog:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/CatalogLayerView2D"],(e=>r(n(e))),a))))),"catalog-dynamic-group":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/CatalogDynamicGroupLayerView2D"],(e=>r(n(e))),a))))),"catalog-footprint":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/CatalogFootprintLayerView2D"],(e=>r(n(e))),a))))),csv:s,"geo-rss":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/GeoRSSLayerView2D"],(e=>r(n(e))),a))))),feature:s,geojson:s,graphics:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/GraphicsLayerView2D"],(e=>r(n(e))),a))))),group:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/GroupLayerView2D"],(e=>r(n(e))),a))))),imagery:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/ImageryLayerView2D"],(e=>r(n(e))),a))))),"imagery-tile":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/ImageryTileLayerView2D"],(e=>r(n(e))),a))))),kml:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/KMLLayerView2D"],(e=>r(n(e))),a))))),"knowledge-graph":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/KnowledgeGraphLayerView2D"],(e=>r(n(e))),a))))),"link-chart":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/KnowledgeGraphLayerView2D"],(e=>r(n(e))),a))))),"knowledge-graph-sublayer":s,"map-image":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/MapImageLayerView2D"],(e=>r(n(e))),a))))),"map-notes":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/MapNotesLayerView2D"],(e=>r(n(e))),a))))),media:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/MediaLayerView2D"],(e=>r(n(e))),a))))),"ogc-feature":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/OGCFeatureLayerView2D"],(e=>r(n(e))),a))))),"open-street-map":l,"oriented-imagery":s,route:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/RouteLayerView2D"],(e=>r(n(e))),a))))),stream:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/StreamLayerView2D"],(e=>r(n(e))),a))))),"subtype-group":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/SubtypeGroupLayerView2D"],(e=>r(n(e))),a))))),tile:l,"vector-tile":()=>i().then((()=>new Promise(((r,a)=>e(["./layers/VectorTileLayerView2D"],(e=>r(n(e))),a))))),video:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/VideoLayerView2D"],(e=>r(n(e))),a))))),wcs:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/ImageryTileLayerView2D"],(e=>r(n(e))),a))))),"web-tile":l,wfs:s,wms:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/WMSLayerView2D"],(e=>r(n(e))),a))))),wmts:()=>i().then((()=>new Promise(((r,a)=>e(["./layers/WMTSLayerView2D"],(e=>r(n(e))),a))))),"line-of-sight":null,"base-elevation":null,"building-scene":null,dimension:null,elevation:null,"integrated-mesh":null,"integrated-mesh-3dtiles":null,"point-cloud":null,voxel:null,scene:null,unknown:null,unsupported:null};function o(e){const r=e.declaredClass?e.declaredClass.slice(e.declaredClass.lastIndexOf(".")+1):"Unknown",n=r.replaceAll(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return new a(`${n}:view-not-supported`,`${r} is not supported in 2D`)}const w={hasLayerViewModule:e=>null!=t[e.type],importLayerView:e=>{const r=t[e.type];if(null==r)throw o(e);return r(e)}};r.layerView2DImporter=w,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
