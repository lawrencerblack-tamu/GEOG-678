/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/Evented","../../core/lang","../../core/maybe","../../core/memoize","../../core/promiseUtils","../../core/reactiveUtils","../../core/screenUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/diffUtils","../../core/support/UpdatingHandles","../../layers/graphics/dehydratedFeatureComparison","../../support/elevationInfoUtils","../ViewingMode","./DrawingMode","./DrawManipulator","../interactive/coordinateHelper","../interactive/dragEventPipeline","../interactive/editGeometry/EditGeometry","../interactive/editGeometry/EditGeometryOperations","../interactive/sketch/constraints","../interactive/sketch/SketchLabelOptions","../interactive/snapping/SnappingContext","../interactive/snapping/SnappingDragPipelineStep","../interactive/snapping/SnappingOperation","../interactive/snapping/snappingUtils","../interactive/tooltip/constraintUtils"],(function(e,t,n,i,r,o,s,a,p,c,l,d,h,u,g,_,y,m,v,f,w,x,O,D,b,C,S,T,P,M,V,E){"use strict";const I="crosshair",H="progress";function G(e,t,n){const i=e.x-t.x,r=e.y-t.y;return i*i+r*r<=n}e.DrawOperation=class extends(i.EventedMixin(n)){constructor(e){super(e),this._createOperationCompleted=!1,this._hideDefaultCursor=!1,this._pointerDownStates=new Set,this._stagedScreenPoint=null,this._stagedPointerType=null,this._stagedPointerId=null,this._updatingHandles=new _.UpdatingHandles,this.constraintsEnabled=!1,this.constraintInfo=void 0,this._getPointConstraint=s.memoize(E.getPointConstraint),this._getPolylineOrPolygonConstraint=s.memoize(E.getPolylineOrPolygonConstraint),this.constraintZ=null,this.defaultZ=null,this.isDraped=!0,this.labelOptions=new S,this.cursor=null,this.loading=!1,this.snapToSceneEnabled=null,this.firstVertex=null,this.lastVertex=null,this.secondToLastVertex=null,null==e.elevationInfo&&(this.elevationInfo=m.getEffectiveElevationInfo(!!e.hasZ))}initialize(){const{geometryType:e,view:t}=this,n=t.spatialReference,i="viewingMode"in t.state?t.state.viewingMode:v.ViewingMode.Local,r="segment"===e||"multipoint"===e?"polyline":e;this.coordinateHelper=x.createCoordinateHelper(this.hasZ,this.hasM,n),this._editGeometryOperations=new b.EditGeometryOperations(new D.EditGeometry(r,this.coordinateHelper)),this._snappingOperation=new M.SnappingOperation({view:t}),this.addHandles([p.watch((()=>({stagedPoint:this._snappingOperation.stagedPoint,constraint:this.constraint})),(({stagedPoint:e,constraint:t},n)=>{const{snappingOptions:i}=this;i&&(i.forceDisabled=null!=t&&C.isPoint(t),i.constraintsActive=null!=this.constraintInfo?.distance||null!=this.constraintInfo?.direction);if(null!=n&&e===n.stagedPoint&&t!==n.constraint)return this._onKeyboardBasedChange();this._processCursor(e??this._screenToMap(this._stagedScreenPoint))}),{sync:!0,equals:(e,t)=>e.stagedPoint===t.stagedPoint&&o.equalsMaybe(e.constraint,t.constraint)}),p.watch((()=>this.view.viewpoint),((e,t)=>{e&&t&&g.diff(e,t)&&this._onKeyboardBasedChange()}))]),this._activeComponent=new D.Component(n,i),this._editGeometryOperations.data.components.push(this._activeComponent);const s=this.segmentLabels;null!=s&&(s.context={view:t,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions},this.addHandles(p.watch((()=>this.labelOptions.enabled),(e=>{s.visible=e}),p.syncAndInitial))),this.addHandles(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.vectorToArray(e.pos)}))),n=t.map((e=>e.coordinates)),i=this.coordinateHelper.vectorToDehydratedPoint(this._activeComponent.getFirstVertex()?.pos)??null;y.pointEquals(i,this.firstVertex)||(this.firstVertex=i);const r=this.coordinateHelper.vectorToDehydratedPoint(this._activeComponent.getLastVertex()?.pos)??null;y.pointEquals(r,this.lastVertex)||(this.lastVertex=r);const o=this.coordinateHelper.vectorToDehydratedPoint(this._activeComponent.edges.at(-1)?.leftVertex?.pos)??null;switch(y.pointEquals(o,this.secondToLastVertex)||(this.secondToLastVertex=o),this._processCursor(this.cursorVertex),e.type){case"vertex-add":this.emit(e.type,{...e,added:n,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:n,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:n,vertices:t})}})));const c=this._manipulator=new w.DrawManipulator({consumesClicks:!1,grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size});this.manipulators.add(c),c.grabbable="point"!==e,this.addHandles([this._createManipulatorDragPipeline(c),c.events.on("immediate-click",(e=>this._onImmediateClick(e))),c.events.on("immediate-double-click",(e=>this._onImmediateDoubleClick(e))),p.watch((()=>({effectiveCursor:this.effectiveCursor})),(({effectiveCursor:e})=>{c.cursor=e}),p.syncAndInitial)]),V.setupSnappingToggleHandles(this,(()=>{const e=this.view.inputManager.latestPointerType??"mouse",t=this._getSnappingContext(e);null!=this.snappingManager&&this._updatingHandles.addPromise(a.ignoreAbortErrors(this._snappingOperation.snapAgainNearPreviousMapPoint(this.snappingManager,t)))}))}destroy(){o.destroyMaybe(this.segmentLabels),o.destroyMaybe(this._snappingOperation),this._editGeometryOperations=o.destroyMaybe(this._editGeometryOperations),this._updatingHandles.destroy()}get _snappingEnabled(){return null!=this.snappingManager&&this.snappingManager.options.effectiveEnabled}get _requiresScenePoint(){const e=this._updateAndGetEffectiveDrawSurface();return"3d"===this.view.type&&this.drawSurface!==e}get canRedo(){return this._editGeometryOperations.canRedo}get canUndo(){return this._editGeometryOperations.canUndo}get committedVertices(){return this._activeComponent.vertices.map((e=>this.coordinateHelper.vectorToArray(e.pos)))}get constraint(){const{constraintInfo:e,constraintsEnabled:t}=this;if(e&&t)switch(this.geometryType){case"point":return this._getPointConstraint(e.elevation,e.context);case"polygon":case"polyline":return this._getPolylineOrPolygonConstraint(this.lastVertex,this.secondToLastVertex,e.distance,e.direction,e.elevation,e.context)}}set drawingMode(e){this._set("drawingMode",e??f.defaultDrawingMode)}get effectiveCursor(){return this.loading?H:this._hideDefaultCursor?null:this.cursor||I}get interactive(){return this._manipulator.interactive}set interactive(e){this._manipulator.interactive=e}get isCompleted(){return this._createOperationCompleted}get numCommittedVertices(){return this._activeComponent.vertices.length}get snappingOptions(){return null!=this.snappingManager?this.snappingManager.options:null}get cursorVertex(){return this._get("cursorVertex")}get visualizationCursorVertex(){return"mouse"===this._stagedPointerType?this.cursorVertex:null}get committableVertex(){const{cursorVertex:e,lastVertex:t,firstVertex:n,geometryType:i}=this;return"polygon"===i&&y.pointNear(e,n)||y.pointNear(e,t)?null:e}get updating(){return this._updatingHandles.updating}get geometryIncludingUncommittedVertices(){const{committedVertices:e,committableVertex:t,coordinateHelper:n}=this,i=e.slice();return null!=t&&i.push(n.pointToArray(t)),i}cancel(){this.complete({aborted:!0})}commitStagedVertex(){this._snappingOperation.abort();const{committableVertex:e}=this;null!=e&&this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(e))}complete(e){const t=e?.aborted||!1;this._snappingOperation.abort(),this.snappingManager?.doneSnapping();const{geometryType:n,numCommittedVertices:i}=this,r="multipoint"===n&&0===i||"polyline"===n&&i<2||"polygon"===n&&i<3;"segment"!==n&&"point"!==n||this.commitStagedVertex(),this._createOperationCompleted=!r,(this.isCompleted||t)&&(this._stagedScreenPoint=null,this._stagedPointerId=null,this._stagedPointerType=null,this._processCursor(null),this.emit("complete",{vertices:this.committedVertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:t,type:"complete"}))}onInputEvent(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}}redo(){this._editGeometryOperations.redo()}undo(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()}_processCursor(e){const t=r.clone(this.cursorVertex),n=r.clone(e),i=n&&(this._updateAndGetEffectiveDrawSurface()?.constrainZ(n)??n),o=this._snapToClosingVertex(i),s=this._applyConstraints(o);y.pointNear(t,s)||(this._set("cursorVertex",s),this.segmentLabels?.set("stagedVertex",null!=s?this.coordinateHelper.pointToVector(s):null),null==s||"mouse"!==this._stagedPointerType?this.emit("cursor-remove"):this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(s)}],operation:"apply",type:"vertex-update"}))}_snapToClosingVertex(e){if(null==e||"polygon"!==this.geometryType||this.numCommittedVertices<=2)return e;const t=this._mapToScreen(e);if(!t)return e;const n=this._activeComponent;return this._vertexWithinPointerDistance(n.vertices[0].pos,t)?this.firstVertex:this._vertexWithinPointerDistance(n.vertices.at(-1).pos,t)?this.lastVertex:e}_createManipulatorDragPipeline(e){switch(this.drawingMode){case"click":return this._createManipulatorDragPipelineClick(e);case"freehand":return this._createManipulatorDragPipelineFreehand(e);case"hybrid":return this._createManipulatorDragPipelineHybrid(e)}}_createManipulatorDragPipelineClick(e){return O.createManipulatorDragEventPipeline(e,((e,t,n,i)=>{const r="touch"===i&&this._snappingEnabled;if(this.isCompleted||!r)return;const{snappingStep:o,cancelSnapping:s}=P.createSnapDragEventPipelineStep({predicate:()=>r,snappingManager:this.snappingManager,snappingContext:new T.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,feature:this.graphic,pointer:i,visualizer:this.snappingVisualizer}),updatingHandles:this._updatingHandles,useZ:!this._requiresScenePoint});n=n.next((e=>(r&&null!=this.snappingManager&&this.snappingManager.doneSnapping(),e))).next(s),t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this._processCursor(e.mapStart),("segment"===this.geometryType||r&&!this.numCommittedVertices)&&this.commitStagedVertex()),e))).next(O.sceneSnappingAtLocation(this.view,this.elevationInfo)).next(...o).next((e=>(r&&(this._processCursor(e.mapEnd),"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("mouse"!==this._stagedPointerType&&this._snappingOperation.abort(),"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e)))}))}_createManipulatorDragPipelineFreehand(e){return O.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this._snappingOperation.abort(),null==this.committableVertex&&this._processCursor(e.mapStart),"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this._processCursor(e.mapEnd),"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))}_createManipulatorDragPipelineHybrid(e){return O.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this._snappingOperation.abort(),this._processCursor(e.mapStart),this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this._processCursor(e.mapEnd),"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"mouse"!==this._stagedPointerType&&this._snappingOperation.abort(),"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))}get _drawAtFixedElevation(){const{constraintsEnabled:e,constraintZ:t,geometryType:n,numCommittedVertices:i}=this;return e?null!=t||"segment"===n&&i>0:("segment"===n||"polygon"===n)&&i>0}_updateAndGetEffectiveDrawSurface(){const{constraintsEnabled:e,coordinateHelper:t,drawSurface:n,elevationDrawSurface:i,snapToSceneEnabled:r}=this;if(null==i)return n;if(!this.hasZ)return i.defaultZ=null,i;const o=this.elevationInfo?.mode;let s=this.defaultZ,a=e||"absolute-height"===o;if(null!=r&&(a=r),"on-the-ground"===o&&(a=!1),this._drawAtFixedElevation){s=(e?this.constraintZ:null)??t.getZ(this._activeComponent.vertices[0].pos),a=!1}return a?n:(i.defaultZ=s,i)}_mapToScreen(e){return this._updateAndGetEffectiveDrawSurface()?.mapToScreen(e)}_onHold(e){this._snappingOperation.abort(),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&this._processCursor(e.mapPoint),e.stopPropagation()}_onImmediateClick(e){if(!("mouse"===e.pointerType&&2===e.button||this._manipulator.dragging))try{const{drawingMode:t,geometryType:n}=this;this._stagedPointerType=e.pointerType,this._stagedScreenPoint=e.screenPoint;const i=this._screenToMap(e.screenPoint);if(null==i)return;if(null==i||"freehand"===t&&"point"!==n)return;if(this._snappingEnabled&&null!=this.cursorVertex||this._processCursor(i),null==this.committableVertex)return void this.complete();this.commitStagedVertex(),"mouse"!==e.pointerType&&this._processCursor(null),("freehand"===t||"point"===n||"segment"===n&&2===this.numCommittedVertices||"segment"===n&&"hybrid"===t&&1===this.numCommittedVertices)&&this.complete()}finally{e.stopPropagation()}}_onImmediateDoubleClick(e){this._manipulator.dragging||"point"===this.geometryType||(this.complete(),e.stopPropagation())}_onPointerMove(e){const t=c.createScreenPoint(e.x,e.y);this._stagedScreenPoint=t,this._stagedPointerType=e.pointerType,this._stagedPointerId=e.pointerId;const n=this._snappingOperation,i=this._manipulator;this._pointerDownStates.has(e.pointerId)||i.grabbing||!i.interactive?n.abort():(e.stopPropagation(),this._processCursorMovementRelativeToSurface(t,e.pointerType))}_onKeyboardBasedChange(){const e=this._manipulator;"mouse"===this._stagedPointerType&&this._stagedScreenPoint&&null!=this._stagedPointerId&&!this._pointerDownStates.has(this._stagedPointerId)&&!e.grabbing&&e.interactive?this._processCursorMovementRelativeToSurface(this._stagedScreenPoint,this._stagedPointerType):this._snappingOperation.abort()}_processCursorMovementRelativeToSurface(e,t){const n=this._snappingOperation,i=this._screenToMap(e),r=this._requiresScenePoint?this.drawSurface?.screenToMap(e):null;if(null==i)return this._hideDefaultCursor=!0,this._processCursor(null),void n.abort();this._hideDefaultCursor=!1;const o=this.snappingManager;if(null==o)return this._processCursor(i),void n.abort();const s=this._getSnappingContext(t);this._updatingHandles.addPromise(a.ignoreAbortErrors(n.snap({point:i,scenePoint:r},o,s)))}_applyConstraints(e){const{constraint:t,constraintInfo:n}=this;if(!e||!n||!t)return e;const{context:i}=n,r=E.pointToConstraintSpace(e,i),o=r?t.closestTo(r):void 0;if(!o)return e;const s=E.constraintSpaceToPoint(o,e,i);return null!=s&&"absolute-height"!==i.elevationInfo.mode&&null!=this.constraintZ&&this.hasZ&&(s.z=this.constraintZ),s}_screenToMap(e){return e?this._updateAndGetEffectiveDrawSurface()?.screenToMap(e):null}_screenToMapDragEventStep(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),null==e)return null;const n=this._screenToMap(t.screenEnd);return null!=n?{...t,mapStart:e,mapEnd:n}:null}}_vertexWithinPointerDistance(e,t){const n=25,i=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(e));return null!=i&&G(i,t,n)}_getSnappingContext(e){const t=this._drawAtFixedElevation?this.elevationDrawSurface?.defaultZ:null;return new T.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:e,feature:this.graphic,visualizer:this.snappingVisualizer,selfSnappingZ:null!=t?{value:t,elevationInfo:this.elevationInfo}:null})}},t.__decorate([l.property()],e.DrawOperation.prototype,"_hideDefaultCursor",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"_snappingOperation",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"_snappingEnabled",null),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"graphic",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"constraintsEnabled",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"constraintInfo",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"constraint",null),t.__decorate([l.property()],e.DrawOperation.prototype,"constraintZ",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"defaultZ",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"isDraped",void 0),t.__decorate([l.property({value:f.defaultDrawingMode})],e.DrawOperation.prototype,"drawingMode",null),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"elevationDrawSurface",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"elevationInfo",void 0),t.__decorate([l.property({constructOnly:!0,type:S})],e.DrawOperation.prototype,"labelOptions",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"geometryType",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"hasM",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"hasZ",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"cursor",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"effectiveCursor",null),t.__decorate([l.property()],e.DrawOperation.prototype,"loading",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"manipulators",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"drawSurface",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"segmentLabels",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"snappingManager",void 0),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"snappingVisualizer",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"snapToSceneEnabled",void 0),t.__decorate([l.property({readOnly:!0})],e.DrawOperation.prototype,"cursorVertex",null),t.__decorate([l.property({readOnly:!0})],e.DrawOperation.prototype,"visualizationCursorVertex",null),t.__decorate([l.property()],e.DrawOperation.prototype,"committableVertex",null),t.__decorate([l.property()],e.DrawOperation.prototype,"firstVertex",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"lastVertex",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"secondToLastVertex",void 0),t.__decorate([l.property()],e.DrawOperation.prototype,"updating",null),t.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"view",void 0),e.DrawOperation=t.__decorate([u.subclass("esri.views.draw.DrawOperation")],e.DrawOperation),e.defaultCursor=I,e.defaultLoadingCursor=H,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
