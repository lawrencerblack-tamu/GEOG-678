/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../core/has","../../core/Logger","../../core/maybe","./BufferObject","./checkWebGLError","./enums","./GLObjectType","./Renderbuffer","./Texture"],(function(e,t,r,i,n,s,h,o,c,a){"use strict";const u=()=>r.getLogger("esri.views.webgl.FramebufferObject");class f{constructor(e,t,r=null){this._context=e,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,e.instanceCounter.increment(h.ResourceType.FramebufferObject,this);const i=l(t)?t:new a.Texture(this._context,t);if(this._colorAttachments.set(h.ColorAttachment.COLOR_ATTACHMENT0,i),this._validateTextureDescriptor(i.descriptor),this._validateColorAttachmentPoint(h.ColorAttachment.COLOR_ATTACHMENT0),null!=r)if(T(r))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=l(r)?r:new a.Texture(this._context,r),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const e=_(r)?r:new c.Renderbuffer(this._context,r);this._depthStencilBuffer=e,this._validateRenderBufferDescriptor(e.descriptor)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const e=this._context.getBoundFramebufferObject();if(this._colorAttachments.forEach(((e,t)=>this.detachColorTexture(t)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName){this._context.gl.deleteFramebuffer(this._glName),this._glName=null}this._context.bindFramebuffer(e),this._context.instanceCounter.decrement(h.ResourceType.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(h.ColorAttachment.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){const e=this._colorAttachments.get(h.ColorAttachment.COLOR_ATTACHMENT0);return e?.descriptor?.width??0}get height(){const e=this._colorAttachments.get(h.ColorAttachment.COLOR_ATTACHMENT0);return e?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce(((e,[t,r])=>e+r.usedMemory),this.depthStencil?.usedMemory??0)}getColorTexture(e){const t=this._colorAttachments.get(e);return t&&l(t)?t:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(e,t=h.ColorAttachment.COLOR_ATTACHMENT0){if(!e)return;this._validateColorAttachmentPoint(t);const r=e.descriptor;this._validateTextureDescriptor(r),this.detachColorTexture(t)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e)}detachColorTexture(e=h.ColorAttachment.COLOR_ATTACHMENT0){const t=this._colorAttachments.get(e);if(t){if(this._initialized){const t=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e),this._context.bindFramebuffer(t)}return this._colorAttachments.delete(e),t}}setColorTextureTarget(e,t=h.ColorAttachment.COLOR_ATTACHMENT0){const r=this._colorAttachments.get(t);r&&this._framebufferTexture2D(r.glName,t,e)}attachDepthStencil(e){if(e)switch(e.type){case o.GLObjectType.Texture:return this._attachDepthStencilTexture(e);case o.GLObjectType.RenderBuffer:return this._attachDepthStencilBuffer(e)}}_attachDepthStencilTexture(e){if(null==e)return;const t=e.descriptor;t.pixelFormat!==h.PixelFormat.DEPTH_STENCIL&&t.pixelFormat!==h.PixelFormat.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),t.dataType!==h.PixelType.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,h.DepthStencilAttachment)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=e}detachDepthStencilTexture(){const e=this._depthStencilTexture;return e&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,h.DepthStencilAttachment)),this._depthStencilTexture=null,e}_attachDepthStencilBuffer(e){if(null==e)return;const t=e.descriptor;if(this._validateRenderBufferDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const r=this._context.gl,i=this._getGLAttachmentPoint(t);r.framebufferRenderbuffer(h.FramebufferTarget.FRAMEBUFFER,i,r.RENDERBUFFER,e.glName)}this._depthStencilBuffer=e}detachDepthStencilBuffer(){const e=this._depthStencilBuffer;if(e&&this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl,r=this._getGLAttachmentPoint(e.descriptor);t.framebufferRenderbuffer(h.FramebufferTarget.FRAMEBUFFER,r,t.RENDERBUFFER,null)}return this._depthStencilBuffer=null,e}copyToTexture(e,t,r,i,n,s,o){(e<0||t<0||n<0||s<0)&&console.error("Offsets cannot be negative!"),(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");const c=o.descriptor;o.descriptor.target!==h.TextureType.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==c?.width||null==c?.height||e+r>this.width||t+i>this.height||n+r>c.width||s+i>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const u=this._context,f=u.bindTexture(o,a.Texture.TEXTURE_UNIT_FOR_UPDATES);u.setActiveTexture(a.Texture.TEXTURE_UNIT_FOR_UPDATES),u.bindFramebuffer(this),u.gl.copyTexSubImage2D(h.TextureType.TEXTURE_2D,0,n,s,e,t,r,i),u.bindTexture(f,a.Texture.TEXTURE_UNIT_FOR_UPDATES)}readPixels(e,t,r,i,n,s,h){(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),h||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,r,i,n,s,h)}async readPixelsAsync(e,t,r,i,s,o,c){const{gl:a}=this._context,u=n.BufferObject.createPixelPack(this._context,h.Usage.STREAM_READ,c.byteLength);this._context.bindBuffer(u),this._context.bindFramebuffer(this),a.readPixels(e,t,r,i,s,o,0),this._context.unbindBuffer(h.BufferType.PIXEL_PACK_BUFFER),await u.getSubDataAsync(c),u.dispose()}resize(e,t){if(this.width===e&&this.height===t)return;const r={width:e,height:t};d(r,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((e=>e.resize(r.width,r.height))),this._depthStencilTexture?.resize(r.width,r.height),this._initialized&&(d(r,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(r.width,r.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(e=h.FramebufferTarget.FRAMEBUFFER){const t=this._context.gl;if(this._initialized)return void t.bindFramebuffer(e,this.glName);this._glName&&t.deleteFramebuffer(this._glName);const r=t.createFramebuffer();if(t.bindFramebuffer(e,r),this._colorAttachments.forEach(((t,r)=>this._framebufferTexture2D(t.glName,r,m(t),e))),this._depthStencilBuffer){const r=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(e,r,t.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,t.DEPTH_STENCIL_ATTACHMENT,m(this._depthStencilTexture),e);if(s.webglDebugEnabled()){t.checkFramebufferStatus(e)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!")}this._glName=r,this._initialized=!0}_framebufferTexture2D(e,t=h.ColorAttachment.COLOR_ATTACHMENT0,r=h.TextureType.TEXTURE_2D,i=h.FramebufferTarget.FRAMEBUFFER,n=0){this._context.gl.framebufferTexture2D(i,t,r,e,n)}_disposeDepthStencilAttachments(){const e=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const t=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(h.FramebufferTarget.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthStencilBuffer=i.disposeMaybe(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=i.disposeMaybe(this._depthStencilTexture))}_validateTextureDescriptor(e){e.target!==h.TextureType.TEXTURE_2D&&e.target!==h.TextureType.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),d(e,this._context.parameters.maxTextureSize),this._validateBufferDimensions(e)}_validateRenderBufferDescriptor(e){d(e,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(e)}_validateBufferDimensions(e){e.width<=0&&(e.width=this.width),e.height<=0&&(e.height=this.height),this.width>0&&this.height>0&&(this.width===e.width&&this.height===e.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(e){switch(e.internalFormat){case h.RenderbufferFormat.DEPTH_COMPONENT16:case h.RenderbufferFormat.DEPTH_COMPONENT24:case h.RenderbufferFormat.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case h.RenderbufferFormat.DEPTH24_STENCIL8:case h.RenderbufferFormat.DEPTH32F_STENCIL8:case h.RenderbufferFormat.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case h.RenderbufferFormat.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(e){if(-1===f._MAX_COLOR_ATTACHMENTS){const{gl:e}=this._context;f._MAX_COLOR_ATTACHMENTS=e.getParameter(e.MAX_COLOR_ATTACHMENTS)}const t=e-h.ColorAttachment.COLOR_ATTACHMENT0;t+1>f._MAX_COLOR_ATTACHMENTS&&r.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${t+1}. Implementation supports up to ${f._MAX_COLOR_ATTACHMENTS} color attachments`)}}function l(e){return null!=e&&"type"in e&&e.type===o.GLObjectType.Texture}function _(e){return null!=e&&"type"in e&&e.type===o.GLObjectType.RenderBuffer}function T(e){return l(e)||null!=e&&"pixelFormat"in e}function d(e,t){const r=Math.max(e.width,e.height);if(r>t){u().warn(`Resizing FBO attachment size ${e.width}x${e.height} to device limit ${t}`);const i=t/r;return e.width=Math.round(e.width*i),e.height=Math.round(e.height*i),!1}return!0}function m(e){return e.descriptor.target===h.TextureType.TEXTURE_CUBE_MAP?h.TextureType.TEXTURE_CUBE_MAP_POSITIVE_X:h.TextureType.TEXTURE_2D}f._MAX_COLOR_ATTACHMENTS=-1,e.FramebufferObject=f,e.ensureAttachmentMaxSize=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
