/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../core/arrayUtils","../../core/Logger","../../core/typedArrayUtil","./checkWebGLError","./enums"],(function(e,t,r,s,i,n){"use strict";const f=()=>r.getLogger("esri.views.webgl.BufferObject"),a=null;class u{static createIndex(e,t,r){return new u(e,n.BufferType.ELEMENT_ARRAY_BUFFER,t,r)}static createVertex(e,t,r){return new u(e,n.BufferType.ARRAY_BUFFER,t,r)}static createUniform(e,t,r){return new u(e,n.BufferType.UNIFORM_BUFFER,t,r)}static createPixelPack(e,t=n.Usage.STREAM_READ,r){const s=new u(e,n.BufferType.PIXEL_PACK_BUFFER,t);return r&&s.setSize(r),s}static createPixelUnpack(e,t=n.Usage.STREAM_DRAW,r){return new u(e,n.BufferType.PIXEL_UNPACK_BUFFER,t,r)}static createTransformFeedback(e,t=n.Usage.STATIC_DRAW,r){const s=new u(e,n.BufferType.TRANSFORM_FEEDBACK_BUFFER,t);return s.setSize(r),s}constructor(e,t,r,s){this._context=e,this.bufferType=t,this.usage=r,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(n.ResourceType.BufferObject,this),this._glName=this._context.gl.createBuffer(),i.checkWebGLError(this._context.gl),s&&this.setData(s)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){return this.bufferType===n.BufferType.ELEMENT_ARRAY_BUFFER?this._indexType===n.DataType.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===n.BufferType.ELEMENT_ARRAY_BUFFER||this.bufferType===n.BufferType.ARRAY_BUFFER}dispose(){if(this._context?.gl){if(this._glName){this._context.gl.deleteBuffer(this._glName),this._glName=null}this._context.instanceCounter.decrement(n.ResourceType.BufferObject,this),this._context=null}else this._glName&&f().warn("Leaked WebGL buffer object")}setSize(e,t=null){if(e<=0&&f().error("Buffer size needs to be positive!"),this.bufferType===n.BufferType.ELEMENT_ARRAY_BUFFER&&null!=t)switch(this._indexType=t,t){case n.DataType.UNSIGNED_SHORT:e*=2;break;case n.DataType.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===n.BufferType.ELEMENT_ARRAY_BUFFER&&(s.isUint16Array(e)&&(t/=2,this._indexType=n.DataType.UNSIGNED_SHORT),s.isUint32Array(e)&&(t/=4,this._indexType=n.DataType.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const s=this._context.gl;null!=t?s.bufferData(this.bufferType,t,this.usage):s.bufferData(this.bufferType,e,this.usage),i.checkWebGLError(s),this._isVAOAware&&this._context.bindVAO(r)}setSubData(e,t,r,s){if(!e)return;(t<0||t*e.BYTES_PER_ELEMENT>=this.usedMemory)&&f().error("offset is out of range!"),r>=s&&f().error("end must be bigger than start!"),(t+(s-r))*e.BYTES_PER_ELEMENT>this.usedMemory&&f().error("An attempt to write beyond the end of the buffer!");const n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:a}=this._context;a.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,r,s-r),i.checkWebGLError(a),this._isVAOAware&&this._context.bindVAO(n)}getSubData(e,t=0,r,s){if(r<0||s<0)return void f().error("Problem getting subdata: offset and length were less than zero!");const i=_(e)?e.BYTES_PER_ELEMENT:1;if(i*((r??0)+(s??0))>e.byteLength)return void f().error("Problem getting subdata: offset and length exceeded destination size!");t+i*(s??0)>this.usedMemory&&f().warn("Potential problem getting subdata: requested data exceeds buffer size!");const a=this._context.gl;this.bufferType===n.BufferType.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,n.BufferType.TRANSFORM_FEEDBACK_BUFFER),a.getBufferSubData(n.BufferType.TRANSFORM_FEEDBACK_BUFFER,t,e,r,s),this._context.unbindBuffer(n.BufferType.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,n.BufferType.COPY_READ_BUFFER),a.getBufferSubData(n.BufferType.COPY_READ_BUFFER,t,e,r,s),this._context.unbindBuffer(n.BufferType.COPY_READ_BUFFER))}async getSubDataAsync(e,t=0,r,s){await this._context.clientWaitAsync(),this.getSubData(e,t,r,s)}}function _(e){return t.isArrayLike(e)}e.BufferObject=u,e.tracer=a,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
