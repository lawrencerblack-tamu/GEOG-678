/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","exports","../../../../Color","../../../../core/asyncUtils","../../../../core/Error","../../../../core/lang","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../core/string","../../../../core/urlUtils","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/projection/projectPointToVector","../../../../geometry/support/aaBoundingBox","../../../../support/arcadeOnDemand","../../../../symbols/cim/CIMSymbolHelper","../../../../symbols/cim/OverrideHelper","../../../../symbols/cim/utils","../../../../symbols/support/cimSymbolUtils","../../../../symbols/support/IconSymbol3DLayerResource","../../../../symbols/support/Symbol3DAnchorPosition2D","../../../../symbols/support/utils","../../../2d/arcade/callExpressionWithFeature","./constants","./ElevationAligners","./elevationAlignmentUtils","./Graphics3DDrapedGraphicLayer","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./graphicUtils","./interfaces","./placementUtils","./pointUtils","../support/FastSymbolUpdates","../../support/engineContent/sdfPrimitives","../../terrain/OverlayRenderer","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/Texture","../../webgl-engine/materials/HUDMaterial"],(function(e,t,r,i,s,a,o,n,l,c,h,u,d,p,m,_,y,f,g,x,b,S,v,P,R,M,z,T,I,C,O,w,D,U,E,A,F,G,L,H,V,j){"use strict";const k=d.fromValues(0,0,1),B=16,N=1.5,q=F.defaultTexSize,W=F.defaultSymbolSizeRatio,$=[W/2,W/2,1-W/2,1-W/2],J=[q*W,q*W];class Z extends O.Graphics3DSymbolLayer{getCachedSize(){return{size:this._getIconSize()}}constructor(e,t,r,i){super(e,t,r,i),this._cimSymbolMaterials=new Map,this._cimSymbolTextures=new Map,this._cimMaterialParametersInfo=null,this._size=null,this._symbolTextureRatio=1,this._outlineSize=0,this._patchTask=null,this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!0}}async doLoad(e){this._validateOrThrow();const t=this._prepareMaterialParameters(),r=this._getPrimitive();if(null!=r)this._prepareResourcesPrimitive(t,r);else{const r=P.getIconHref(this.symbolLayer),i=this._getCIMResource(r);null!=i?await this._prepareResourcesCIM(t,JSON.parse(i),e):await this._prepareResourcesHref(t,r,e)}}_getCIMResource(e){const t=h.dataComponents(e);return"application/json"===t?.mediaType?t.data:void 0}_validateOrThrow(){if(this._drivenProperties.size)return;const e=w.validateSymbolLayerSize(this._getIconSize());if(e)throw new s("graphics3diconsymbollayer:invalid-size",e)}_getIconSize(){const e=this.symbolLayer,t=Math.round(null!=e.size?l.pt2px(e.size):B);return this._drivenProperties.size?Math.max(t,64):t}_generateTextureCIM(e){let t=this._cimData;if(t&&t.symbol||this.logger.error("Can't create texture, CIM data is undefined"),t.primitiveOverrides){t=a.clone(t);const r=t.primitiveOverrides;g.OverrideHelper.evaluateOverrides(r,e,this._arcadeInfo.geometryType,null,null),g.OverrideHelper.applyOverrides(t.symbol,r)}const r=c.numericHash(JSON.stringify(t));let i=this._cimSymbolTextures.get(r);if(i)return i;const s=this._context.sharedResources.cimSymbolRasterizer,o=this._context.renderer&&"dictionary"===this._context.renderer.type?this._context.renderer.fieldMap:null;o&&g.OverrideHelper.applyDictionaryTextOverrides(t.symbol,e,o,null);const n=null!=this._cimScaleFactorOrFunction?x.evaluateValueOrFunction(this._cimScaleFactorOrFunction,e):1;1!==n&&t.symbol&&b.scaleCIMSymbol(t.symbol,n,!0);const l=f.CIMSymbolHelper.getEnvelope(t,null,s.resourceManager);if(l&&l.width&&l.height){const e=l.x+l.width/2,r=l.y+l.height/2,a=s.rasterize({type:"cim",data:t},l.width,l.height,e,r,1,"esriGeometryPoint"),o=new v.Symbol3DAnchorPosition2D({x:-l.x/l.width-.5,y:(l.height+l.y)/l.height-.5});this._cimMaterialParametersInfo.anchorPosition=this._getAnchorPos("relative",o),i=new V.Texture(a,{width:a?.width??1,height:a?.height??1})}else i=new V.Texture(new ImageData(1,1),{width:1,height:1});return this._cimSymbolTextures.set(r,i),this._context.stage.add(i),i}_prepareMaterialParameters(){const e={anchorPosition:this._getAnchorPos(this.symbolLayer.anchor,this.symbolLayer.anchorPosition)},t=this.symbol;if(K(t)){const{screenLength:r,minWorldLength:i,maxWorldLength:s}=t.verticalOffset;e.verticalOffset={screenLength:l.pt2px(r),minWorldLength:i||0,maxWorldLength:null!=s?s:1/0}}return this._context.screenSizePerspectiveEnabled&&(e.screenSizePerspective=this._context.sharedResources.screenSizePerspectiveSettings),e.occlusionTest=!0,e.hasSlicePlane=this._context.slicePlaneEnabled,e}_prepareResourcesPrimitive(e,t){const r=this._getOutlineSize();if(Q(t)&&0===r)throw new Error("Nothing to render");if(this._outlineSize=r,e.color=this._getFillColor(),e.outlineColor=this._getOutlineColor(),e.outlineSize=this._outlineSize,null!=this._context.sharedResources.textures){const r=this._context.sharedResources.textures.fromData(`${t}-icon`,(()=>F.createTexture(t)));this._textureHandle=r,e.textureId=r.texture.id}e.textureIsSignedDistanceField=!0,e.sampleSignedDistanceFieldTexelCenter=F.requiresHalfTexelOffset(t),e.distanceFieldBoundingBox=$;const i=this._getIconSize();this._size=[i,i],this._symbolTextureRatio=1/W,this._createMaterialAndAddToStage(e,this._context.stage)}async _prepareResourcesHref(e,t,r){this._outlineSize=this._getOutlineSize(),e.color=this._getFillColor(),e.outlineColor=this._getOutlineColor(),e.outlineSize=this._outlineSize,e.textureIsSignedDistanceField=!1;const a=this._getIconSize(),o=a*this._context.graphicsCoreOwner.view.state.rasterPixelRatio;if(null!=this._context.sharedResources.textures){const l=await i.result(this._context.sharedResources.textures.fromUrl(t,o,{signal:r}));if(!1===l.ok){n.throwIfAbortError(l.error);throw new s("graphics3diconsymbollayer:request-failed",`Failed to load (Request for icon resource failed: ${t})`)}this._textureHandle=l.value;const c=l.value.texture;this._size=this._computeSizeFromTexture(c,a),e.textureId=c.id}this._createMaterialAndAddToStage(e,this._context.stage)}async _prepareResourcesCIM(t,r,i){if(this._cimData=r,!this._context.sharedResources.cimSymbolRasterizer){const t=(await new Promise(((t,r)=>e(["../../../../symbols/cim/CIMSymbolRasterizer"],t,r)))).CIMSymbolRasterizer;n.throwIfAborted(i),this._context.sharedResources.cimSymbolRasterizer||(this._context.sharedResources.cimSymbolRasterizer=new t(this._context.renderCoordsHelper.spatialReference))}const s=this._context.sharedResources.cimSymbolRasterizer,a=[],o=r,l=o?.symbol;f.CIMSymbolHelper.fetchResources(l,s.resourceManager,a,i),f.CIMSymbolHelper.fetchFonts(l,s.resourceManager,a);const c=this._context.layer.fields?this._context.layer.fields.map((e=>e.toJSON())):[],h=this._context.renderCoordsHelper.spatialReference;if(this._arcadeInfo={spatialReference:h,fields:c,geometryType:"esriGeometryPoint"},o?.primitiveOverrides&&a.push(g.OverrideHelper.createRenderExpressions(o.primitiveOverrides,this._arcadeInfo)),a.length>0&&(await Promise.all(a),n.throwIfAborted(i)),this._context.renderer&&"dictionary"===this._context.renderer.type&&this._context.renderer.scaleExpression){const e=this._context.renderer;if(e.scaleExpression){const t=e.scaleExpression,r=await y.createRendererExpression(t,this._context.layer.spatialReference,c);this._cimScaleFactorOrFunction=(e,t,i)=>{const s=R(r,e,{$view:i},"esriGeometryPoint",t);return null!==s?s:1}}}n.throwIfAborted(i),this._cimMaterialParametersInfo=t,this._cimMaterialParametersInfo.color=this._getFillColor(),this._cimMaterialParametersInfo.outlineColor=[0,0,0,0],this._cimMaterialParametersInfo.outlineSize=0,this._cimMaterialParametersInfo.textureIsSignedDistanceField=!1}_getPrimitive(){return this.symbolLayer.resource&&this.symbolLayer.resource.href?null:this.symbolLayer.resource&&this.symbolLayer.resource.primitive||S.defaultPrimitive}_getOutlineSize(){let e=0;const t=this.symbolLayer;if(null!=t.outline?.size)return Math.max(l.pt2px(t.outline.size),0);return e=Q(this._getPrimitive())?N:0,Math.max(e,0)}_getOutlineColor(){const e=this._getLayerOpacity(),t=this.symbolLayer,i=t?.outline?.color;if(null!=i){const t=r.toUnitRGB(i),s=i.a*e;return[t[0],t[1],t[2],s]}return[0,0,0,0]}_getFillColor(){if(Q(this._getPrimitive()))return M.transparentUnit;const e=null==this._getPrimitive(),t=this.symbolLayer?.material?.color;return this._getCombinedOpacityAndColor(t,{hasIntrinsicColor:e})}_getAnchorPos(e,t){return"relative"===e?u.fromValues((t.x||0)+.5,.5-(t.y||0)):e in U.namedAnchorToHUDMaterialAnchorPos?U.namedAnchorToHUDMaterialAnchorPos[e]:U.namedAnchorToHUDMaterialAnchorPos.center}_createMaterialAndAddToStage(e,t){if(this._cimData){this._fastUpdates=null;let r=e.textureId?this._cimSymbolMaterials.get(e.textureId):null;return r||(r=new j.HUDMaterial(e),this._cimSymbolMaterials.set(e.textureId??0,r),t.add(r)),r}return this._fastUpdates=A.initFastSymbolUpdatesState(this._context.renderer,this._fastVisualVariableConvertOptions()),this._fastUpdates&&(e={...e,...this._fastUpdates.materialParameters}),this._materials[0]=new j.HUDMaterial(e),t.add(this._materials[0]),this._materials[0]}_setDrapingDependentMaterialParameters(){this.draped&&(this._forEachMaterial((e=>{e.setParameters({verticalOffset:null,screenSizePerspective:null,occlusionTest:!1,hasSlicePlane:!1,shaderPolygonOffset:0,draped:this.draped})})),this.layerOpacityChanged())}destroy(){super.destroy(),this._patchTask=o.abortMaybe(this._patchTask),this._forEachMaterial((e=>this._context.stage.remove(e))),this._materials.length=0,this._cimSymbolMaterials.clear(),this._cimSymbolTextures.forEach((e=>this._context.stage.remove(e))),this._cimSymbolTextures.clear(),this._textureHandle=o.releaseMaybe(this._textureHandle)}_getScaleFactor(e,t){if(this._drivenProperties.size&&e.size){for(let t=0;t<3;t++){const r=e.size[t];r&&"symbol-value"!==r&&"proportional"!==r&&(e.size[t]=l.pt2px(r))}if("symbol-value"===e.size[0])return 1;if(isFinite(+e.size[0]))return+e.size[0]/t;if(isFinite(+e.size[2]))return+e.size[2]/t}return 1}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry))return null;let r,i=[0,0];if(this._cimData){if(!this._cimData.symbol)return null;const e=this._generateTextureCIM(t),s={textureId:e.id,...this._cimMaterialParametersInfo};r=this._createMaterialAndAddToStage(s,this._context.stage);const a=window.devicePixelRatio||1;i=[e.parameters.width/a,e.parameters.height/a]}else i=this._size,r=this._materials[0];const s=E.placePointOnGeometry(t.geometry);if(null==s)return this.logger.warn(`unsupported geometry type for icon symbol: ${t.geometry.type}`),null;const a=e.renderingInfo,o=this._getVertexOpacityAndColor(a);let n=1;if(!this._fastUpdates?.visualVariables.size){const e=i[0]>i[1]?i[0]:i[1];n=this._getScaleFactor(a,e)}n*=this._symbolTextureRatio;const l=u.fromValues(i[0]*n,i[1]*n),c=this.setGraphicElevationContext(t);return this.ensureDrapedStatus("on-the-ground"===c.mode)&&this._setDrapingDependentMaterialParameters(),this.draped?this._createAsOverlay(t,s,r,o,l,e.layer.uid):this._createAs3DShape(t,s,r,o,l,c,t.uid)}layerOpacityChanged(){const e=this._getFillColor(),t=this._getOutlineColor();this._forEachMaterial((r=>{r.setParameters({color:e}),r.setParameters({outlineColor:t})}))}layerElevationInfoChanged(e,t,r){const i=this._elevationContext.mode,s=T.elevationModeChangeUpdateType(Z.elevationModeChangeTypes,r,i);if(s!==T.SymbolUpdateType.UPDATE)return s;const a=T.needsElevationUpdates2D(i)||"absolute-height"===i;return this.updateGraphics3DGraphicElevationInfo(e,t,(()=>a))}slicePlaneEnabledChanged(){return this.draped||this._forEachMaterial((e=>{e.setParameters({hasSlicePlane:this._context.slicePlaneEnabled})})),!0}physicalBasedRenderingChanged(){return!0}get pixelRatioChanged(){return null!=this._getPrimitive()}applyRendererDiff(e,t){for(const r in e.diff){if("visualVariables"!==r)return D.ApplyRendererDiffResult.RecreateSymbol;if(!A.updateFastSymbolUpdatesState(this._fastUpdates,t,this._fastVisualVariableConvertOptions()))return D.ApplyRendererDiffResult.RecreateSymbol;this._materials[0]?.setParameters(this._fastUpdates.materialParameters)}return D.ApplyRendererDiffResult.FastUpdate}prepareSymbolLayerPatch(e){if(this._patchTask?.abort(),"partial"!==e.diff.type)return;const t=e.diff.diff;this._preparePatchResource(e,t)}_preparePatchResource(e,t){if(!t.resource||"partial"!==t.resource.type)return;const r=t.resource.diff;if("complete"!==r?.href?.type)return;const a=r.href.newValue,{textures:l}=this._context.sharedResources;if(null==a||null==l||null!=this._getCIMResource(a))return;const c=this._getIconSize(),h=c*this._context.graphicsCoreOwner.view.state.pixelRatio;e.symbolLayerStatePatches.push((()=>{this._patchTask=o.abortMaybe(this._patchTask),this._patchTask=i.createTask((e=>this._context.schedule((async(e,t)=>{const r=await i.result(l.fromUrl(a,h,{signal:t}));n.throwIfAborted(t);const u=!r.ok;if(u&&n.throwIfAbortError(r.error),this._textureHandle=o.releaseMaybe(this._textureHandle),this._patchTask=null,u){this._forEachMaterial((e=>{e.visible=!1,e.setParameters({textureId:null})}));const e=`Failed to load (Request for icon resource failed: ${a})`;return void this.logger.error(new s("graphics3diconsymbollayer:request-failed",e))}this._textureHandle=r.value;const d=r.value.texture;this._size=this._computeSizeFromTexture(d,c),this._forEachMaterial((e=>{e.setParameters({textureId:d.id}),e.visible=!0}))}),e)))})),delete r.href}_defaultElevationInfoNoZ(){return X}_createAs3DShape(e,t,r,i,s,a,o){const n=this.getFastUpdateAttrValues(e),l=this._context.layer.uid,c=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:o,layerUid:l}),h=L.createPointGeometry(r,k,null,i,s,Y,null,n,c),u=E.createStageObject(this._context,t,h,a,o);if(null==u)return null;const d=new C.Graphics3DObject3DGraphicLayer(this,u.object,[h],null,null,z.perObjectElevationAligner,a);return d.alignedSampledElevation=u.sampledElevation,d.needsElevationUpdates=T.needsElevationUpdates2D(a.mode)||"absolute-height"===a.mode,d.getScreenSize=this._createScreenSizeGetter(s,n),d.calculateRelativeScreenBounds=e=>r.calculateRelativeScreenBounds(d.getScreenSize(),1,e),E.extendPointGraphicElevationContext(d,t,this._context.elevationProvider),d}_createAsOverlay(e,t,r,i,s,a){r.renderPriority=this._renderPriority;const o=d.create();m.projectPointToVector(t,o,this._context.overlaySR),o[2]=G.drapedZ;const n=this._context.clippingExtent;if(null!=n&&!_.containsPoint(n,o))return null;const l=this.getFastUpdateAttrValues(e),c=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:e.uid,layerUid:this._context.layer.uid}),h=L.createPointGeometry(r,k,o,i,s,null,null,l,c),u=new H.RenderGeometry(h,{layerUid:a,graphicUid:e.uid}),p=new I.Graphics3DDrapedGraphicLayer(this,[u],null,this._context.drapeSourceRenderer);return p.getScreenSize=this._createScreenSizeGetter(s,l),p.calculateRelativeScreenBounds=e=>r.calculateRelativeScreenBounds(p.getScreenSize(),1,e),p}_createScreenSizeGetter(e,t){const r=this._outlineSize+2;if(this._fastUpdates&&t){const i=e[0]/this._symbolTextureRatio,s=e[1]/this._symbolTextureRatio;return(e=u.create())=>{const[a,o]=A.evaluateModelTransformScale(ee,this._fastUpdates.materialParameters,t);return e[0]=a*i+r,e[1]=o*s+r,e}}const i=e[0]/this._symbolTextureRatio+r,s=e[1]/this._symbolTextureRatio+r;return(e=u.create())=>(e[0]=i,e[1]=s,e)}_fastVisualVariableConvertOptions(){const e=Math.max(this._size[0],this._size[1]),t=d.fromValues(e,e,e),r=l.px2pt(1),i=e*r,s=d.fromValues(i,i,i);return new A.ConvertOptions({size:!0,color:!0,rotation:!0,opacity:!1},t,s,r)}_forEachMaterial(e){this._materials.forEach(e),this._cimSymbolMaterials.forEach(e)}_computeSizeFromTexture({parameters:e},t){const r=(e.width??1)/(e.height??1);return r>1?[t,Math.round(t/r)]:[Math.round(t*r),t]}test(){return{...super.test(),material:this._materials[0]}}}function K(e){return e&&"point-3d"===e.type&&e.hasVisibleVerticalOffset()}function Q(e){return null!=e&&("cross"===e||"x"===e)}Z.PRIMITIVE_SIZE=J,Z.elevationModeChangeTypes={definedChanged:T.SymbolUpdateType.UPDATE,staysOnTheGround:T.SymbolUpdateType.NONE,onTheGroundChanged:T.SymbolUpdateType.RECREATE};const X={mode:"relative-to-ground",offset:0},Y=p.fromValues(0,0,0,1),ee=d.create();t.Graphics3DIconSymbolLayer=Z,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
