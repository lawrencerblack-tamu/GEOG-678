/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/devEnvironmentUtils","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/FloatArray","../../../../geometry/support/buffer/BufferView","../../../../chunks/vec3","../../../../chunks/vec4","../../../../chunks/vec2","../../../../chunks/vec33","../../../../chunks/vec43","../../glTF/DefaultLoadingContext","../../glTF/loader","../../glTF/internal/indexUtils","../../glTF/internal/resourceUtils","../../glTF/internal/TextureTransformUtils","./ProcessedObjectResource","./wosrLoader","../../webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/Texture","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/materials/DefaultMaterial_COLOR_GAMMA","../../webgl-engine/materials/pbrUtils"],(function(e,t,r,o,s,i,a,n,l,u,c,d,m,f,g,x,b,p,h,T,M,y,w,R,v,A,B,F,S,V,E,O,L){"use strict";async function C(e,r){const o=I(t.adjustStaticAGOUrl(e));if("wosr"===o.fileType){const e=await(r.cache?r.cache.loadWOSR(o.url,r):R.load(o.url,r)),{engineResources:t,referenceBoundingBox:s}=R.processLoadResult(e,r);return{lods:t,referenceBoundingBox:s,isEsriSymbolResource:!1,isWosr:!0}}const s=await(r.cache?r.cache.loadGLTF(o.url,r,!!r.usePBR):h.loadGLTF(new p.DefaultLoadingContext(r.streamDataRequester),o.url,r,r.usePBR)),i=s.model.meta?.ESRI_proxyEllipsoid,a=s.meta.isEsriSymbolResource&&null!=i&&"EsriRealisticTreesStyle"===s.meta.ESRI_webstyle;a&&!s.customMeta.esriTreeRendering&&(s.customMeta.esriTreeRendering=!0,U(s,i));const n=!!r.usePBR,l=s.meta.isEsriSymbolResource?{usePBR:n,isSchematic:!1,treeRendering:a,mrrFactors:[...L.defaultEsriSymbologyMRRFactors]}:{usePBR:n,isSchematic:!1,treeRendering:!1,mrrFactors:[...L.defaultAdvancedMRRFactors]},u={...r.materialParameters,treeRendering:a},{engineResources:c,referenceBoundingBox:d}=D(s,l,u,r.skipHighLods&&null==o.specifiedLodIndex?{skipHighLods:!0}:{skipHighLods:!1,singleLodIndex:o.specifiedLodIndex});return{lods:c,referenceBoundingBox:d,isEsriSymbolResource:s.meta.isEsriSymbolResource,isWosr:!1}}function I(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);if(t)return{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null};return e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function D(e,t,r,o){const s=e.model,i=new Array,a=new Map,n=new Map,l=s.lods.length,c=u.empty();return s.lods.forEach(((e,d)=>{const m=!0===o.skipHighLods&&(l>1&&0===d||l>3&&1===d)||!1===o.skipHighLods&&null!=o.singleLodIndex&&d!==o.singleLodIndex;if(m&&0!==d)return;const f=new w.ProcessedObjectResource(e.name,e.lodThreshold,[0,0,0]);e.parts.forEach((e=>{const o=m?new E.DefaultMaterial({}):N(s,e,f,t,r,a,n),{geometry:i,vertexCount:l}=k(e,null!=o?o:new E.DefaultMaterial({})),g=i.boundingInfo;null!=g&&0===d&&(u.expandWithVec3(c,g.bbMin),u.expandWithVec3(c,g.bbMax)),null!=o&&(f.stageResources.geometries.push(i),f.numberOfVertices+=l)})),m||i.push(f)})),{engineResources:i,referenceBoundingBox:c}}function N(e,t,r,o,s,i,n){const l=t.material+(t.attributes.normal?"_normal":"")+(t.attributes.color?"_color":"")+(t.attributes.texCoord0?"_texCoord0":"")+(t.attributes.tangent?"_tangent":""),u=e.materials.get(t.material),c=null!=t.attributes.texCoord0,d=null!=t.attributes.normal;if(null==u)return null;const m=G(u.alphaMode);if(!i.has(l)){if(c){const t=(t,r=!1)=>{if(null!=t&&!n.has(t)){const o=e.textures.get(t);if(null!=o){const e=o.data;n.set(t,new S.Texture(M.isEncodedMeshTexture(e)?e.data:e,{...o.parameters,preMultiplyAlpha:!M.isEncodedMeshTexture(e)&&r,encoding:M.isEncodedMeshTexture(e)&&null!=e.encoding?e.encoding:void 0}))}}};t(u.textureColor,m!==B.AlphaDiscardMode.Opaque),t(u.textureNormal),t(u.textureOcclusion),t(u.textureEmissive),t(u.textureMetallicRoughness)}const r=u.color[0]**(1/O.colorGamma),f=u.color[1]**(1/O.colorGamma),g=u.color[2]**(1/O.colorGamma),x=u.emissiveFactor[0]**(1/O.colorGamma),b=u.emissiveFactor[1]**(1/O.colorGamma),p=u.emissiveFactor[2]**(1/O.colorGamma),h=null!=u.textureColor&&c?n.get(u.textureColor):null,T=L.useSchematicPBR({normalTexture:u.textureNormal,metallicRoughnessTexture:u.textureMetallicRoughness,metallicFactor:u.metallicFactor,roughnessFactor:u.roughnessFactor,emissiveTexture:u.textureEmissive,emissiveFactor:u.emissiveFactor,occlusionTexture:u.textureOcclusion}),w=null!=u.normalTextureTransform?.scale?u.normalTextureTransform?.scale:a.ONES;i.set(l,new E.DefaultMaterial({...o,transparent:m===B.AlphaDiscardMode.Blend,customDepthTest:B.DepthTestFunction.Lequal,textureAlphaMode:m,textureAlphaCutoff:u.alphaCutoff,diffuse:[r,f,g],ambient:[r,f,g],opacity:u.opacity,doubleSided:u.doubleSided,doubleSidedType:"winding-order",cullFace:u.doubleSided?B.CullFaceOptions.None:B.CullFaceOptions.Back,hasVertexColors:!!t.attributes.color,hasVertexTangents:!!t.attributes.tangent,normalType:d?v.NormalType.Attribute:v.NormalType.ScreenDerivative,castShadows:!0,receiveShadows:u.receiveShadows,receiveAmbientOcclusion:u.receiveAmbientOcclustion,textureId:null!=h?h.id:void 0,colorMixMode:u.colorMixMode,normalTextureId:null!=u.textureNormal&&c?n.get(u.textureNormal).id:void 0,textureAlphaPremultiplied:null!=h&&!!h.parameters.preMultiplyAlpha,occlusionTextureId:null!=u.textureOcclusion&&c?n.get(u.textureOcclusion).id:void 0,emissiveTextureId:null!=u.textureEmissive&&c?n.get(u.textureEmissive).id:void 0,metallicRoughnessTextureId:null!=u.textureMetallicRoughness&&c?n.get(u.textureMetallicRoughness).id:void 0,emissiveFactor:[x,b,p],mrrFactors:T?[...L.defaultSchematicMRRFactors]:[u.metallicFactor,u.roughnessFactor,o.mrrFactors[2]],isSchematic:T,colorTextureTransformMatrix:y.getTransformMatrix(u.colorTextureTransform),normalTextureTransformMatrix:y.getTransformMatrix(u.normalTextureTransform),scale:[w[0],w[1]],occlusionTextureTransformMatrix:y.getTransformMatrix(u.occlusionTextureTransform),emissiveTextureTransformMatrix:y.getTransformMatrix(u.emissiveTextureTransform),metallicRoughnessTextureTransformMatrix:y.getTransformMatrix(u.metallicRoughnessTextureTransform),...s}))}const f=i.get(l);if(r.stageResources.materials.push(f),c){const e=e=>{null!=e&&r.stageResources.textures.push(n.get(e))};e(u.textureColor),e(u.textureNormal),e(u.textureOcclusion),e(u.textureEmissive),e(u.textureMetallicRoughness)}return f}function k(e,t){const o=e.attributes.position.count,s=T.convertPrimitiveToTriangles(e.indices||o,e.primitiveType),i=c.newFloatArray(3*o),{typedBuffer:a,typedBufferStride:n}=e.attributes.position;m.transformMat4(i,a,e.transform,3,n);const l=[[V.VertexAttribute.POSITION,new A.Attribute(i,s,3,!0)]];if(null!=e.attributes.normal){const t=c.newFloatArray(3*o),{typedBuffer:i,typedBufferStride:a}=e.attributes.normal;r.normalFromMat4(P,e.transform),m.transformMat3(t,i,P,3,a),l.push([V.VertexAttribute.NORMAL,new A.Attribute(t,s,3,!0)])}if(null!=e.attributes.tangent){const t=c.newFloatArray(4*o),{typedBuffer:i,typedBufferStride:a}=e.attributes.tangent;r.normalFromMat4(P,e.transform),f.transformMat3(t,i,P,4,a),l.push([V.VertexAttribute.TANGENT,new A.Attribute(t,s,4,!0)])}if(null!=e.attributes.texCoord0){const t=c.newFloatArray(2*o),{typedBuffer:r,typedBufferStride:i}=e.attributes.texCoord0;g.normalizeIntegerBuffer(t,r,2,i),l.push([V.VertexAttribute.UV0,new A.Attribute(t,s,2,!0)])}if(null!=e.attributes.color){const t=new Uint8Array(4*o);4===e.attributes.color.elementCount?e.attributes.color instanceof d.BufferViewVec4f?f.scale(t,e.attributes.color,255):e.attributes.color instanceof d.BufferViewVec4u8?b.copy(t,e.attributes.color):e.attributes.color instanceof d.BufferViewVec4u16&&f.scale(t,e.attributes.color,1/256):(t.fill(255),e.attributes.color instanceof d.BufferViewVec3f?m.scale(t,e.attributes.color,255,4):e.attributes.color instanceof d.BufferViewVec3u8?x.copy(t,e.attributes.color.typedBuffer,4,e.attributes.color.typedBufferStride):e.attributes.color instanceof d.BufferViewVec3u16&&m.scale(t,e.attributes.color,1/256,4)),l.push([V.VertexAttribute.COLOR,new A.Attribute(t,s,4,!0)])}return{geometry:new F.Geometry(t,l),vertexCount:o}}const P=o.create();function G(e){switch(e){case"BLEND":return B.AlphaDiscardMode.Blend;case"MASK":return B.AlphaDiscardMode.Mask;case"OPAQUE":case null:case void 0:return B.AlphaDiscardMode.Opaque}}function U(e,t){for(let r=0;r<e.model.lods.length;++r){const o=e.model.lods[r];for(const a of o.parts){const o=a.attributes.normal;if(null==o)return;const u=a.attributes.position,c=u.count,m=l.create(),f=l.create(),g=l.create(),x=new Uint8Array(4*c),b=new Float64Array(3*c),p=s.invert(i.create(),a.transform);let h=0,T=0;for(let s=0;s<c;s++){u.getVec(s,f),o.getVec(s,m),n.transformMat4(f,f,a.transform),n.subtract(g,f,t.center),n.divide(g,g,t.radius);const i=g[2],l=n.length(g),c=Math.min(.45+.55*l*l,1);n.divide(g,g,t.radius),null!==p&&n.transformMat4(g,g,p),n.normalize(g,g),r+1!==e.model.lods.length&&e.model.lods.length>1&&(i>-1?n.lerp(g,g,m,.2):n.lerp(g,g,m,Math.min(-4*i-3.8,1))),b[h]=g[0],b[h+1]=g[1],b[h+2]=g[2],h+=3,x[T]=255*c,x[T+1]=255*c,x[T+2]=255*c,x[T+3]=255,T+=4}a.attributes.normal=new d.BufferViewVec3f(b),a.attributes.color=new d.BufferViewVec4u8(x)}}}e.fetch=C,e.gltfToEngineResources=D,e.parseUrl=I,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
