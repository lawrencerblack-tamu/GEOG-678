/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/has","../../../../core/Error","../../../../core/lang","../../../../core/unitUtils","../../../../chunks/earcut","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/projection/computeTranslationToOriginAndRotation","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/DoubleArray","../../../../geometry/support/Indices","../../../../chunks/vec3","../../../../layers/graphics/data/SnappingCandidate","../../../../renderers/support/renderingInfoUtils","../../../ViewingMode","./elevationAlignmentUtils","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./graphicUtils","./interfaces","./polygonUtils","../support/edgeUtils","../../support/debugFlags","../../support/ElevationProvider","../../support/renderInfoUtils/polygon","../../webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/ContentObjectType","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/GeometryWithMapPositions","../../webgl-engine/lib/Normals","../../webgl-engine/lib/Object3D","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial"],(function(e,t,n,r,i,a,s,o,l,c,h,d,g,p,u,m,y,b,f,x,_,S,A,P,v,w,M,E,C,O,D,I,L,z,G,R,B,T,U,V){"use strict";const j=["polygon","extent"];class N extends A.Graphics3DSymbolLayer{constructor(e,t,n,r){super(e,t,n,r),this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const e=P.validateSymbolLayerSize(this._getSymbolSize());if(e)throw new n("graphics3dextrudesymbollayer:invalid-size",e)}const e=this.symbolLayer?.material?.color,t=this._getCombinedOpacityAndColor(e),r=d.fromArray(t),i=t[3],a=i<1||this.needsDrivenTransparentPass,s={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0,diffuse:r,ambient:r,opacity:i,transparent:a,cullFace:a?L.CullFaceOptions.None:L.CullFaceOptions.Back,hasVertexColors:!0,hasSlicePlane:this._context.slicePlaneEnabled,castShadows:this.symbolLayer.castShadows,offsetTransparentBackfaces:!0,normalType:D.NormalType.Compressed};this._materials[le.Main]=new V.DefaultMaterial(s),this._materials[le.Bottom]=new V.DefaultMaterial({...s,cullFace:L.CullFaceOptions.Back}),this._context.stage.addMany(this._materials)}destroy(){super.destroy(),this._context.stage.removeMany(this._materials),this._materials.length=0}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,j,this.symbolLayer.type))return null;const n=this._getVertexOpacityAndColor(e.renderingInfo,255),r=this.setGraphicElevationContext(t);return this._createAs3DShape(t,e.renderingInfo,n,r,t.uid)}layerOpacityChanged(e,t){const n=this.symbolLayer?.material?.color,r=this._getCombinedOpacity(n),i=r<1||this.needsDrivenTransparentPass;this._materials[le.Main]?.setParameters({opacity:r,transparent:i}),this._materials[le.Bottom]?.setParameters({opacity:r,transparent:i});const a=this._getLayerOpacity();e.forEach((e=>{const n=t(e);null!=n&&n.layerOpacityChanged(a,this._context.isAsync)}))}layerElevationInfoChanged(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,_.needsElevationUpdates3D)}slicePlaneEnabledChanged(e,t){return this._materials[le.Main]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),this._materials[le.Bottom]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),e.forEach((e=>{const n=t(e);null!=n&&n.slicePlaneEnabledChanged(this._context.slicePlaneEnabled,this._context.isAsync)})),!0}physicalBasedRenderingChanged(){const e={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0};return this._materials[le.Main]?.setParameters(e),this._materials[le.Bottom]?.setParameters(e),!0}_getExtrusionSize(e){let t;return t=e.size&&this._drivenProperties.size?f.getDriverAxisSizeValue(e.size,2)??0:this._getSymbolSize(),t/=this._context.renderCoordsHelper.unitInMeters,t}applyRendererDiff(e,t){return this._drivenPropertiesChanged(t)?v.ApplyRendererDiffResult.RecreateSymbol:v.ApplyRendererDiffResult.RecreateGraphics}async queryForSnapping(e,t,n,a){const s=this._getExtrusionSize(n)*this._context.renderCoordsHelper.unitInMeters/i.getMetersPerVerticalUnitForSR(t),{objectId:o,target:l}=e,c=r.clone(l);switch(c.z=(c.z??0)+s,e.type){case"edge":{const{start:t,end:n}=e,i=r.clone(t),a=r.clone(n);return i.z=(i.z??0)+s,a.z=(a.z??0)+s,[b.makeEdgeCandidate(o,c,1/0,i,a)]}case"vertex":return[b.makeVertexCandidate(o,c,1/0),b.makeEdgeCandidate(o,l,1/0,l,c)];default:return[]}}_getSymbolSize(){return this.symbolLayer.size??1}_createAs3DShape(e,t,n,r,i){const h=w.geometryAsPolygon(e.geometry);if(null==h)return null;if(0===h.rings.length||!h.rings.some((e=>e.length>0)))return this._logGeometryValidationWarnings(h.rings,"rings","ExtrudeSymbol3DLayer"),null;const b=O.geometryToRenderInfo(h,this._context.elevationProvider,this._context.renderCoordsHelper,r);this._logGeometryCreationWarnings(b,h.rings,"rings","ExtrudeSymbol3DLayer");const f=P.computeCentroid(h);if(null==f)return null;const A=new Array,v=new Array,E=p.create(),C=c.create(),D=d.create(),I=this._context.renderCoordsHelper.viewingMode===x.ViewingMode.Global;I||this._context.renderCoordsHelper.worldUpAtPosition(null,D),g.computeTranslationToOriginAndRotation(h.spatialReference,[f.x,f.y,0],C,this._context.renderCoordsHelper.spatialReference);const L=c.create();l.invert(L,C);const z=o.create();s.normalFromMat4(z,L);const{polygons:G,mapPositions:R,position:U}=b;for(const s of G){const e=s.count;if(this._context.clippingExtent&&(p.empty(E),p.expandWithBuffer(E,s.mapPositions),!p.intersectsClippingArea(E,this._context.clippingExtent)))continue;const r=a.earcut(s.mapPositions,s.holeIndices,3);if(0===r.length)continue;const o=r.length,l=6*e,c=l+o,h=m.newIndexArray(c),d=m.newIndexArray(o),g=u.newDoubleArray(3*l),b=u.newDoubleArray(3*l),f=u.newDoubleArray(3*l),x=u.newDoubleArray(l);k(U,R,r,s,g,f,b,x,h,d,this._getExtrusionSize(t),D,I),y.transformMat4(g,g,L);const _=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:i,layerUid:this._context.layer.uid}),S=new ce(g,f,B.compressNormals(b),x);A.push(F(this._materials[le.Main],h,h.length-d.length,S,n,_),F(this._materials[le.Bottom],d,0,S,n,_)),v.push(S.heights)}if(0===A.length)return null;const V=new T.Object3D({geometries:A,layerUid:this._context.layer.uid,graphicUid:i,isElevationSource:!0});V.transformation=C;const j=M.createMaterial(this.symbolLayer,{opacity:this._getLayerOpacity()}),N=null!=j?{baseMaterial:this._materials[le.Main],edgeMaterials:[j],properties:{mergeGeometries:!0,hasSlicePlane:this._context.slicePlaneEnabled}}:null,H=(e,t,n,r,i)=>te(e,t,n,r,i,v),W=new S.Graphics3DObject3DGraphicLayer(this,V,A,null,null,H,r,N);return W.alignedSampledElevation=b.sampledElevation,W.needsElevationUpdates=_.needsElevationUpdates3D(r.mode),W}}function F(e,t,n,r,i,a){const s=m.getZeroIndexArray(t.length),o=[[U.VertexAttribute.POSITION,new I.Attribute(r.positions,t,3,!0)],[U.VertexAttribute.NORMALCOMPRESSED,new I.Attribute(r.normals,t,2,!0)],[U.VertexAttribute.COLOR,new I.Attribute(i,s,4,!0)]];return new G.Geometry(e,o,r.elevation,z.ContentObjectType.Mesh,a,n)}function k(e,t,n,r,i,a,s,o,l,c,h,d,g){const p=n.length/3;let u=0,m=2*r.count;H(e,t,r.index,r.count,n,0,p,i,a,s,o,l,c,m,h,d,g);let y=2*r.count;m=0,q(i,a,o,s,u,r.pathLengths[0],r.count,y,l,m,h),y+=4*r.pathLengths[0],m+=2*r.pathLengths[0],u+=r.pathLengths[0];for(let b=1;b<r.pathLengths.length;++b)q(i,a,o,s,u,r.pathLengths[b],r.count,y,l,m,h),y+=4*r.pathLengths[b],m+=2*r.pathLengths[b],u+=r.pathLengths[b]}function H(e,t,n,r,i,a,s,o,l,c,d,g,p,u,m,y,b){h.copy(re,y);const f=m>0?1:-1;let x=3*n,_=0,S=3*_,A=r,P=3*A;for(let M=0;M<r;++M)b&&(re[0]=e[x],re[1]=e[x+1],re[2]=e[x+2],h.normalize(re,re)),o[S]=e[x],o[S+1]=e[x+1],o[S+2]=e[x+2],l[S]=t[x],l[S+1]=t[x+1],l[S+2]=t[x+2],c[S]=-f*re[0],c[S+1]=-f*re[1],c[S+2]=-f*re[2],d[_]=0,o[P]=e[x]+m*re[0],o[P+1]=e[x+1]+m*re[1],o[P+2]=e[x+2]+m*re[2],l[P]=t[x],l[P+1]=t[x+1],l[P+2]=t[x+2],c[P]=f*re[0],c[P+1]=f*re[1],c[P+2]=f*re[2],d[A]=m,S+=3,P+=3,x+=3,_+=1,A+=1;x=3*a,S=0,P=3*u;const v=m<0?se:ae,w=m<0?ae:se;for(let h=0;h<s;++h)p[S]=i[x+v[0]],p[S+1]=i[x+v[1]],p[S+2]=i[x+v[2]],g[P]=i[x+w[0]]+r,g[P+1]=i[x+w[1]]+r,g[P+2]=i[x+w[2]]+r,S+=3,P+=3,x+=3}function W(e,t,n,r,i,a,s){r[a]=r[s],s*=3,e[a*=3]=e[s],e[a+1]=e[s+1],e[a+2]=e[s+2],t[a]=t[s],t[a+1]=t[s+1],t[a+2]=t[s+2],n[a]=i[0],n[a+1]=i[1],n[a+2]=i[2]}const Z=d.create();function q(e,t,n,r,i,a,s,o,l,c,h){let d=i,g=i+1,p=i+s,u=i+s+1,m=o,y=o+1,b=o+2*a,f=o+2*a+1;h<0&&(d=i+s+1,u=i),c*=3;for(let x=0;x<a;++x)x===a-1&&(h>0?(g=i,u=i+s):(g=i,d=i+s)),$(e,d,g,p,Z),W(e,t,r,n,Z,m,d),W(e,t,r,n,Z,y,g),W(e,t,r,n,Z,b,p),W(e,t,r,n,Z,f,u),l[c++]=m,l[c++]=b,l[c++]=f,l[c++]=m,l[c++]=f,l[c++]=y,d++,g++,p++,u++,m+=2,y+=2,b+=2,f+=2}const J=d.create(),K=d.create(),Q=d.create(),X=d.create(),Y=d.create();function $(e,t,n,r,i){t*=3,n*=3,r*=3,h.set(J,e[t++],e[t++],e[t++]),h.set(K,e[n++],e[n++],e[n++]),h.set(Q,e[r++],e[r++],e[r++]),h.subtract(X,K,J),h.subtract(Y,Q,J),h.cross(i,Y,X),h.normalize(i,i)}const ee=d.create();function te(e,t,n,r,i,a){const s=e.stageObject,o=s.geometries,d=o.length,g="absolute-height"!==t.mode;let p=0;const u=s.transformation,m=l.invertOrIdentity(c.create(),u);for(let l=0;l<d;l+=2){const e=o[l];if(!R.isGeometryWithMapPositions(e))continue;const t=e.getMutableAttribute(U.VertexAttribute.POSITION).data,c=a[l/2],d=new C.SamplePosition(e.mapPositions),y=t.length/3;let b=0,f=!1,x=0;for(let a=0;a<y;a++){ee[0]=t[b],ee[1]=t[b+1],ee[2]=t[b+2],r(d,ie),g&&(x+=ie.sampledElevation),E.debugFlags.TESTS_DISABLE_OPTIMIZATIONS?(h.set(ne,d.array[d.offset],d.array[d.offset+1],ie.z+c[b/3]),null!=n&&i.toRenderCoords(ne,n,ne),h.transformMat4(ne,ne,m)):(h.set(ne,t[b],t[b+1],t[b+2]),h.transformMat4(ne,ne,u),i.setAltitude(ne,ie.z+c[b/3]),h.transformMat4(ne,ne,m)),t[b]=ne[0],t[b+1]=ne[1],t[b+2]=ne[2];const e=oe/i.unitInMeters;(Math.abs(ee[0]-t[b])>=e||Math.abs(ee[1]-t[b+1])>=e||Math.abs(ee[2]-t[b+2])>=e)&&(f=!0),d.offset+=3,b+=3}f&&(e.invalidateBoundingInfo(),s.geometryVertexAttributeUpdated(o[l],U.VertexAttribute.POSITION),o[l+1].invalidateBoundingInfo(),s.geometryVertexAttributeUpdated(o[l+1],U.VertexAttribute.POSITION)),p+=x/y}return p/d}const ne=d.create(),re=d.create(),ie=new _.SampleElevationInfo,ae=[0,2,1],se=[0,1,2],oe=.01;var le;!function(e){e[e.Main=0]="Main",e[e.Bottom=1]="Bottom"}(le||(le={}));class ce{constructor(e,t,n,r){this.positions=e,this.elevation=t,this.normals=n,this.heights=r}}e.Graphics3DExtrudeSymbolLayer=N,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
