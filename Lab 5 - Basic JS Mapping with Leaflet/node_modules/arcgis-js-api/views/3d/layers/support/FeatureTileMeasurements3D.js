/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/screenUtils","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/frustum","../../../../geometry/support/plane","../../../../geometry/support/triangle","../../../ViewingMode","./FeatureTileDescriptor3D","./FeatureTileVisibility3D","../../webgl-engine/lib/Camera"],(function(e,t,r,i,s,n,a,c,o,l,u,d){"use strict";class h{constructor(e){this._camera=new d.Camera,this._focusOnMap=[0,0],this._screenRect=s.create(),this._tileSize=e.tileSize,this._renderCoordsHelper=e.renderCoordsHelper,this._tilingScheme=e.tilingScheme,this._visibility=new u.FeatureTileVisibility3D(e.renderCoordsHelper)}begin(e,t,r){this._camera.copyFrom(e),this._surfaceElevation=r,this._focusOnMap[0]=t.x,this._focusOnMap[1]=t.y,s.fromValues(0,0,e.fullWidth,e.fullHeight,this._screenRect),this._visibility.begin(this._camera,r)}end(){this._visibility.end()}updateTile(e){e.measures.visibility=this._visibility.calculate(e),e.measures.distance=s.distance(e.extent,this._focusOnMap),e.measures.visibility!==l.Visibility.INVISIBLE&&this._updateScreenMeasure(e)}_updateScreenMeasure(e){const t=_,r=1<<t,i=e.measures.screenRect;s.empty(i);let n=0;const a=e.lij,c=a[0],l=c+t,d=a[1]<<t,h=a[2]<<t,p=this._tileSizeWithBias(e),g=p*p,f=this._camera,{frustum:y,viewport:b}=f;if(this._renderCoordsHelper.viewingMode===o.ViewingMode.Local||c>u.globalTileLevelThreshold){const t=S;this._tilingScheme.getExtent(a[0],a[1],a[2],t);const r=m,i=v,n=s.empty();for(let e=0;e<4;++e)this._toRenderCoords(t,A[e][0],A[e][1],i[e]),f.projectToScreen(i[e],r[e]),s.expandPointInPlace(n,r[e]);const c=u.isConvexHullOutsideOfFrustum(y,i,4),o=n[0]>b[2]||n[1]>b[3]||n[2]<b[0]||n[3]<b[1];if(c||o)return void(e.measures.shouldSplit=!1)}for(let s=0;s<r;s++)for(let t=0;t<r;t++)if(n+=this._computeScreenArea(l,d+s,h+t,i),n>g)return void(e.measures.shouldSplit=!0);e.measures.shouldSplit=!1}_tileSizeWithBias(e){return e.measures.visibility===l.Visibility.VISIBLE_WHEN_EXTENDED?this._tileSize*p:this._tileSize}_computeScreenArea(e,t,r,i){this._tilingScheme.ensureMaxLod(e);const s=S;this._tilingScheme.getExtent(e,t,r,s);const n=f;this._toRenderCoords(s,0,3,n[0]),this._toRenderCoords(s,2,3,n[1]),this._toRenderCoords(s,2,1,n[2]),this._toRenderCoords(s,0,1,n[3]);return this._computeTriangleScreenArea([n[0],n[1],n[2]],i)+this._computeTriangleScreenArea([n[2],n[1],n[3]],i)}_computeTriangleScreenArea(e,t){const i=this._camera.frustum[n.PlaneIndex.NEAR];let s=0,c=-1,o=-1;for(let r=0;r<3;++r){a.signedDistance(i,e[r])>0?(s++,-1===c&&(c=r)):-1===o&&(o=r)}if(0===s)return this._computeTriangleScreenAreaInside(e,t);if(1===s){const s=b,n=(c+1)%3,a=(c+2)%3,o=c;r.copy(s[0],e[n]),r.copy(s[1],e[a]),T(s[2],e[a],e[o],i);const l=this._computeTriangleScreenAreaInside(s,t);T(s[1],e[n],e[o],i);return l+this._computeTriangleScreenAreaInside(s,t)}if(2===s){const s=b,n=o;r.copy(s[0],e[n]);const a=(o+1)%3,c=(o+2)%3;return T(s[1],e[n],e[a],i),T(s[2],e[n],e[c],i),this._computeTriangleScreenAreaInside(s,t)}return 0}_computeTriangleScreenAreaInside(e,t){for(let r=0;r<3;r++)this._camera.projectToRenderScreen(e[r],y),this._camera.renderToScreen(y,m[r]),s.expand(t,m[r],t);return c.areaPoints2d(m[0],m[1],m[2])}_toRenderCoords(e,t,r,i){return g[0]=e[t],g[1]=e[r],g[2]=this._surfaceElevation,this._renderCoordsHelper.toRenderCoords(g,this._tilingScheme.spatialReference,i),i}}const _=2,p=5,m=[t.createScreenPointArray(),t.createScreenPointArray(),t.createScreenPointArray(),t.createScreenPointArray()],S=s.create(),g=i.create(),f=[i.create(),i.create(),i.create(),i.create()],y=t.createRenderScreenPointArray3(),b=[i.create(),i.create(),i.create()];function T(e,t,i,s){const n=a.signedDistance(s,t),c=a.signedDistance(s,i),o=Math.abs(c-n);r.scale(e,t,Math.abs(c)/o),r.scaleAndAdd(e,e,i,Math.abs(n)/o)}const v=[i.create(),i.create(),i.create(),i.create()],A=[[0,3],[2,3],[2,1],[0,1]];e.FeatureTileMeasurements3D=h,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
