/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","exports","../../../chunks/tslib.es6","../../../Color","../../../Graphic","../../../core/arrayUtils","../../../core/ByteSizeUnit","../../../core/Collection","../../../core/handleUtils","../../../core/has","../../../core/Logger","../../../core/MapUtils","../../../core/maybe","../../../core/PooledArray","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/scheduling","../../../core/typedArrayUtil","../../../core/unitUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat3","../../../core/libs/gl-matrix-2/factories/mat3f64","../../../core/libs/gl-matrix-2/math/mat4","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/factories/quatf64","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../chunks/vec42","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../core/support/UpdatingHandles","../../../geometry/projection/localLinearScaleFactors","../../../geometry/projection/projectBoundingSphere","../../../geometry/projection/projectBuffer","../../../geometry/projection/projectors","../../../geometry/projection/projectVectorToVector","../../../geometry/support/aaBoundingBox","../../../geometry/support/aaBoundingRect","../../../geometry/support/DoubleArray","../../../geometry/support/FloatArray","../../../geometry/support/Indices","../../../chunks/sphere","../../../geometry/support/UByteArray","../../../layers/LayerConstants","../../../layers/graphics/controllers/I3SOnDemandController","../../../layers/support/fieldUtils","../../../layers/support/SceneModification","../../../renderers/visualVariables/support/visualVariableUtils","../../../support/arcadeOnDemand","../../../support/basemapUtils","../../../symbols/Symbol3D","../../../symbols/support/unitConversionUtils","./I3SMeshViewLabeler","./I3SMeshViewPerformanceInfo","./I3SMeshWorkerHandle","./II3SMeshView3D","./SceneLayerWorker","./graphics/graphicUtils","./graphics/Labeler","./i3s/enums","./i3s/Highlights","./i3s/I3SAsyncElevationUpdater","./i3s/I3SCrossfadeHelper","./i3s/I3SGeometryUtil","./i3s/I3SIntersectionHandler","./i3s/I3SMaterialUtil","./i3s/I3SNode","./i3s/I3SOverrides","./i3s/I3SProjectionUtil","./i3s/I3SUtil","./i3s/IDBCache","./i3s/IDBMockCache","./i3s/LayerElevationProvider","./support/attributeUtils","./support/makeScheduleFunction","./support/symbolColorUtils","../support/debugFlags","../support/ElevationRange","../support/extentUtils","../support/orientedBoundingBox","../support/updatingProperties","../support/buffer/glUtil","../webgl-engine/collections/Component/SourceGeometry","../webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl","../webgl-engine/lib/BasisUtil","../webgl-engine/lib/edgeRendering/interfaces"],(function(e,t,i,r,s,a,o,n,l,d,h,c,u,_,g,p,f,m,y,b,v,I,M,C,x,E,O,R,S,A,w,T,F,D,N,V,P,U,j,H,L,G,B,k,W,q,z,K,$,Q,X,Y,J,Z,ee,te,ie,re,se,ae,oe,ne,le,de,he,ce,ue,_e,ge,pe,fe,me,ye,be,ve,Ie,Me,Ce,xe,Ee,Oe,Re,Se,Ae,we,Te){"use strict";const Fe="esri.views.3d.layers.I3SMeshView3D",De=()=>h.getLogger(Fe),Ne=[1,1,1,1];class Ve extends le.NodeCrossfadeMetaData{constructor(e,t,i,r,s,a,o,n,l){super(),this.node=e,this.featureIds=t,this.objectHandle=i,this.cachedRendererVersion=r,this.attributeInfo=s,this.material=a,this.textures=o,this.anchorIds=n,this.anchors=l,this.cachedElevationAnchors=null,this.cachedEdgeMaterials=new Array,this.edgeMemoryUsage=0}}var Pe;!function(e){e[e.CastShadows=4]="CastShadows",e[e.Pickable=5]="Pickable"}(Pe||(Pe={}));const Ue=23,je=100*o.ByteSizeUnit.MEGABYTES,He=t=>{let r=class extends t{constructor(...e){super(e),this._needsNormals=!0,this._updatingHandles=new w.UpdatingHandles,this._nodeId2Meta=new Map,this._nodeId2MetaReloading=new Map,this._i3sWasmLoaded=!1,this._snappingSourcesTrackers=[],this._hasLoadedPBRTextures=!1,this._asyncModuleLoading=0,this._addTasks=new Map,this._currentRenderer=null,this._rendererVersion=0,this._colorVariable=null,this._opacityVariable=null,this._rendererFields=null,this._symbologyFields=null,this._symbologyOverride=null,this._symbologyOverrideFields=null,this._symbolInfos=new Map,this._visibleGeometryChangedSchedulerHandle=null,this._hasComponentData=!1,this._hasVertexColors=!1,this._nodeColorOverride=null,this.updating=!0,this.holeFilling="auto",this._hasColors=!1,this._hasTextures=!1,this._hasData=!1,this.slicePlaneEnabled=!1,this._modifications=new Array,this.ignoresMemoryFactor=!1,this._layerUrl="",this._cacheKeySuffix=null,this._planetRadiusInGlobalMode=0,this._elevationTask=null,this._filters=[],this._arcade=null,this._tmpAttributeOnlyGraphic=new s(null,null,{}),this._crossfadeHelper=new le.I3SCrossfadeHelper(this)}get lodCrossfadeoutDuration(){return 0}get lodCrossfadeinDuration(){return 0}get lodCrossfadeUncoveredDuration(){return 0}get layerUid(){return this.i3slayer&&this.i3slayer.uid}get sublayerUid(){return null}get layerId(){return this.i3slayer&&this.i3slayer.id}get sublayerId(){return null}get contentVisible(){return!this.suspended&&this._controller?.rootNodeVisible}get legendEnabled(){return this.contentVisible&&!0===this.i3slayer?.legendEnabled}get updatingProgressValue(){return this._controller?.updatingProgress??0}get hasTexturesOrVertexColors(){return this._hasData?this._hasTextures||this._hasColors?"yes":"probably-not":"unknown"}get rendererTextureUsage(){return pe.rendererNeedsTextures(this._currentRenderer)?this._usePBR||this._hasLoadedPBRTextures?ae.TextureUsage.AllTexturesPBR:ae.TextureUsage.AllTextures:this._usePBR||this._hasLoadedPBRTextures?ae.TextureUsage.GeometryTexturesPBR:ae.TextureUsage.GeometryTextures}get elevationOffset(){const e=null!=this.i3slayer?this.i3slayer.elevationInfo:null;if(null!=e&&"absolute-height"===e.mode){const t=y.getMetersPerVerticalUnitForSR(this.i3slayer.spatialReference),i=Y.getMetersPerUnit(e.unit);return(e.offset??0)*i/t}return 0}get elevationInfo(){const e=null!=this.i3slayer?this.i3slayer.elevationInfo:null;if(null==e)return new it(te.ElevationMode.Absolute,0);const t=y.getMetersPerVerticalUnitForSR(this.i3slayer.spatialReference),i=Y.getMetersPerUnit(e.unit),r=(e.offset??0)*i/t;switch(e.mode){case"absolute-height":return new it(te.ElevationMode.Absolute,r);case"relative-to-ground":return new it(te.ElevationMode.RelativeToGround,r);case"on-the-ground":return new it(te.ElevationMode.OnTheGround,0);default:return new it(te.ElevationMode.Absolute,0)}}get supportedTextureEncodings(){return ce.getSupportedEncodings(this.view._stage.renderView.capabilities)}get uncompressedTextureDownsamplingEnabled(){const e=this.view?.qualitySettings.sceneService.uncompressedTextureDownsamplingEnabled,t=0==(this.supportedTextureEncodings&ae.TextureEncoding.DDS_S3TC);return e&&t}get clientGeometry(){return this.i3sOverrides.geometryOverrides}get elevationRange(){const e=this._nodeId2Meta,t=new Ce.ElevationRange;for(const i of e.values()){if(null==i)continue;const{node:{serviceMbsInIndexSR:e}}=i,[r,s,a,o]=e;t.expandElevationRangeValues(a-o,a+o)}return t.elevationRangeValid?t:null}get fullExtent(){return this.i3slayer.fullExtent}initialize(){const t=d("enable-feature:idb-mock-cache");this._idbCache=t?new me.IDBMockCache(this.view,t):new fe.IDBCache("esri-scenelayer-cache","geometries"),this._preLoadBasis(),this.addResolvingPromise(this.i3slayer.indexInfo);const i=this.view.resourceController,r=i.memoryController;this.i3sOverrides=new _e.I3SOverrides({view:this.view,layer:this.i3slayer,memoryController:r}),this._worker=new ee.I3SMeshWorkerHandle(ve.makeScheduleFunction(i)),this.addResolvingPromise(this._worker.promise);const s=this.i3slayer.store;this._worker.setLegacySchema(this.uid,s.defaultGeometrySchema),pe.checkSceneLayerValid(this.i3slayer),pe.checkSceneLayerCompatibleWithView(this.i3slayer,this.view),this._layerUrl=this.i3slayer.parsedUrl.path,this._controller=new W({layerView:this,worker:this._worker}),this._gpuMemoryEstimate=0,this._texMemoryEstimate=0,this._geoMemoryEstimate=0,this._stage=this.view._stage,this._collection=this._stage.renderView.componentObjectCollection,this.resetHighlights();const a=s.defaultGeometrySchema;if(this._isIntegratedMesh||!a)this._hasComponentData=!1;else{const e=a.featureAttributes;this._hasComponentData=!!(e&&e.faceRange&&e.id)}this._hasVertexColors=null!=(a?.vertexAttributes.color??null)&&!this.i3slayer.cachedDrawingInfo?.color,this._isIntegratedMesh||(this._edgeView=this._stage.renderer.ensureEdgeView());const o=this.view.resourceController.memoryController.newCache(`sl-${this.uid}`,(e=>this._deleteComponentObject(e)));this._memCache=o;const n=this._controller,l=this._nodeId2Meta,h=this._nodeId2MetaReloading,c=e=>{const t=n.index;if(!t)return;const i=t.rootNode;if(!i)return;const r=t=>{const i=t.index,r=l.get(i)||h.get(i);return e(t,r?.objectHandle??null)};t.traverse(i,r)};this._intersectionHandler=new he.I3SIntersectionHandler({layerUid:this.layerUid,sublayerUid:this.sublayerUid,collection:this._collection,slicePlaneEnabled:this.slicePlaneEnabled,isGround:this._isIntegratedMesh,traverseNodeHierarchy:c}),this._updatingHandles.add((()=>this.layerUid),(e=>this._intersectionHandler.layerUid=e)),this._updatingHandles.add((()=>this.sublayerUid),(e=>this._intersectionHandler.sublayerUid=e)),this._elevationProvider=new ye.LayerElevationProvider({view:this.view,layerElevationSource:this,intersectionHandler:this._intersectionHandler}),this._hasLoadedPBRTextures=this._usePBR,this._updatingHandles.add((()=>this.view.clippingArea),(()=>this._clippingAreaChanged()),p.initial),this._updatingHandles.add((()=>this.fullOpacity),(e=>this._opacityChange(e))),this._updatingHandles.add((()=>this.slicePlaneEnabled),(e=>this._slicePlaneEnabledChange(e))),this._updatingHandles.add((()=>this.elevationOffset),((e,t)=>{this._reloadAll(t),this._controller.invalidateVisibilityObbs()})),this._updatingHandles.add((()=>this.elevationInfo),((e,t)=>this._elevationInfoChanged(e,t)),p.initial),this._updatingHandles.add((()=>!this.suspended&&this.elevationInfo.mode!==te.ElevationMode.Absolute),((e,t)=>{e?this.addHandles(this.view.basemapTerrain.on("elevation-change",(({extent:e})=>this._ensureElevationTask().addExtent(e))),at):t&&this.removeHandles(at)}),p.initial),this._updatingHandles.add((()=>this._usePBR),(e=>this._updatePBR(e)));const _=()=>{this._reloadAll(),this.clearMemCache()};this._updatingHandles.add((()=>this.rendererTextureUsage),_),this._updatingHandles.add((()=>this.uncompressedTextureDownsamplingEnabled),_),this._updatingHandles.add((()=>this.contentVisible),(e=>this._contentVisibleChanged(e)),p.initial),this._updatingHandles.add((()=>this.i3slayer.labelsVisible),(()=>this._labelingChanged()),p.initial),this._updatingHandles.add((()=>this.i3slayer.labelingInfo),(()=>this._labelingChanged()),p.initial),this._updatingHandles.add((()=>this._modifications),(()=>this._modificationsChanged()),p.initial),this.addHandles([p.watch((()=>Me.debugFlags.I3S_TREE_SHOW_TILES),(t=>{if(t&&!this._treeDebugger){const t=this._controller.crsIndex;new Promise(((t,i)=>e(["./support/I3STreeDebugger"],t,i))).then((({I3STreeDebugger:e})=>{!this._treeDebugger&&Me.debugFlags.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new e({lv:this,view:this.view,nodeSR:t}))}))}else t||Me.debugFlags.I3S_TREE_SHOW_TILES||(this._treeDebugger=u.destroyMaybe(this._treeDebugger))}),p.initial),p.watch((()=>Me.debugFlags.I3S_SHOW_MODIFICATIONS),(()=>this._showModifications()),p.initial)]),this._cacheKeySuffix=pe.getCacheKeySuffix(this.i3slayer.spatialReference,this.view.renderSpatialReference),this._idbCache.init().catch((e=>De().warn(`Failed to initialize IndexedDB cache: ${e}`)));const{view:g}=this,{viewingMode:f,renderCoordsHelper:m}=g;this._planetRadiusInGlobalMode="local"===f?0:m.referenceEllipsoid.radius}destroy(){this._clearAddTasks(),this._elevationTask=u.destroyMaybe(this._elevationTask),this.i3sOverrides=u.destroyMaybe(this.i3sOverrides),this._elevationProvider&&(this._elevationProvider.objectsChanged(this.getVisibleObbs()),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this._intersectionHandler&&(this._stage.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null);const e=this._worker;e&&(e.destroyContext(this.uid).then((()=>e.destroy())),this._worker=null),this._removeAllNodeDataFromStage(),this._memCache=u.destroyMaybe(this._memCache),this._collection=null,this._stage=null,this._edgeView=null,this._labeler=u.destroyMaybe(this._labeler),this._treeDebugger=u.destroyMaybe(this._treeDebugger),this._controller=u.destroyMaybe(this._controller),this._highlights.destroy(),this._nodeId2Meta.clear(),this._nodeId2MetaReloading.clear(),this._crossfadeHelper=u.destroyMaybe(this._crossfadeHelper),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null),this._updatingHandles=u.destroyMaybe(this._updatingHandles)}_memEstimateTextureAdded(e){const t=e.memoryEstimate;return this._gpuMemoryEstimate+=t,this._texMemoryEstimate+=t,t}_memEstimateTextureRemoved(e){if(null!=e){const t=e.memoryEstimate;this._gpuMemoryEstimate-=t,this._texMemoryEstimate-=t}}_memEstimateGeometryAdded(e){const t=this._collection.getObjectGPUMemoryUsage(e);return this._gpuMemoryEstimate+=t,this._geoMemoryEstimate+=t,t}_memEstimateGeometryRemoved(e){const t=this._collection.getObjectGPUMemoryUsage(e);this._gpuMemoryEstimate-=t,this._geoMemoryEstimate-=t}isNodeLoaded(e){return this._nodeId2Meta.has(e)}isNodeReloading(e){return this._nodeId2MetaReloading.has(e)}get usedMemory(){let e=null!=this._labeler?this._labeler.usedMemory:0;return this._nodeId2Meta.forEach((t=>e+=null!=t?t.node.memory:0)),this._nodeId2MetaReloading.forEach((t=>e+=null!=t?t.node.memory:0)),e}get unloadedMemory(){return(null!=this._controller?this._controller.unloadedMemoryEstimate:0)+(null!=this._labeler?this._labeler.unloadedMemoryEstimate:0)}_labelingChanged(){if(!(se.areLabelsVisible(this.i3slayer)&&this._supportsLabeling))return void(null!=this._labeler&&(this._labeler.destroy(),this._labeler=null));if(null!=this._labeler)return;const e=new J({view:this.view,layer:this.i3slayer,collection:this._collection,overrides:this.i3sOverrides});this._nodeId2Meta.forEach((t=>null!=t&&this._addMetaToLabeler(e,t))),this._labeler=e}_loadAsyncModule(e){return++this._asyncModuleLoading,e.then((e=>(--this._asyncModuleLoading,e)),(e=>{throw--this._asyncModuleLoading,e}))}_modificationsChanged(){if(!this._i3sWasmLoaded&&this.hasModifications)return this._i3sWasmLoaded=ie.initialize().then((()=>{this._i3sWasmLoaded=!0,this._modificationsChanged(),this.notifyUpdate()})),void this.notifyUpdate();if(!0!==this._i3sWasmLoaded)return;const e=this.uid,t=this.i3slayer.spatialReference;this._worker.setModifications(e,this._layerClippingArea,this._modifications,t);const i=ee.toWasmModification(this._layerClippingArea,this._modifications,t);ie.setModificationsSync({context:e,modifications:i,isGeodetic:t.isGeographic}),this._controller.modificationsChanged();const r=this.hasModifications?new _:null;this._nodeId2Meta.forEach(((e,t)=>{null==e?(this._nodeId2Meta.delete(t),this._controller.updateLoadStatus(t,!1)):e.node.hasModifications?(this._nodeId2Meta.delete(t),this._nodeId2MetaReloading.set(t,e)):null!=r&&r.push(e.node)})),this.notifyChange("elevationRange"),null!=r&&this._nodeId2MetaReloading.forEach((e=>r.push(e.node))),null!=r&&r.length>0&&(this.updateNodeModificationStatus(r),r.forAll((e=>{if(e.imModificationImpact!==ue.NodeIMModificationImpact.Culled){const t=this._nodeId2Meta.get(e.index);this._controller.invalidateGeometryVisibility(e.index),null!=t?(this._nodeId2Meta.delete(e.index),this._nodeId2MetaReloading.set(e.index,t),this.notifyChange("elevationRange")):this._nodeId2Meta.has(e.index)&&(this._nodeId2Meta.delete(e.index),this._controller.updateLoadStatus(e.index,!1))}}))),this.clearMemCache(),this._controller.restartNodeLoading(),this._showModifications()}_showModifications(){if(null!=this._modificationGraphics&&(this.view.graphics.removeMany(this._modificationGraphics),this._modificationGraphics=null),!Me.debugFlags.I3S_SHOW_MODIFICATIONS||0===this._modifications.length)return;const e={clip:[227,227,79,.8],mask:[227,139,79,.8],replace:[139,227,79,.8]},t={type:"simple-fill",outline:{color:[255,255,255],width:1}};this._modificationGraphics=new Array;for(const i of this._modifications){const r=i.geometry;r.spatialReference=this.i3slayer.spatialReference;const a={...t,color:e[i.type]};this._modificationGraphics.push(new s({geometry:r,symbol:a}))}this.view.graphics.addMany(this._modificationGraphics)}_addMetaToLabeler(e,t){e.addNodeMeta(t,((e,t)=>this._createAttributes(e,t)))}_contentVisibleChanged(e){e?(this.view.elevationProvider.register(this._elevationContext,this._elevationProvider),this._stage.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler)):(this._removeAllNodeDataFromStage(),this.view.elevationProvider&&this.view.elevationProvider.unregister(this._elevationProvider),this._stage.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler))}getLoadedAttributes(e){const t=this._nodeId2Meta.get(e);if(null!=t?.attributeInfo)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodeId2Meta.get(e);if(null!=t?.attributeInfo)return t.attributeInfo.attributeData}setAttributeData(e,t){const i=this._nodeId2Meta.get(e);null!=i?.attributeInfo&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const r=this._nodeId2Meta.get(e);null!=r&&(await this.i3sOverrides.applyAttributeOverrides(r.featureIds,t,i,this._controller.requiredAttributes),r.attributeInfo=t,this._controller.reschedule((()=>this._attributeValuesChanged(r)),i).catch((e=>{g.isAbortError(e)||De().warn("Error while updating attribute values. Layer might not display correctly.",e)})))}_attributeValuesChanged(e){e.cachedRendererVersion=this._getInvalidRendererVersion(),e.filteredIds=null,null!=this._labeler&&this._labeler.setNodeMetaAttributes(e,((e,t)=>this._createAttributes(e,t))),this._updateEngineObject(e)}clearMemCache(){null!=this._memCache&&this._memCache.clear()}getVisibleNodes(){const e=new Array;return this._nodeId2Meta.forEach((t=>null!=t&&e.push(t.node))),e}getVisibleObbs(){const e=new Array;return this._nodeId2Meta.forEach((t=>{if(null!=t){const i=this.getNodeComponentObb(t.node);null!=i&&e.push(i)}})),e}getNodeComponentObb(e){const t=this._nodeId2Meta.get(e.index)??this._nodeId2MetaReloading.get(e.index);return null!=t?this._collection.getComponentObb(t.objectHandle):null}getLoadedNodeIndices(e){this._nodeId2Meta.forEach(((t,i)=>e.push(i))),this._nodeId2MetaReloading.forEach(((t,i)=>e.push(i)))}_preLoadBasis(){!d("disable-feature:i3s-basis")&&0!=(this.supportedTextureEncodings&ae.TextureEncoding.Basis)&&this.i3slayer.textureSetDefinitions?.some((e=>e.formats.some((e=>"basis"===e.format||"ktx2"===e.format))))&&we.loadBasis()}_getVertexBufferLayout(e,t){const i={hasTexture:Qe(e.params.material),hasNormals:t.normal,hasRegions:t.uvRegion};return Re.glLayout(Se.createVertexBufferLayout(this._getGeometryParameters(i)))}_getObjectIdField(){return this.i3slayer.objectIdField||k.fallbackObjectIDAttribute}_getGlobalIdField(){return this.i3slayer.associatedLayer?.globalIdField}_findGraphicNodeAndIndex(e){const t=be.attributeLookup(this.i3slayer.fieldsIndex,e.attributes,this._getObjectIdField());let i=null;return c.someMap(this._nodeId2Meta,(e=>{if(null==e)return!1;const r=e.featureIds.indexOf(t);return-1!==r&&(i={node:e.node,index:r},!0)})),i}_getGraphicIndices(e,t){const i=this._nodeId2Meta.get(e.index);if(null==i)return[];const r=[],s=this._getObjectIdField(),a=this.i3slayer.fieldsIndex;for(const o of t){const e=be.attributeLookup(a,o.attributes,s),t=i.featureIds.indexOf(e);-1!==t&&r.push(t)}return r}whenGraphicBounds(e){const t=this._findGraphicNodeAndIndex(e);if(!t)return Promise.reject();const i=this._getAABB(t.node.index,t.index);return null==i?Promise.reject():Promise.resolve({boundingBox:i,screenSpaceObjects:[]})}getAABBFromIntersectorTarget(e){return null==e.nodeIndex||null==e.componentIndex?null:this._getAABB(e.nodeIndex,e.componentIndex)}_getAABB(e,t){const i=this._nodeId2Meta.get(e);if(null==i?.featureIds||t>=i.featureIds.length)return null;const r=i.objectHandle,s=de.boundingBoxCornerPoints(t,this._collection,r,j.newDoubleArray(24),0),a=this.view.renderSpatialReference,o=this.view.spatialReference;if(!D.projectBuffer(s,a,0,s,o,0,8))return null;const n=P.empty();return P.expandWithBuffer(n,s,0,8),n}whenGraphicAttributes(e,t){return pe.whenGraphicAttributes(this.i3slayer,e,this._getObjectIdField(),t,(()=>[...this._nodeId2Meta.values()].filter(a.isSome)))}getGraphicFromIntersectorTarget(e){if(null==e.nodeIndex||null==e.componentIndex)return null;const t=this._nodeId2Meta.get(e.nodeIndex);return null==t?.featureIds||e.componentIndex>=t.featureIds.length?null:this._createGraphic(e.componentIndex,t)}_getCacheKey(e){return`${this._layerUrl}/v${Ue}/${e}${this._cacheKeySuffix}`}_getMemCacheKey(e,t=this.elevationOffset){return e+"#"+t}get _idbCacheEnabled(){return!this._controller.disableIDBCache&&!this.hasModifications&&0===this.elevationOffset&&null!=this._cacheKeySuffix}loadCachedGPUData(e){return null!=this._memCache?this._memCache.pop(this._getMemCacheKey(e)):null}deleteCachedGPUData(e){null!=e&&this._deleteComponentObject(e)}_cacheGPUData(e,t=this.elevationOffset){if(null==this._memCache)return void this._deleteComponentObject(e);const i=this._controller.indexDepth-e.node.level;this._memCache.put(this._getMemCacheKey(e.node.index,t),e,e.node.memory,i)}loadMissingTextures(e,t,i,r){const s=e?.filter(((e,i)=>{if(0==(e.usage&this.rendererTextureUsage))return!1;if(null==t)return!0;const r=ce.selectEncoding(e.encodings,this.supportedTextureEncodings),s=t[i];return!!(null==s?.data||r&&s.encoding!==r.encoding)}))??[];return 0===s.length?Promise.resolve(!1):i(s,r).then((i=>{let r=0;for(let s=0;s<e.length;s++)r<i.length&&i[r].id===e[s].id&&(t[s]=i[r],r++);return!0}))}loadCachedNodeData(e,t,i){return this._idbCacheEnabled?this._idbCache.get(this._getCacheKey(e.id),t).then((r=>null==r?null:r.nodeVersion!==e.version?(this._idbCache.remove(this._getCacheKey(e.id)),null):(this.elevationInfo.mode===te.ElevationMode.Absolute&&(e.geometryObbInRenderSR=Ee.Obb.fromData(r.geometryObbData)),this.loadMissingTextures(r.requiredTextures,r.textureData,i,t).then((i=>(i&&this._idbCache.initialized&&null!=r.textureData&&(r.byteSize=Je(r.transformedGeometry,r.textureData),r.textureData.every(Ye)&&Ze(e,r)&&this._idbCache.put(this._getCacheKey(e.id),r).catch((t=>De().warn(`Failed to update node with textures in IndexedDB cache: ${e.id}: ${t}`)))),g.throwIfAborted(t),r)))))):Promise.resolve(null)}addNode(e,t,i){return Xe(t)?null==t.geometryBuffer?(this._addNodeMeta(e.index,null),Promise.resolve()):this._addData(e,t.attributeDataInfo,(()=>this._transformNode(e,t,i).then((r=>this._safeReschedule((()=>{if(null==r)return e.hasModifications=!1,this._addCachedNodeData(e,null,i);e.hasModifications=r.transformedGeometry.hasModifications;const{obb:s,componentOffsets:a,featureIds:o,anchorIds:n,anchors:l,transformedGeometry:d}=r,h=this._controller.crsIndex,c=this.view.renderSpatialReference,u=ge.computeGlobalTransformation(e.serviceMbsInIndexSR,this.elevationOffset,h,c),_=O.set(rt,s.center.x,s.center.y,s.center.z);O.transformMat4(_,_,u);const g=new Ee.Obb(_,[s.extents.x,s.extents.y,s.extents.z],E.fromValues(s.orientation.x,s.orientation.y,s.orientation.z,s.orientation.w));this.elevationInfo.mode===te.ElevationMode.Absolute&&(e.geometryObbInRenderSR=g),t.geometryData.componentOffsets=a,o&&(t.geometryData.featureIds=Array.from(o)),t.geometryData.anchorIds=n,t.geometryData.anchors=l;const p={nodeVersion:e.version,geometryData:t.geometryData,requiredTextures:t.requiredTextures,textureData:t.textureData,transformedGeometry:d,globalTrafo:u,geometryObbData:g.data,byteSize:Je(d,t.textureData)};if(this._idbCacheEnabled&&this._idbCache.initialized&&Ze(e,p)){const t=null!=p.textureData?p.textureData.map((e=>Ye(e)?e:null)):null;this._idbCache.put(this._getCacheKey(e.id),{...p,textureData:t}).catch((t=>De().warn(`Failed to store node in IndexedDB cache: ${e.id}: ${t}`)))}return this._addCachedNodeData(e,p,i)}),i))))):Promise.reject()}getElevationRange(e){const t=new Ce.ElevationRange,i=this._controller,{index:r}=i;if(!r)return t;const{rootNode:s}=r;if(!s)return t;const a=this._nodeId2Meta,o=e[3],n=i.viewportQueries,l=this._planetRadiusInGlobalMode,{view:d}=this,{renderCoordsHelper:h}=d,c=h.referenceEllipsoid.radius,u=this._collection,_=i=>{const{childrenLoaded:r}=i;if(0===r)return!1;const s=n.getAndUpdateVisibilityObbInRenderSR(i);let d=null,_=-1;if(s){if(_=s.radius,!s.intersectSphereWithMBS(e,_))return!1}else d=n.getServiceMbsInRenderSR(i),d&&(_=d[3]);if(_>=0&&o>=1*_)return null!=s?lt(t,s,l):null!=d&&d[3]>=0&&dt(t,d,l),!1;const g=nt;if(g.elevationRangeMin=1/0,g.elevationRangeMax=-1/0,(null!=s||null!=d)&&(null!=s?lt(g,s,l):null!=d&&dt(g,d,l),g.elevationRangeMin>=t.elevationRangeMin&&g.elevationRangeMax<=t.elevationRangeMax))return!1;const p=a.get(i.index);if(p){const{geometryObbInRenderSR:r}=i;if(!r||r.intersectSphereWithMBS(e)){if(r){if(o>0*r.radius)return lt(t,r,l),!1}const{objectHandle:e}=p,i=u.getObjectTransform(e),s=h.getAltitude(i.position);u.expandRangeWithComponentObjectElevationRange(e,s,c,t)}}return r-(p?1:0)>0};return r.traverse(s,_),t}computeVisibilityObb(e){return pe.computeVisibilityObb(e,this.view.renderSpatialReference,this._controller.crsIndex,this.i3slayer.spatialReference,this.elevationOffset,this._modifications,this.view.renderCoordsHelper.sphericalPCPF)}_transformNode(e,t,i){const r=t.geometryData.geometries??[],s=new Array(r.length);for(let m=0;m<r.length;++m)s[m]=this._getVertexBufferLayout(r[m],t.geometryDescriptor);const a=e.serviceMbsInIndexSR,o=this.elevationOffset,n=this._controller.crsIndex,l=this._controller.crsVertex,d=this.view.renderSpatialReference,h=ge.getLocalOrigin(a,o,n),c=ge.computeGlobalTransformation(a,o,n,d),u=N.getProjectorName(n,l),_=N.getProjectorName(l,d);if(null==u||null==_)return Promise.resolve(null);const g=this.i3slayer.normalReferenceFrame,p=t.normalReferenceFrame??g??"none",f={context:this.uid,geometryBuffer:t.geometryBuffer,geometryData:t.geometryData,geometryDescriptor:t.geometryDescriptor,layouts:s,localOrigin:h,globalTrafo:c,mbs:a,obbData:e.serviceObbInIndexSR?.data,elevationOffset:o,needNormals:this._needsNormals&&this._controller.isMeshPyramid,normalReferenceFrame:p,indexToVertexProjector:u,vertexToRenderProjector:_};return this._worker.invoke(f,i)}get _supportsNodeCrossFading(){return!this.view?._stage?.renderer.shadowsEnabled}get nodeCrossfadingEnabled(){return this._supportsNodeCrossFading&&(this.lodCrossfadeinDuration>0||this.lodCrossfadeoutDuration>0||this.lodCrossfadeUncoveredDuration>0)}get nodeFadeoutEnabled(){return this._supportsNodeCrossFading&&this.lodCrossfadeoutDuration>0}_setNewNodeOpacity(e){const t=this.nodeCrossfadingEnabled?0:this.fullOpacity;this._setNodeOpacity(e,t)}addCachedGPUData(e,t,i){if(this.elevationInfo.mode===te.ElevationMode.Absolute&&(e.geometryObbInRenderSR=this._collection.getComponentObb(t.objectHandle).clone()),!this._controller.isGeometryVisible(e))return void this._cacheGPUData(t);null!=this._labeler&&this._addMetaToLabeler(this._labeler,t);const r=e.index;this._addNodeMeta(r,t),this.updateNodeState(r,i),this._collection.setObjectVisibility(t.objectHandle,!0),this._updateMaterial(t),this._setNewNodeOpacity(t),this.elevationInfo.mode!==te.ElevationMode.Absolute&&this._ensureElevationTask().schedule(r),this._updateEngineObject(t),this._highlights.objectCreated(t),null!=this._treeDebugger&&this._treeDebugger.update()}addCachedNodeData(e,t,i,r){return this._addData(e,i,(()=>this._addCachedNodeData(e,t,r)))}async deleteCachedNodeData(e){if(this._idbCacheEnabled)return this._idbCache.remove(this._getCacheKey(e))}async _addCachedNodeData(e,t,i){if(!this.contentVisible||!this._controller.isGeometryVisible(e))return void this._removeNodeStageData(e.index,this.elevationOffset,this._nodeId2MetaReloading);if(null==t)return void this._addNodeMeta(e.index,null);const r=this._addTasks.get(e.index),{geometryData:s,transformedGeometry:a,globalTrafo:o}=t;await this.i3sOverrides.applyAttributeOverrides(s.featureIds,r.attributeInfo,i,this._controller.requiredAttributes);const n=null!=t.textureData?t.textureData.filter((e=>null!=e&&0!=(e.usage&this.rendererTextureUsage))):[];!d("disable-feature:i3s-basis")&&n.some((e=>null!=e&&(e.encoding===ae.TextureEncoding.Basis||e.encoding===ae.TextureEncoding.KTX2)))&&await we.loadBasis(),e.memory=0;const{componentOffsets:l,geometries:h,featureIds:c,anchorIds:u,anchors:_}=s,g=this._collection,p=h[0],{layout:f,indices:m,interleavedVertexData:y,positionData:b,hasColors:v}=a,{material:E,geometryParameters:S}=this._materialParameters(p,f),w=l||new Uint32Array([0,m?m.length:y.byteLength/f[0].stride]),F={vertices:{data:y,count:y.byteLength/f[0].stride,layoutParameters:S},positionData:{positions:H.compactFloatArray(b.data),indices:L.compactIndices(b.indices)},indices:m,componentOffsets:w},D=p.transformation?x.clone(p.transformation):x.create();C.multiply(D,o,D);const N=C.getTranslation(R.create(),D),P=I.fromMat4(M.create(),D),U=this.view.renderSpatialReference,j=this.view.basemapTerrain.spatialReference,G=Ee.Obb.fromData(t.geometryObbData).center,B=[1,1,1];T.localLinearScaleFactors(G,U,B,j)||De().errorOnce("Unsupported coordinate system for IM overlay");const k=R.create();V.projectVectorToVector(G,U,k,j);const W=M.create();I.invert(W,P);const q=R.create();O.transformMat3(q,O.sub(q,G,N),W);const z=k[0]-q[0]*B[0],K=k[1]-q[1]*B[1],$=g.createObject({toMapSpace:A.fromValues(z,K,B[0],B[1]),geometry:F,obb:Ee.Obb.fromData(t.geometryObbData),transform:{position:N,rotationScale:P}}),Q=S.textureCoordinates===Ae.TextureCoordinateAttributeType.Atlas,{textures:X,texturePromise:Y}=this._initMaterialAndTextures($,E,n,Q);e.memory+=this._memEstimateGeometryAdded($),e.memory+=X.reduce(((e,t)=>e+(null!=t?this._memEstimateTextureAdded(t):0)),0);const J=!!E.hasParametersFromSource,Z="blend"!==E.alphaMode&&E.metallicRoughness.baseColorFactor[3]>=1,ee=new Ve(e,c,$,this._getInvalidRendererVersion(),r.attributeInfo,{hasParametersFromSource:J,isOpaque:Z},X,u,_);r.meta=ee,!this._hasTextures&&t.requiredTextures?.some((({usage:e})=>0!=(e&ae.TextureUsage.ColorTextures)))&&(this._hasTextures=!0),this._hasData=!0,this._hasColors=this._hasColors||v,this._hasTextures=this._hasTextures||!!e.resources.texture,this.notifyChange("hasTexturesOrVertexColors");const te=this.slicePlaneEnabled;return Promise.all([this._addOrUpdateEdgeRendering(ee),Y]).then((([t,r])=>(null!=t&&t.updateObjectVisibility(ee.objectHandle,!1).catch((e=>Le(e,this.i3slayer.title))),this._safeReschedule((()=>{const i=this._addTasks.get(e.index);if(!i)return;if(this._addNodeMeta(e.index,ee),i.meta=null,!this.contentVisible)return void this._removeNodeStageData(e.index,this.elevationOffset);g.setObjectVisibility($,!0),null!=t&&t.updateObjectVisibility(ee.objectHandle,!0).catch((e=>Le(e,this.i3slayer.title))),ee.attributeInfo=i.attributeInfo;const r=ee.cachedRendererVersion!==this._rendererVersion,s=te!==this.slicePlaneEnabled;this._updateElevationOffsets(ee);const a=ee.elevationOffsets;this._updateComponentData(ee);const o=this._applyFiltersToNode(ee);(r||null!=t&&(s||o||a))&&this._addOrUpdateEdgeRendering(ee),null!=this._labeler&&this._addMetaToLabeler(this._labeler,ee),this._visibleGeometryChanged(ee,Ge.ADD),this._highlights.objectCreated(ee),this._updateMaterial(ee),this._setNewNodeOpacity(ee),null!=this._treeDebugger&&this._treeDebugger.update()}),i)))).catch((e=>{throw null!=r.meta&&(this._cacheGPUData(r.meta),r.meta=null),e}))}_addNodeMeta(e,t){if(this._removeNodeStageData(e,this.elevationOffset,this._nodeId2MetaReloading),this._nodeId2Meta.has(e)){De().error("Removing duplicated node");const t=this._nodeId2Meta.get(e);null!=t&&this._deleteComponentObject(t)}else this._controller.updateLoadStatus(e,!0);null!=t&&(t.lodCrossfadeProgress=null,this.nodeCrossfadingEnabled&&tt(t.cachedEdgeMaterials,0)),this._nodeId2Meta.set(e,t),this.notifyChange("elevationRange")}_updateElevationOffsets(e){const t=this.view.renderSpatialReference,i=this._controller.crsIndex,r=this.elevationInfo,s=this.view.basemapTerrain,a=s.spatialReference,o=r.mode;if(null==t||null==a||o===te.ElevationMode.Absolute)return void(e.elevationOffsets=null);const n=this._collection.getObjectTransform(e.objectHandle);e.elevationOffsets=e.elevationOffsets??[];const l=rt,d=st,h=o===te.ElevationMode.OnTheGround,c=this.view.renderCoordsHelper,u=e.featureIds.length,_=(()=>{if(e.cachedElevationAnchors)return e.cachedElevationAnchors;const r=j.newDoubleArray(3*u);e.cachedElevationAnchors=r;for(let s=0;s<u;s++){const o=3*s,h=e.anchorIds?.indexOf(s)??-1;e.anchors&&h>=0?(O.set(l,e.anchors[3*h],e.anchors[3*h+1],e.anchors[3*h+2]),O.add(l,l,G.getCenter(e.node.serviceMbsInIndexSR)),V.projectVectorToVector(l,i,l,a),r[o]=l[0],r[o+1]=l[1],r[o+2]=c.getAltitude(l)):(this._collection.getComponentAabb(e.objectHandle,s,d,!0),O.set(l,(d[0]+d[3])/2,(d[1]+d[4])/2,d[2]),O.transformMat3(l,l,n.rotationScale),O.add(l,l,n.position),r[o+2]=c.getAltitude(l),V.projectVectorToVector(l,t,l,a),r[o]=l[0],r[o+1]=l[1])}return r})(),g=r.offset,p=e.elevationOffsets,f=(e,t)=>{const i=h?_[3*e+2]:0;p[e]=g+(null!=t?t-i:0)};s.getElevations(_,u,f)}_ensureElevationTask(){return null!=this._elevationTask||(this._elevationTask=new ne.I3SAsyncElevationUpdater(this.view.resourceController.scheduler,(e=>{const t=this._controller.updateElevationChanged(e,this.view.basemapTerrain.spatialReference);return null!=t?t.filterInPlace((e=>null!=this._nodeId2Meta.get(e))):null}),(e=>{const t=this._nodeId2Meta.get(e);this._nodeElevationAlignmentChanged(t)}),(()=>this.elevationInfo?.mode))),this._elevationTask}_elevationInfoChanged(e,t){const i=e.mode!==te.ElevationMode.Absolute,r=!!t&&t!==e&&t.mode!==te.ElevationMode.Absolute;this._intersectionHandler.updateElevationAlignState(i,this.view.state.viewingMode),i&&!r&&this._controller.removeAllGeometryObbs(),this._nodeId2Meta.forEach((e=>this._nodeElevationAlignmentChanged(e)))}_nodeElevationAlignmentChanged(e){null!=e&&(this._updateElevationOffsets(e),this._updateComponentData(e),this._updateEdgeRendering(e),null!=this._labeler&&this._labeler.updateLabelPositions(e),this._updateSnappingSources(e,Ge.UPDATE))}_safeReschedule(e,t){return g.throwIfAborted(t),this._controller.reschedule(e,t)}_materialParameters(e,t){const i=null!=e.params.material?e.params.material:ce.defaultMaterial(),r=t.some((e=>"uvRegion"===e.name)),s=t.some((e=>"normalCompressed"===e.name)),a=Qe(i);return{geometryParameters:this._getGeometryParameters({hasTexture:a,hasNormals:s,hasRegions:r}),material:i}}_initMaterialAndTextures(e,t,i,r){const s=this._stage.renderView,a=i.map((e=>ce.createTexture(e,t,r,s)));this._stage.addMany(a);let o=null;return this._collection.updateMaterial(e,(e=>{o=ce.configureMaterial(e,t,a,i,this.view._stage.renderView.textureRepository,{rendererTextureUsage:this.rendererTextureUsage,usePBR:this._usePBR,isIntegratedMesh:this._isIntegratedMesh,slicePlaneEnabled:this.slicePlaneEnabled,viewSpatialReference:this.view.spatialReference}),this._updateMaterialOverlay(e)})),{textures:a,texturePromise:o}}_getGeometryParameters(e){return{textureCoordinates:e.hasTexture?e.hasRegions?Ae.TextureCoordinateAttributeType.Atlas:Ae.TextureCoordinateAttributeType.Default:Ae.TextureCoordinateAttributeType.None,colors:this._hasVertexColors,hasNormals:e.hasNormals&&this._needsNormals,needsNormals:this._needsNormals}}_addData(e,t,i){let r=this._addTasks.get(e.index);return r?r.attributeInfo=t:(r={...g.createResolver(),attributeInfo:t,meta:null},this._addTasks.set(e.index,r),i().then(r.resolve,r.reject).then((()=>this._addTasks.delete(e.index))).catch((t=>{throw this._addTasks.delete(e.index),t}))),r.promise}_clearAddTasks(){this._addTasks.forEach((e=>{null!=e.meta&&(this._cacheGPUData(e.meta),e.meta=null)})),this._addTasks.clear()}_clippingAreaChanged(){const e=this.view.renderSpatialReference,t=this.i3slayer.spatialReference,i=U.create();this._renderClippingArea=xe.toBoundingRect(this.view.clippingArea,i,e)?i:null;const r=U.create();this._layerClippingArea=xe.toBoundingRect(this.view.clippingArea,r,t)?r:null,this._filterChange(),this._controller&&this._controller.updateClippingArea(this.view.clippingArea),this._isIntegratedMesh&&this._modificationsChanged()}get hasGeometryFilter(){return!1}_geometryFilterChange(){const e=this.hasGeometryFilter;this._controller.geometryFilterChanged(e),this._applyFilters(e)}_filterChange(){this._applyFilters(this.hasGeometryFilter)}_applyFilters(e){this._filters=this.getFilters(),e?this._controller&&this._controller.requestUpdate():this._nodeId2Meta.forEach((e=>{null!=e&&this._applyFiltersToNode(e)&&(this._addOrUpdateEdgeRendering(e),this._visibleGeometryChanged(e,Ge.UPDATE))}))}getFilters(){const e=[],t=this._renderClippingArea;return null!=t&&e.push(((e,i)=>this._boundingRectFilter(e,i,t))),e}addSqlFilter(e,t,i){if(null!=t){const r=t.fieldNames;e.push(((e,s)=>this._sqlFilter(e,s,t,r,i)))}}_sqlFilter(e,t,i,r,s){const a={},o=this._createLayerGraphic(a),n=this.i3slayer.objectIdField,l=t.featureIds,d=t.attributeInfo?.attributeData;r.every((e=>e===n||null!=d?.[e]))&&pe.filterInPlace(e,l,(e=>{a[n]=l[e];for(const i of r)i!==n&&(a[i]=d?pe.getCachedAttributeValue(d[i],e):null);try{return i.testFeature(o)}catch(t){return s(t),!1}}))}_boundingRectNodeTest(e,t){return F.projectBoundingSphere(e.node.serviceMbsInIndexSR,this._controller.crsIndex,$e,this.view.renderSpatialReference),pe.intersectBoundingRectWithMbs(t,$e)}_boundingRectFeatureTest(e,t,i){return this._collection.getComponentAabb(e.objectHandle,t,Be),P.toRect(Be,ke),U.intersects(i,ke)}_boundingRectFilter(e,t,i){const r=this._collection,s=this._boundingRectNodeTest(t,i);if(s===pe.MbsIntersectResult.INSIDE)return;if(s===pe.MbsIntersectResult.OUTSIDE)return void(e.length=0);const a=r.getComponentCount(t.objectHandle);if(a.invisible+a.visible!==t.featureIds.length)return;const o=this._transformClippingArea(We,i,t.objectHandle);pe.filterInPlace(e,t.featureIds,(e=>this._boundingRectFeatureTest(t,e,o)))}_transformClippingArea(e,t,i){const r=this._collection.getObjectTransform(i),s=r.position,a=r.rotationScale;return e[0]=(t[0]-s[0])/a[0],e[1]=(t[1]-s[1])/a[4],e[2]=(t[2]-s[0])/a[0],e[3]=(t[3]-s[1])/a[4],e}_addOrUpdateEdgeRendering(e,t=!0){const i=this._edgeView;if(null==i)return Promise.resolve(null);const r=e.objectHandle,s=i.hasObject(r),{hasEdges:a,perFeatureEdgeMaterials:o}=this._getFilteredEdgeMaterials(e),n={hasSlicePlane:this.slicePlaneEnabled};if(a&&s){if(this.nodeCrossfadingEnabled){tt(o,this.getNodeOpacity(e))}return i.updateAllComponentMaterials(r,o,n,t).catch((e=>Le(e,this.i3slayer.title))),i.updateObjectVisibility(r,!0).catch((e=>Le(e,this.i3slayer.title))),i.updateAllVerticalOffsets(r,e.elevationOffsets).catch((e=>Le(e,this.i3slayer.title))),Promise.resolve(i)}return a&&!s?this._collection.addEdges(r,i,o,n).then((t=>(e.edgeMemoryUsage=t,e.node.memory+=t,i.updateAllVerticalOffsets(r,e.elevationOffsets).catch((e=>Le(e,this.i3slayer.title))),i))):(!a&&s&&(e.node.memory-=e.edgeMemoryUsage,e.edgeMemoryUsage=0,i.removeObject(r)),Promise.resolve(null))}_applyFiltersToNode(e){return!!this._applyFiltersToNodeComponents(e)&&(null!=this._labeler&&this._labeler.applyFilterChange(e),!0)}_applyFiltersToNodeComponents(e){const t=this._collection,i=t.getComponentCount(e.objectHandle),r=null!=e.filteredIds,s=0===i.invisible;if(t.setAllComponentVisibilities(e.objectHandle,"all"),0===this._filters.length)return e.filteredIds=null,!s;if(this._updateCachedFilteredIds(e),r&&e.filteredIds===e.featureIds)return!s;const a=this._computeFilteredComponentIndices(e);return t.setAllComponentVisibilities(e.objectHandle,a),!0}_updateCachedFilteredIds(e){null!=e.filteredIds&&e.appliedFilters===this._filters||(e.filteredIds=this._computeFilteredIds(e),e.appliedFilters=this._filters)}_computeFilteredIds(e){const t=e.featureIds.slice();for(const i of this._filters)if(i(t,e),0===t.length)break;return t.length===e.featureIds.length?e.featureIds:t}_computeFilteredComponentIndices(e){const t=new Array,i=e.filteredIds;return null!=i&&e.featureIds.forEach(((e,r)=>{i[t.length]===e&&t.push(r)})),t}_removeAllNodeDataFromStage(e=this.elevationOffset){this._nodeId2Meta.forEach(((t,i)=>this._removeNodeStageData(i,e))),this._nodeId2MetaReloading.forEach(((t,i)=>this._removeNodeStageData(i,e,this._nodeId2MetaReloading))),this._elevationTask=u.destroyMaybe(this._elevationTask)}removeNode(e){const t=this.elevationOffset;this._removeNodeStageData(e,t),this._removeNodeStageData(e,t,this._nodeId2MetaReloading),null!=this._elevationTask&&this._elevationTask.remove(e)}_removeNodeStageData(e,t,i=this._nodeId2Meta){i.has(e)&&this._controller.updateLoadStatus(e,!1);const r=i.get(e);null!=r?(this._collection.setObjectVisibility(r.objectHandle,!1),null!=this._edgeView&&this._edgeView.hasObject(r.objectHandle)&&this._edgeView.updateObjectVisibility(r.objectHandle,!1).catch((e=>Le(e,this.i3slayer.title))),this._visibleGeometryChanged(r,Ge.REMOVE),null!=this._labeler&&this._labeler.removeNodeMeta(r),i.delete(e),this._highlights.objectDeleted(r),i===this._nodeId2Meta?(this._cacheGPUData(r,t),this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopNodeFading(r)):this._deleteComponentObject(r),null!=this._treeDebugger&&this._treeDebugger.update()):i.delete(e)}_deleteComponentObject(e){if(null!=this._edgeView&&this._edgeView.removeObject(e.objectHandle),this._memEstimateGeometryRemoved(e.objectHandle),this._collection.destroyObject(e.objectHandle),e.textures)for(const t of e.textures)this._memEstimateTextureRemoved(t),this._stage.remove(t)}updateNodeState(e,t){const i=this._nodeId2Meta.get(e);null!=i&&this._collection.updateMaterial(i.objectHandle,(e=>e.polygonOffsetEnabled=t===ue.NodeState.Hole))}updateNodeIndex(e,t){if(this._nodeId2Meta.has(e)){const i=this._nodeId2Meta.get(e);this._nodeId2Meta.delete(e),this._nodeId2Meta.set(t,i),this.notifyChange("elevationRange")}const i=this._nodeId2MetaReloading.get(e);i&&(this._nodeId2MetaReloading.delete(e),this._nodeId2MetaReloading.set(t,i))}_invalidateAllSymbols(){this._rendererVersion=pe.addWraparound(this._rendererVersion,1),this._controller&&this._controller.requestUpdate()}_getInvalidRendererVersion(){return pe.addWraparound(this._rendererVersion,-1)}async _rendererChange(e){if(this._currentRenderer=e,this.notifyChange("rendererTextureUsage"),this._rendererVersion=pe.addWraparound(this._rendererVersion,1),this._rendererFields=null,this._colorVariable=null,this._opacityVariable=null,this._invalidateAllSymbols(),e&&(this._rendererFields=await e.getRequiredFields(this.i3slayer.fieldsIndex)),this._updateSymbologyFields(),!this._arcade&&e&&"arcadeRequired"in e&&e.arcadeRequired&&(this._arcade=await $.loadArcade()),e&&"visualVariables"in e&&e.visualVariables)for(const t of e.visualVariables)"color"===t.type?this._colorVariable=t:"opacity"===t.type?this._opacityVariable=t:De().warn(`Unsupported visual variable type for 3D Object Scene Services: ${t.type}`);if(e)for(const t of e.getSymbols())"mesh-3d"!==t.type&&De().error(`Symbols of type '${t.type}' are not supported for 3D Object Scene Services.`);this._controller&&this._controller.requestUpdate()}_getCachedEdgeMaterials(e){return this._hasComponentData&&e.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(e),e.cachedEdgeMaterials}_getComponentParameters(e){this._hasComponentData&&e.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(e);const t=e.cachedSymbology;return(i,r)=>{const s=5*i;if(S.set(r.externalColor,t[s]/255,t[s+1]/255,t[s+2]/255,t[s+3]/255),null!=this._stage.renderView.objectAndLayerIdRenderHelper){const t=e.featureIds[i],s=Q.isBasemapLayer(this.view.map,this.layerUid);this._stage.renderView.objectAndLayerIdRenderHelper.setUidToObjectAndLayerId(t,t,this.layerId,this.layerUid+"_"+this.sublayerId,this.layerPopupEnabledAndHasTemplate&&!s,e.node.resources.attributes,i,this.sublayerId),r.objectAndLayerIdColor=this._stage.renderView.getObjectAndLayerIdColor({graphicUid:t,layerUid:this.layerUid+"_"+this.sublayerId})}r.externalColorMixMode=t[s+4]&(1<<Pe.CastShadows)-1,r.castShadows=0!=(t[s+4]&1<<Pe.CastShadows),r.pickable=0!=(t[s+4]&1<<Pe.Pickable),r.elevationOffset=e.elevationOffsets?.[i]??0}}_getSymbolInfo(e,t){const i=e?.getSymbol(t,{arcade:this._arcade});if(!(i instanceof X))return null;const r=i.id;if(this._symbolInfos.has(r))return this._symbolInfos.get(r);const s=pe.getSymbolInfo(i);return this._symbolInfos.set(r,s),s}_setSymbologyOverride(e,t){this._symbologyOverride!==e&&(this._symbologyOverride=e,this._symbologyOverrideFields=t,this._invalidateAllSymbols(),this._updateSymbologyFields())}_updateSymbologyFields(){this._symbologyFields=null!=this._symbologyOverrideFields&&this._symbologyOverrideFields.length>0?null!=this._rendererFields&&this._rendererFields.length>0?q.fixFields(this.i3slayer.fieldsIndex,[...this._rendererFields,...this._symbologyOverrideFields]):this._symbologyOverrideFields:this._rendererFields}_updateCachedRendererData(e){if(e.cachedRendererVersion=this._rendererVersion,!this._hasComponentData)return;const t=this._tmpAttributeOnlyGraphic,i={};t.attributes=i;const r=this._currentRenderer,s=e.attributeInfo?.attributeData,a=null!=e.featureIds?this.i3slayer.objectIdField:null,o=null!=s&&null!=this._symbologyFields&&this._symbologyFields.length>0;let n=null,l=null;if(o&&null!=this._symbologyFields){n=[],l=[];for(const e of this._symbologyFields){const t=s[e];t&&(n.push(e),l.push(t))}}e.cachedSymbology||(e.cachedSymbology=B.newUByteArray(5*e.featureIds.length));const d={color:ze,castShadows:!0,pickable:!0,colorMixMode:Ie.ColorMixModeEnum.Multiply,edgeMaterial:null},h=this.fullOpacity,c=this.nodeCrossfadingEnabled?this.getNodeOpacity(e):h;let u=null,_=Te.Transparency.OPAQUE,g=pe.transparentEdgeMaterial,p=0;for(let f=0;f<e.featureIds.length;f++){if(null!=a&&(i[a]=e.featureIds[f]),o&&n)for(let e=0;e<n.length;e++)i[n[e]]=pe.getCachedAttributeValue(l[e],f);const s=r?this._getSymbolInfo(r,t):null;let h=null,m=null;if(r&&"visualVariables"in r){if(this._colorVariable){const e=K.getColor(this._colorVariable,t,{color:Ke,arcade:this._arcade});e&&(h=ze,h[0]=e.r/255,h[1]=e.g/255,h[2]=e.b/255,this._opacityVariable||null===e.a||(m=e.a))}this._opacityVariable&&(m=K.getOpacity(this._opacityVariable,t,{arcade:this._arcade}))}if(s?.material){const e=s.material;h=null==h||null==m?re.overrideColor(h,m,e.color,e.alpha,Ne,ze):re.overrideColor(h,m,null,null,Ne,ze)}if(null==h&&(h=ze,h[0]=1,h[1]=1,h[2]=1,h[3]=1),d.pickable=!0,d.castShadows=!s||s.castShadows,d.colorMixMode=s?.material?s.material.colorMixMode:Ie.ColorMixModeEnum.Multiply,d.edgeMaterial=s?s.edgeMaterial:null,null!=this._symbologyOverride&&(d.color=h,this._symbologyOverride(t,d),h=d.color),null!=this._nodeColorOverride&&(this._nodeColorOverride(e.node,h),d.colorMixMode=Ie.ColorMixModeEnum.Replace),null!=d.edgeMaterial){const t=h[3]<=0?Te.Transparency.INVISIBLE:h[3]>=1&&(e.material.isOpaque||d.colorMixMode===Ie.ColorMixModeEnum.Replace)?Te.Transparency.OPAQUE:Te.Transparency.TRANSPARENT;d.edgeMaterial===u&&t===_||(g={...d.edgeMaterial,opacity:c,objectTransparency:t},u=d.edgeMaterial,_=t),e.cachedEdgeMaterials[f]=g}else e.cachedEdgeMaterials[f]=pe.transparentEdgeMaterial;e.cachedSymbology[p++]=Math.round(255*h[0]),e.cachedSymbology[p++]=Math.round(255*h[1]),e.cachedSymbology[p++]=Math.round(255*h[2]),e.cachedSymbology[p++]=Math.round(255*h[3]),e.cachedSymbology[p++]=d.colorMixMode|+d.castShadows<<Pe.CastShadows|+d.pickable<<Pe.Pickable}}_getFilteredEdgeMaterials(e){const t=this._getCachedEdgeMaterials(e);this.nodeCrossfadingEnabled||tt(t,this.fullOpacity);const i=e.filteredIds;if(null==i){return{hasEdges:t.some((e=>e!==pe.transparentEdgeMaterial)),perFeatureEdgeMaterials:t}}let r=0,s=!1;const a=t.map(((t,a)=>e.featureIds[a]!==i[r]?pe.transparentEdgeMaterial:(s=s||t!==pe.transparentEdgeMaterial,r++,t)));return{hasEdges:s,perFeatureEdgeMaterials:a}}_updateComponentData(e){if(!this._hasComponentData)return;const t=e.objectHandle,i=this._getComponentParameters(e);this._collection.setComponentData(t,i),this._stage.renderView.requestRender()}_reloadAll(e=this.elevationOffset){this._removeAllNodeDataFromStage(e),null!=this._controller&&this._controller.restartNodeLoading()}_opacityChange(e){this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopAllNodeFading(),this._nodeId2Meta.forEach((t=>{null!=t&&(this._collection.updateMaterial(t.objectHandle,(t=>t.objectOpacity=e)),tt(t.cachedEdgeMaterials,e),this._updateEdgeRendering(t))}))}_updateMaterial(e){this._collection.updateMaterial(e.objectHandle,(e=>{e.commonMaterialParameters.hasSlicePlane=this.slicePlaneEnabled,e.usePBR=this._usePBR,this._updateMaterialOverlay(e)}))}_updateMaterialOverlay(e){}_updateEngineObject(e){this._updateComponentData(e),this._applyFiltersToNode(e),this._addOrUpdateEdgeRendering(e),this._visibleGeometryChanged(e,Ge.UPDATE)}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlaneEnabled=e),null!=this._labeler&&(this._labeler.slicePlaneEnabled=e),this._nodeId2Meta.forEach((t=>{null!=t&&(this._collection.updateMaterial(t.objectHandle,(t=>t.commonMaterialParameters.hasSlicePlane=e)),this._updateEdgeRendering(t,!1))}))}_updatePBR(e){this._nodeId2Meta.forEach((t=>{null!=t&&this._collection.updateMaterial(t.objectHandle,(t=>t.usePBR=e))})),this._hasLoadedPBRTextures=!0}get _usePBR(){return this._needsNormals&&this.view.qualitySettings.physicallyBasedRenderingEnabled}_updateEdgeRendering(e,t=!0){null!=this._edgeView&&this._edgeView.hasObject(e.objectHandle)&&this._addOrUpdateEdgeRendering(e,t)}_forAllNodes(e){this._nodeId2Meta.forEach(e)}_ignoreClientNodeOverriddenFeatures(e){return this.i3sOverrides.hasGeometryChanges?(t,i,r)=>r.node.index>=0&&this.i3sOverrides.featureHasGeometryChanges(t)?te.ForAllFeaturesReturnType.CONTINUE:e(t,i,r):e}_forAllFeatures(e,t,i){c.someMap(this._nodeId2Meta,(r=>{if(null==r)return!1;if(null!=t){switch(t(r)){case te.ForAllFeaturesReturnType.EXIT:return!0;case te.ForAllFeaturesReturnType.SKIP:return!1}}let s=te.ForAllFeaturesReturnType.CONTINUE;switch(i){case te.ForAllFeaturesMode.ALL:s=this._forAllFeaturesOfNode(r,e);break;case te.ForAllFeaturesMode.VISIBLE_ONLY:s=this._forAllVisibleFeaturesOfNode(r,e);break;case te.ForAllFeaturesMode.QUERYABLE:s=this._forAllQueryableFeaturesOfNode(r,e)}return s===te.ForAllFeaturesReturnType.EXIT}))}_forAllFeaturesOfNode(e,t){let i=te.ForAllFeaturesReturnType.CONTINUE;const r=e.featureIds;for(let s=0;s<r.length;s++)if(i=t(r[s],s,e),i===te.ForAllFeaturesReturnType.EXIT)return i;return i}_forAllVisibleFeaturesOfNode(e,t){let i=te.ForAllFeaturesReturnType.CONTINUE;const r=e.featureIds;return this._collection.forEachVisibleComponent(e.objectHandle,(s=>(i=t(r[s],s,e),i===te.ForAllFeaturesReturnType.CONTINUE))),i}_forAllQueryableFeaturesOfNode(e,t){const i=this._ignoreClientNodeOverriddenFeatures(t);if(null==this._renderClippingArea)return this._forAllFeaturesOfNode(e,i);const r=this._boundingRectNodeTest(e,this._renderClippingArea);if(r===pe.MbsIntersectResult.OUTSIDE)return te.ForAllFeaturesReturnType.CONTINUE;if(r===pe.MbsIntersectResult.INSIDE)return this._forAllFeaturesOfNode(e,i);const s=te.ForAllFeaturesReturnType.CONTINUE,a=e.featureIds,o=e.objectHandle,n=pe.getClipRect(this._renderClippingArea,this._collection.getObjectTransform(o));for(let l=0;l<a.length;l++){if(!this._boundingRectFeatureTest(e,l,n))continue;const t=i(a[l],l,e);if(t===te.ForAllFeaturesReturnType.EXIT)return t}return s}_createAttributes(e,t){const i={};null!=t.featureIds&&(i[this._getObjectIdField()]=t.featureIds[e]);const r=t.attributeInfo?.attributeData;if(null!=r)for(const s of Object.keys(r))i[s]=pe.getCachedAttributeValue(r[s],e);return i}_createGraphic(e,t){return this._createLayerGraphic(this._createAttributes(e,t))}highlight(e){if("number"==typeof e||e instanceof s?e=[e]:e instanceof n&&(e=e.toArray()),Array.isArray(e)&&e.length>0){if(e[0]instanceof s){const t=e,i=this.i3slayer.fieldsIndex,r=this._getObjectIdField(),s=t.map((e=>be.attributeLookup(i,e.attributes,r))),{set:a,handle:o}=this._highlights.acquireSet();return this._highlights.setFeatureIds(a,s),o}if("number"==typeof e[0]){const t=e,{set:i,handle:r}=this._highlights.acquireSet();return this._highlights.setFeatureIds(i,t),r}}return l.makeHandle()}resetHighlights(){u.destroyMaybe(this._highlights),this._highlights=new oe({collection:this._collection,forAllFeatures:e=>this._forAllFeatures(e,null,te.ForAllFeaturesMode.ALL),forAllFeaturesOfNode:(e,t)=>this._forAllFeaturesOfNode(e,t)})}_visibleGeometryChanged(e,t){if(!this._elevationProvider)return;const i=this.getNodeComponentObb(e.node);i&&this._elevationProvider.objectChanged(i),null==this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle=f.schedule((()=>{this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle=null}))),this._updateSnappingSources(e,t)}get performanceInfo(){return new Z.I3SMeshViewPerformanceInfo(this.usedMemory,this._nodeId2Meta.size,Math.round(this._gpuMemoryEstimate/1048576),Math.round(this._geoMemoryEstimate/1048576),Math.round(this._texMemoryEstimate/1048576),Math.round(this.unloadedMemory/1048576),this._idbCacheEnabled?Math.round(100*this._idbCache.getHitRate()):0)}get test(){const e=this,t=e=>{this._nodeColorOverride=e,this._invalidateAllSymbols()};return{controller:this._controller,labeler:this._labeler,get visibleObjectIds(){const t=[];return e._forAllFeatures((e=>(t.push(e),te.ForAllFeaturesReturnType.CONTINUE)),null,te.ForAllFeaturesMode.VISIBLE_ONLY),t.sort(((e,t)=>e-t)),t},get numNodes(){return e._nodeId2Meta.size},get loadedNodes(){return Array.from(e._nodeId2Meta.keys()).sort(((e,t)=>e-t))},setNodeColorOverride:t,setNodeColoring:e=>{if("client-nodes"===e)t(((e,t)=>{e.index<0?(t[0]=1,t[1]=0,t[2]=0):(t[0]=1,t[1]=1,t[2]=1)}));else t(null)}}}getNodeOpacityByIndex(e){const t=this._nodeId2Meta.get(e);return this.getNodeOpacity(t)}getNodeOpacity(e){return null!=e?this._collection.getMaterial(e.objectHandle).objectOpacity:0}isNodeFullyFadedIn(e){return this._crossfadeHelper.isNodeFullyFadedIn(e)}getNodeCrossfadeMetaData(e){return this._nodeId2Meta.get(e)}markNodeToRemove(e){this._controller&&this._controller.markNodeToRemove(e)}removeMarkedNodes(){this._controller&&this._controller.removeMarkedNodes()}foreachCrossfadeNode(e){this._nodeId2Meta.forEach(e)}fadeNode(e,t,i){if(!this.nodeCrossfadingEnabled)return;const r=this._nodeId2Meta.get(e);null!=r&&this._crossfadeHelper.fadeNode(e,r,t,i)}setNodeOpacityByIndex(e,t){const i=this._nodeId2Meta.get(e);null!=i&&this._setNodeOpacity(i,t)}_setNodeOpacity(e,t){this._collection.updateMaterial(e.objectHandle,(e=>e.objectOpacity=t)),this._setNodeEdgeOpacity(e,t)}_setNodeEdgeOpacity(e,t){if(null==this._edgeView||!e.cachedEdgeMaterials)return;tt(e.cachedEdgeMaterials,t);const i=e.objectHandle;this._edgeView.hasObject(i)&&this._edgeView.updateAllComponentOpacities(i,t).catch((e=>Le(e,this.i3slayer.title)))}get hasModifications(){return this._isIntegratedMesh&&null!=this._layerClippingArea||this._modifications&&this._modifications.length>0}updateNodeModificationStatus(e){const t=e.length;if(!this.hasModifications||t<=0||!0!==this._i3sWasmLoaded)return;const i=this.uid,r=et(e);if(r){const t={context:i,buffer:r.buffer};ie.filterObbsForModificationsSync(t);const s=new Float64Array(r.buffer);e.forAll(((e,t)=>{const i=s[t],r=ie.interpretObbModificationResults(i);e.imModificationImpact=r,r!==ue.NodeIMModificationImpact.Unmodified&&this._controller.invalidateGeometryVisibility(e.index)}))}}notifyUpdate(){this.notifyChange("updating")}notifyLODUpdate(){this._controller.notifyLODUpdate()}isUpdating(){return!(!this._controller||!this._controller.updating)||!!this._visibleGeometryChangedSchedulerHandle||null!=this._labeler&&this._labeler.updating||this._crossfadeHelper?.updating||this._i3sWasmLoaded instanceof Promise||this._asyncModuleLoading>0||null!=this._elevationTask&&this._elevationTask.running}trackSnappingSources(e){const t={events:e,fetchEdgeLocations:async(e,t,i)=>{const r=this._nodeId2Meta.get(e);if(null==r)throw new Error("invalid-node");const{origin:s,buffer:a}=await this._collection.extractEdgeInformation(r.objectHandle,t,i);return this._snappingLocationsApplyElevation(r,a,s),{type:"components",objectIds:r.featureIds,locations:a,origin:s}},remove:()=>a.removeUnordered(this._snappingSourcesTrackers,t)};return this._snappingSourcesTrackers.push(t),this._nodeId2Meta.forEach(((t,i)=>{if(null==t)return;const r=this._controller.getRenderMbs(t.node);r&&e.add(i,r)})),t}_snappingLocationsApplyElevation(e,t,i){if(!e.elevationOffsets||this.elevationInfo.mode===te.ElevationMode.Absolute)return;const r=t.position0,s=t.position1,a=t.componentIndex,o=R.create(),n=R.create(),l=(e,t)=>{O.add(e,e,i),this.view.renderCoordsHelper.worldUpAtPosition(e,n),O.add(e,e,O.scale(n,n,t)),O.subtract(e,e,i)};for(let d=0;d<r.count;d++){const t=e.elevationOffsets[a.get(d)];r.getVec(d,o),l(o,t),r.setVec(d,o),s.getVec(d,o),l(o,t),s.setVec(d,o)}}_updateSnappingSources(e,t){const{index:i}=e.node,r=this._controller.getRenderMbs(e.node);if(null!=r)for(const s of this._snappingSourcesTrackers)t!==Ge.REMOVE&&t!==Ge.UPDATE||s.events.remove(i),t!==Ge.ADD&&t!==Ge.UPDATE||s.events.add(i,r)}};return i.__decorate([b.property()],r.prototype,"_hasLoadedPBRTextures",void 0),i.__decorate([b.property()],r.prototype,"_asyncModuleLoading",void 0),i.__decorate([b.property()],r.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),i.__decorate([b.property()],r.prototype,"view",void 0),i.__decorate([b.property()],r.prototype,"i3slayer",void 0),i.__decorate([b.property()],r.prototype,"_controller",void 0),i.__decorate([b.property()],r.prototype,"_labeler",void 0),i.__decorate([b.property()],r.prototype,"updating",void 0),i.__decorate([b.property()],r.prototype,"suspended",void 0),i.__decorate([b.property()],r.prototype,"contentVisible",null),i.__decorate([b.property({readOnly:!0})],r.prototype,"legendEnabled",null),i.__decorate([b.property()],r.prototype,"holeFilling",void 0),i.__decorate([b.property(Oe.updatingProgress)],r.prototype,"updatingProgress",void 0),i.__decorate([b.property()],r.prototype,"updatingProgressValue",null),i.__decorate([b.property()],r.prototype,"hasTexturesOrVertexColors",null),i.__decorate([b.property()],r.prototype,"rendererTextureUsage",null),i.__decorate([b.property()],r.prototype,"elevationOffset",null),i.__decorate([b.property()],r.prototype,"elevationInfo",null),i.__decorate([b.property({type:Boolean})],r.prototype,"slicePlaneEnabled",void 0),i.__decorate([b.property()],r.prototype,"supportedTextureEncodings",null),i.__decorate([b.property()],r.prototype,"uncompressedTextureDownsamplingEnabled",null),i.__decorate([b.property({type:[z]})],r.prototype,"_modifications",void 0),i.__decorate([b.property({readOnly:!0})],r.prototype,"clientGeometry",null),i.__decorate([b.property()],r.prototype,"elevationRange",null),i.__decorate([b.property()],r.prototype,"fullExtent",null),i.__decorate([b.property()],r.prototype,"_elevationTask",void 0),i.__decorate([b.property({readOnly:!0})],r.prototype,"_usePBR",null),r=i.__decorate([v.subclass(Fe)],r),r};function Le(e,t){g.isAbortError(e)||De().warn("Error while processing edges. Edges on this layer might not display correctly",t,e)}var Ge;!function(e){e[e.ADD=0]="ADD",e[e.REMOVE=1]="REMOVE",e[e.UPDATE=2]="UPDATE"}(Ge||(Ge={}));const Be=P.create(),ke=U.create(),We=U.create(),qe=new Ee.Obb,ze=[0,0,0,0],Ke=new r([0,0,0,0]),$e=G.fromValues(0,0,0,0);function Qe(e){if(null==e)return!1;const t=e.metallicRoughness;return t&&t.baseColorTextureId>=0||t&&t.metallicRoughnessTextureId>=0||e.normalTextureId>=0||e.emissiveTextureId>=0||e.occlusionTextureId>=0}function Xe(e){return"geometryData"in e}function Ye(e){return null!=e&&m.isArrayBuffer(e.data)}function Je(e,t){let i=1024+e.interleavedVertexData.byteLength+(e.indices?e.indices.byteLength:0)+e.positionData.data.byteLength+e.positionData.indices.byteLength;if(null!=t)for(const r of t)null!=r&&m.isArrayBuffer(r.data)&&(i+=r.data.byteLength);return i}function Ze(e,t){return t.byteSize>je?(De().warn(`Node is too big to store in IndexedDB cache: ${e.id} (${t.byteSize} bytes)`),!1):t.byteSize>0}function et(e){if(0===e.length)return;const t=10*e.length,i=new Float64Array(t);let r=0;return e.forAll((e=>{let t=e.serviceObbInIndexSR;null==t&&(t=qe,t.center=G.getCenter(e.serviceMbsInIndexSR),t.halfSize=[e.serviceMbsInIndexSR[3],e.serviceMbsInIndexSR[3],e.serviceMbsInIndexSR[3]]);const s=t.data;i[r++]=s[0],i[r++]=s[1],i[r++]=s[2],i[r++]=s[3],i[r++]=s[4],i[r++]=s[5],i[r++]=s[6],i[r++]=s[7],i[r++]=s[8],i[r++]=s[9]})),i}function tt(e,t){e.forEach((e=>e.opacity=t))}class it{constructor(e,t){this.mode=e,this.offset=t}}const rt=R.create(),st=P.create(),at="elevation-change",ot=[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],nt=new Ce.ElevationRange;function lt(e,t,i){let r=e.elevationRangeMin,s=e.elevationRangeMax;const a=i;if(a>0){t.getCorners(ot);for(const e of ot){const t=O.len(e)-a;r=Math.min(r,t),s=Math.max(s,t)}}else{t.getCorners(ot);for(const e of ot){const t=e[2];r=Math.min(r,t),s=Math.max(s,t)}}e.expandElevationRangeValues(r,s)}function dt(e,t,i){const r=G.getCenter(t),s=i>0?O.len(r)-i:r[2],a=G.getRadius(t);e.expandElevationRangeValues(s-a,s+a)}t.I3SMeshView3D=He,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
