/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../II3SMeshView3D","../graphics/ExtentSet","../../../support/Scheduler"],(function(t,e,s,r,i,o,n,a,d,c,h){"use strict";t.I3SAsyncElevationUpdater=class extends s{constructor(t,e,s,r){super({}),this._updateExtent=e,this._updateNode=s,this._getElevationMode=r,this.running=!1,this._extentSet=new c.ExtentSet,this._nodeSet=new Set;const i=this._taskPriority,o=t.registerTask(this._taskPriority,this);this.addHandles(o),this._task=o,this._lastTaskPriority=i}get _taskPriority(){const t=this._getElevationMode();return t&&t===d.ElevationMode.RelativeToGround?h.TaskPriority.ELEVATION_ALIGNMENT_SCENE:h.TaskPriority.ELEVATION_ALIGNMENT}_updateTaskPriority(){const t=this._taskPriority;t!==this._lastTaskPriority&&(this._task.priority=t,this._lastTaskPriority=t)}normalizeCtorArgs(){return{}}addExtent(t){this._extentSet.add(t),this._updateTaskPriority(),this.running=!0}schedule(t){this._nodeSet.add(t),this._updateTaskPriority(),this.running=!0}remove(t){this._nodeSet.delete(t),this._updateRunning()}runTask(t){const e=this._extentSet;for(t.run((()=>e.merge(t)));!e.empty&&!t.done;){const s=this._updateExtent(e.pop());null!=s&&s.forAll((t=>this.schedule(t))),t.madeProgress()}if(t.done)return;const s=this._nodeSet;for(const r of s)if(s.delete(r),this._updateNode(r),t.madeProgress(),t.done)break;this._updateRunning()}_updateRunning(){this.running=this._nodeSet.size>0||this._extentSet.size>0}},e.__decorate([r.property()],t.I3SAsyncElevationUpdater.prototype,"running",void 0),t.I3SAsyncElevationUpdater=e.__decorate([a.subclass("esri.views.3d.layers.i3s.I3SAsyncElevationUpdater.ts")],t.I3SAsyncElevationUpdater),Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
