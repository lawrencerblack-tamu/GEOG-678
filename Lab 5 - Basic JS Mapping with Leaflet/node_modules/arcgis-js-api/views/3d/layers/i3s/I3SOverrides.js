/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../request","../../../../core/Accessor","../../../../core/arrayUtils","../../../../core/asyncUtils","../../../../core/byteSizeEstimations","../../../../core/Collection","../../../../core/handleUtils","../../../../core/Logger","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/ReactiveSet","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/support/spatialReferenceUtils","../../../../intl/number","../../../../layers/support/featureQueryAll","../../../../rest/support/meshFeatureSet","../../../../support/featureFlags","../../../../support/requestUtils","../../../ViewingMode","../FeatureLayerView3D"],(function(e,t,r,i,s,a,n,o,d,c,l,h,u,g,p,y,m,_,b,f,O,v,I,C,w){"use strict";const j="esri.views.3d.layers.i3s.I3SOverrides";e.I3SOverrides=class extends i{constructor(e){super(e),this._warnMaximumChangedObjectsExceeded=!1,this._maximumNumberOfEditOVerrides=A,this._original3DOFLDefinitionExpression=null,this._interactiveEditingSessions=new o,this.geometryOverrides=new o,this._clientGeometryCache=new Map,this._associatedLayerView=null,this._attributeChangedObjectIds=new u,this._geometryChangedObjectIds=new u,this._pendingFetchChangedObjectIds=null,this._pendingFetchAbortController=new AbortController,this._featureIdLocks=new Map}initialize(){this._memCache=this.memoryController.newCache(`i3s-attribute-overrides-${this.layer.uid}`),this._pendingFetchChangedObjectIds=this._fetchChangedObjectIds(this._pendingFetchAbortController?.signal),this._pendingFetchChangedObjectIds.finally((()=>{this._pendingFetchAbortController=null,this._pendingFetchChangedObjectIds=null})),this.is3DOFL&&null!=this._associatedLayer&&(v.direct3DObjectFeatureLayerDisplayEnabled()?this._associatedLayer.load().then((e=>{this.destroyed||(this._original3DOFLDefinitionExpression=e.definitionExpression,this.addHandles(g.watch((()=>this._definitionExpression),(t=>e.definitionExpression=t),g.initial)),this._associatedLayerView=new w({layer:this._associatedLayer,view:this.view}))})):v.i3sPatchingEnabled())}destroy(){this.is3DOFL&&null!=this._associatedLayer&&(v.direct3DObjectFeatureLayerDisplayEnabled()?null!=this._associatedLayerView&&(this._associatedLayer.definitionExpression=this._original3DOFLDefinitionExpression):v.i3sPatchingEnabled()),this._set("layer",null),this._memCache=l.destroyMaybe(this._memCache),this._pendingFetchAbortController=l.abortMaybe(this._pendingFetchAbortController),this._pendingFetchChangedObjectIds=null,this._featureIdLocks.clear()}get is3DOFL(){return v.sceneLayerEditingEnabled()&&null!=this._associatedLayer?.infoFor3D}get sortedGeometryChangedObjectIds(){return this.is3DOFL?[...this._geometryChangedObjectIds].sort(((e,t)=>e-t)):[]}get _associatedLayer(){return null==this.layer?null:this.layer.associatedLayer}get hasGeometryChanges(){return this._geometryChangedObjectIds.size>0}get _definitionExpression(){const e=this.sortedGeometryChangedObjectIds;return 0===e.length?"1 = 0":`OBJECTID IN (${e.join(",")})`}get updating(){if(!this.is3DOFL)return!1;if(this._pendingFetchChangedObjectIds)return!0;if(v.direct3DObjectFeatureLayerDisplayEnabled()){return!(null!=this._associatedLayerView)||null!=this._associatedLayerView&&this._associatedLayerView.updating}return!1}get isEmpty(){return null==this._pendingFetchChangedObjectIds&&0===this._attributeChangedObjectIds.size&&0===this._geometryChangedObjectIds.size}featureHasGeometryChanges(e){return this._geometryChangedObjectIds.has(e)}featureHasAttributeChanges(e){return this._attributeChangedObjectIds.has(e)}createInteractiveEditSession(e){this._attributeChangedObjectIds.add(e);const t=this._interactiveEditingSessions,r=new F(e,(()=>{t.remove(r)}));return t.unshift(r),r}async applyAttributeOverrides(e,t,r,i=[]){if(this._pendingFetchChangedObjectIds&&await h.whenOrAbort(this._pendingFetchChangedObjectIds,r),null==t)return;const{attributeData:s,loadedAttributes:a}=t;if(null==a||null==s||0===this._attributeChangedObjectIds.size)return;const n=new Set;for(const d of a)n.add(d.index);for(const d of i)n.has(d.index)||(a.push(d),s[d.name]=new Array(e.length));const o=await this._lockFeatureIds(e);try{const t={attributeData:s,loadedAttributes:a},i=this._getOverridesFromCache(e,t,this._attributeChangedObjectIds),{objectIds:n,fieldNames:o}=i;if(0===n.length||0===o.length)return;const d=await this._queryAttributeOverridesFromAssociatedLayer(n,o,r);if(null==d)return;this._processOverridesFromAssociatedLayer(e,d,o,t)}finally{o.remove()}}updateGeometry(e,t){this._geometryChangedObjectIds.add(e);const r=this._clientGeometryCache.get(e);if(null!=r&&(this.geometryOverrides.remove(r),this._clientGeometryCache.delete(e)),null!=t){const r={oid:e,mesh:t};this.geometryOverrides.add(r),this._clientGeometryCache.set(e,r)}}updateAttributeValue(e,t,r){this._attributeChangedObjectIds.add(e),this._cacheAttributeValue(e,t,r)}featureAdded(e){this.is3DOFL&&v.i3sPatchingEnabled()&&this._geometryChangedObjectIds.add(e),this._attributeChangedObjectIds.add(e)}_cacheAttributeValue(e,t,r){this._memCache.put(this._getAttributeCacheKey(e,t),r,this._memCacheAttributeValueSize(r))}_getOverridesFromCache(e,{loadedAttributes:t,attributeData:r},i){const s=new Set,a=new Array;for(const o of t)a[o.index]=r[o.name];const n=new Set;for(let o=0;o<e.length;o++){const r=e[o];if(i.has(r))for(const e of t){const t=this._attributeFromCache(r,e.index);void 0===t?(s.add(r),n.add(e.name)):a[e.index][o]=t}}return{objectIds:Array.from(s),fieldNames:Array.from(n)}}_attributeFromCache(e,t){const r=this._fromInteractiveEditingSession(e,t);if(void 0!==r)return r;const i=this._getAttributeCacheKey(e,t);return this._memCache.get(i)}_fromInteractiveEditingSession(e,t){if(null!=this._interactiveEditingSessions)for(const r of this._interactiveEditingSessions){if(r.objectId!==e)continue;const i=r.getAttribute(t);if(void 0!==i)return i}}_getAttributeCacheKey(e,t){return`${e}-${t}`}async _queryAttributeOverridesFromAssociatedLayer(e,t,r){if(0===e.length)return null;this._logWarningIfMaximumObjectsExceeded();const{associatedLayer:i}=this.layer;if(null==i)return null;const s=i.createQuery(),{objectIdField:a}=i,n=[a,...t];s.where="1=1",s.returnGeometry=!1,s.outFields=n,s.cacheHint=!0;const o=await this._executeBatchQuery(i,e,s,r),d=[];for(const c of o)if(c.ok)for(const e of c.value.features)d.push(e);return d}async _queryGeometryOverridesFromAssociatedLayer(e,t){if(0===e.length||!this.is3DOFL||!v.i3sPatchingEnabled())return null;const r=this.layer.associatedLayer,i=r.infoFor3D,{spatialReference:s}=r,{state:{viewingMode:a},spatialReference:n}=this.view,o=a===C.ViewingMode.Global,d=s.isGeographic;if(o&&!d)return c.getLogger(j).warn("unsupported-pcs-edits-in-global-view",this.layer.title,x(s,n,this.view.viewingMode,L.Mode)),null;if(!o&&d)return c.getLogger(j).warn("unsupported-gcs-edits-in-local-view",this.layer.title,x(s,n,this.view.viewingMode,L.Mode)),null;if(!(_.equals(s,n)||o&&n.isWebMercator&&s.isWGS84))return c.getLogger(j).warn("unsupported-mismatched-spatial-reference-edits",this.layer.title,x(s,n,this.view.viewingMode,L.SpatialReference)),null;this._logWarningIfMaximumObjectsExceeded();const{objectIdField:l,globalIdField:h}=r,u=[l,...null!=h?[h]:[]],g=r.createQuery();g.where="1=1",g.returnGeometry=!0,g.outFields=u,g.cacheHint=!0,g.returnZ=r.hasZ,g.returnM=r.hasM;const p=await this._executeBatchQuery(r,e,g,t),y=[];for(const c of p){if(!c.ok)continue;const e=c.value,{assetMaps:t,features:r,globalIdFieldName:a}=e;if(null==t)continue;const n=O.assetMapFromAssetMapsJSON(i,t);for(const o of r){const e=O.extractMesh(o,a,s,i,n),t=o;null!=e?(t.geometry=e,y.push(t)):t.geometry=null}}return y}_logWarningIfMaximumObjectsExceeded(){if(!this._warnMaximumChangedObjectsExceeded)return;this._warnMaximumChangedObjectsExceeded=!1;let e=`The number of edited objects that are not yet cached in the scene service exceeds the maximum limit. Attribute changes will only be available for the first ${b.formatNumber(this._maximumNumberOfEditOVerrides)} objects. Please consider re-caching the scene service`;const t=this.layer.portalItem;t&&t.loaded?e+=` (${t.portal.url}/home/item.html?id=${t.id}#settings)`:e+=` (${this.layer.parsedUrl.path})`,c.getLogger(j).warn("#queryOverrides()",this.layer.title,`${e}.`)}async _executeBatchQuery(e,t,r,i){if(0===t.length)return[];const n=f.getMaximumQuerySize(e);t=[...t].sort(((e,t)=>e-t));const o=s.splitIntoChunks(t,n).map((t=>{const s=r.clone();return s.objectIds=t,a.resultOrAbort(f.queryAllJSON(e,s,{signal:i}))}));return Promise.all(o)}_processOverridesFromAssociatedLayer(e,t,r,{loadedAttributes:i,attributeData:s}){const a=this._associatedLayer;if(null==a)return;const n=a.objectIdField,o=r.map((t=>(t in s||(s[t]=new Array(e.length)),s[t]))),d=new Map(i.map((e=>[e.name,e.index]))),c=r.map((e=>d.get(e))),l=new Map(Array.from(e,((e,t)=>[e,t])));for(const h of t){const e=h.attributes[n];for(let t=0;t<r.length;t++){const i=c[t],s=l.get(e),a=h.attributes[r[t]];o[t][s]=a,this._cacheAttributeValue(e,i,a)}}}_memCacheAttributeValueSize(e){return"string"==typeof e?n.estimateStringByteSize(e):n.estimateNumberByteSize()}async _fetchChangedObjectIds(e){const t=this.layer;await t.load({signal:e}),this._geometryChangedObjectIds.clear(),this._attributeChangedObjectIds.clear();const{associatedLayer:i}=t;if(null==i||!i.capabilities?.operations?.supportsChangeTracking)return;const s=this._getFetchChangedObjectIdsServerGen();if(null==s)return;const n=i.layerId,o=this.is3DOFL,d={f:"json",returnIdsOnly:!0,layers:`[${n}]`,returnUpdates:!0,returnDeletes:o,returnInserts:o,layerServerGens:JSON.stringify([{id:n,serverGen:s}])};if(o){const e=i.infoFor3D;d.fieldsToCompare=JSON.stringify({fields:[...Object.values(e.transformFieldRoles),e.sourceHashField]})}const l=await a.result(r(`${i.url}/extractChanges`,{method:"post",query:d,timeout:S,signal:e}));if(!l.ok&&I.isTimeoutError(l.error)){const e=this.layer.title;c.getLogger(j).warn("extractChanges:timeout",e,`${e} could not obtain edited features that are not cached in the scene service. Display of features may not be up to date with the latest edits. Consider re-caching the scene service.`)}if(l.ok&&1===l.value.data?.edits?.length){const t=l.value.data.edits[0],r=t?.objectIds,s=t?.fieldUpdates,a=r?.adds??[],n=r?.updates??[],d=r?.deletes??[],c=[...a,...n,...d],h=o?[...a,...s??n,...d]:[],u=Math.min(this._maximumNumberOfEditOVerrides,c.length);u<c.length&&(this._warnMaximumChangedObjectsExceeded=!0);const g=c.sort(((e,t)=>e-t));for(let e=0;e<u;++e){const t=g[e];this._attributeChangedObjectIds.add(t)}for(const e of h)this._geometryChangedObjectIds.add(e);if(this.is3DOFL&&v.i3sPatchingEnabled()&&this._geometryChangedObjectIds.size>0){const t=await this._queryGeometryOverridesFromAssociatedLayer(Array.from(this._geometryChangedObjectIds),e);if(null!=t)for(const e of t)null!=e.geometry&&this.updateGeometry(e.attributes[i.objectIdField],e.geometry)}}}_getFetchChangedObjectIdsServerGen(){const e=this.layer;if(null!=e.serviceUpdateTimeStamp?.lastUpdate)return e.serviceUpdateTimeStamp.lastUpdate;const t=e.associatedLayer;return null!=t?.serverGens?.minServerGen?t.serverGens.minServerGen:null}async _lockFeatureIds(e){const t=this._featureIdLocks;let r=!0;for(;r;){const i=new Array;for(const r of e){const e=t.get(r);e&&i.push(e)}0===i.length?r=!1:await Promise.all(i)}const i=h.createResolver(),s=i.promise;for(const a of e)t.set(a,s);return d.makeHandle((()=>{for(const r of e)t.delete(r);i.resolve()}))}get test(){const e=Array.from(this._attributeChangedObjectIds),t=this._pendingFetchChangedObjectIds,r=this;return{changedObjectIds:e,pendingFetchChangedObjectIds:t,get maximumNumberOfEditOVerrides(){return r._maximumNumberOfEditOVerrides},set maximumNumberOfEditOVerrides(e){r._maximumNumberOfEditOVerrides=e}}}},t.__decorate([p.property({constructOnly:!0})],e.I3SOverrides.prototype,"view",void 0),t.__decorate([p.property({constructOnly:!0})],e.I3SOverrides.prototype,"layer",void 0),t.__decorate([p.property({readOnly:!0})],e.I3SOverrides.prototype,"is3DOFL",null),t.__decorate([p.property()],e.I3SOverrides.prototype,"_interactiveEditingSessions",void 0),t.__decorate([p.property({readOnly:!0})],e.I3SOverrides.prototype,"sortedGeometryChangedObjectIds",null),t.__decorate([p.property({readOnly:!0})],e.I3SOverrides.prototype,"geometryOverrides",void 0),t.__decorate([p.property()],e.I3SOverrides.prototype,"_clientGeometryCache",void 0),t.__decorate([p.property()],e.I3SOverrides.prototype,"_associatedLayer",null),t.__decorate([p.property()],e.I3SOverrides.prototype,"_associatedLayerView",void 0),t.__decorate([p.property({constructOnly:!0})],e.I3SOverrides.prototype,"memoryController",void 0),t.__decorate([p.property()],e.I3SOverrides.prototype,"_attributeChangedObjectIds",void 0),t.__decorate([p.property()],e.I3SOverrides.prototype,"_geometryChangedObjectIds",void 0),t.__decorate([p.property()],e.I3SOverrides.prototype,"hasGeometryChanges",null),t.__decorate([p.property()],e.I3SOverrides.prototype,"_pendingFetchChangedObjectIds",void 0),t.__decorate([p.property()],e.I3SOverrides.prototype,"_pendingFetchAbortController",void 0),t.__decorate([p.property()],e.I3SOverrides.prototype,"_definitionExpression",null),t.__decorate([p.property()],e.I3SOverrides.prototype,"updating",null),t.__decorate([p.property()],e.I3SOverrides.prototype,"isEmpty",null),e.I3SOverrides=t.__decorate([m.subclass(j)],e.I3SOverrides);class F{constructor(e,t){this.objectId=e,this._remove=t,this._updates=new Map,this._isActive=!0}getAttribute(e){return this._updates.get(e)}setAttribute(e,t){this.isActive&&this._updates.set(e,t)}remove(){this.isActive&&(this._isActive=!1,this._remove())}get isActive(){return this._isActive}}const S=1e4,A=5e4;var L;function x(e,t,r,i){return`Displaying the edits of a SceneLayer with a${i===L.Mode?e.isGeographic?" geographic ":" projected ":" "}spatial reference (wkid:${e.wkid}) in ${r} viewing mode${i===L.SpatialReference?` with spatial reference (wkid:${t.wkid}) `:" "}is not supported. No geometry edits will be displayed for this layer.\nPlease consider re-caching the scene service or changing the ${i===L.Mode?"viewing mode":"view spatial reference"} to display edits.`}!function(e){e[e.Mode=0]="Mode",e[e.SpatialReference=1]="SpatialReference"}(L||(L={})),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
