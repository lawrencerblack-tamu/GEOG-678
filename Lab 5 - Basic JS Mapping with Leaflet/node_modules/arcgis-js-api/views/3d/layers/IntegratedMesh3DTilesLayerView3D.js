/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/Error","../../../core/Logger","../../../core/maybe","../../../core/reactiveUtils","../../../core/scheduling","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat3","../../../core/libs/gl-matrix-2/factories/mat3f64","../../../core/libs/gl-matrix-2/math/mat4","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../geometry/ellipsoidUtils","../../../geometry/projection/computeTranslationToOriginAndRotation","../../../geometry/projection/localLinearScaleFactors","../../../geometry/projection/projectVectorToVector","../../../geometry/support/buffer/BufferView","../../../layers/ILyr3DWasmPerSceneView","../../../symbols/support/unitConversionUtils","../../ViewingMode","./IntegratedMesh3DTilesViewPerformanceInfo","./interfaces","./LayerView3D","./Lyr3DWasm","./i3s/LayerElevationProvider","./support/lyr3dTypeConversions","./support/Tiles3DIntersectionHandler","../support/ElevationRange","../support/orientedBoundingBox","../webgl-engine/collections/Component/SourceGeometry","../webgl-engine/collections/Component/Material/ComponentMaterial","../webgl-engine/core/material/RenderTexture","../webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl","../webgl-engine/core/shaderLibrary/util/EllipsoidMode","../webgl-engine/lib/Attribute","../webgl-engine/lib/basicInterfaces","../webgl-engine/lib/Normals","../webgl-engine/lib/Texture","../webgl-engine/lib/VertexAttribute","../webgl-engine/materials/internal/bufferWriterUtils","../../layers/LayerView"],(function(e,t,r,i,s,o,a,n,l,c,d,u,h,m,p,y,g,f,b,w,v,_,T,x,C,M,V,L,D,P,U,E,I,O,A,F,S,H,R,B,j,k,N,G,W,z){"use strict";var $;!function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"}($||($={}));class J{constructor(){this.handle=0,this.isVisible=!1,this.components=[],this.texMemoryUsage=0,this.vboMemoryUsage=0,this.cpuMemoryUsage=0,this.textures=[]}totalMemory(){return this.texMemoryUsage+this.vboMemoryUsage+this.cpuMemoryUsage}}function Y(e){return Math.round(e/1048.576)/1e3}let q=class extends(L.LayerView3D(z)){constructor(){super(...arguments),this.type="integrated-mesh-3dtiles",this._visibleGeometryChangedSchedulerHandle=null,this._wasmLayerId=-1,this.ignoresMemoryFactor=!1,this.drapeTargetType=V.DrapeTargetType.WithoutRasterImage,this._lyrHandleToObjects=new Map,this._initialCullFace=new Map,this._suspendedHandle=null,this._dbgFlags=new Set}initialize(){if(this._dbgFlags.add($.Error),this._dbg($.VerboseAPI,"Tiles3DLayerView3D initialize() called"),!this._canProjectWithoutEngine())throw new t("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const e=D.addLayerViewToWasm(this).then((e=>{this._intersectionHandler=new E.Tiles3DIntersectionHandler(this),this.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler),this._updatingHandles.add((()=>this.slicePlaneEnabled),(e=>this._slicePlaneEnabledChange(e))),this._elevationProvider=new P.LayerElevationProvider({view:this.view,layerElevationSource:this,intersectionHandler:this._intersectionHandler}),this.view.elevationProvider.register("im",this._elevationProvider),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this),this._wasmLayerId=e;const t=this.view.resourceController.memoryController.newCache(`t3d-${this.uid}`,(e=>this._onRemoveFromCache(e)));this._memCache=t,this._suspendedHandle=s.watch((()=>this.suspended),(e=>{const t=D.getLyr3DWasm(this.view);t&&t.setEnabled(this,!e)}),s.initial),this.addHandles([s.watch((()=>this.layer.elevationInfo),(e=>this._elevationInfoChanged(e)))])})).catch((e=>{if(D.removeLayerViewFromWasm(this),this._wasmLayerId=-1,e===T.invalidLayerView)throw new t("tiles3d:addLayer-failure","The 3d tiles layer description was invalid.",{});if(e===T.wasmFailedToInit)throw new t("tiles3d:addLayer-failure","The 3d tiles layer web assembly module failed to download.",{})}));this.addResolvingPromise(e)}destroy(){this._dbg($.VerboseAPI,"Tiles3DLayerView3D destroy() called"),D.removeLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._intersectionHandler&&(this.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null),this._elevationProvider&&(this._elevationProvider.objectsChanged(this._obbs),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this),this._lyrHandleToObjects.forEach((e=>this.freeObject(e))),this._lyrHandleToObjects.clear(),this._initialCullFace.clear(),this._memCache=i.destroyMaybe(this._memCache),this._updatingHandles=i.destroyMaybe(this._updatingHandles),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null)}_visibleGeometryChanged(){null==this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle=o.schedule((()=>{this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle=null})))}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlaneEnabled=e),this.objects.forEach((t=>{const r=this._collection.getMaterial(t);r.commonMaterialParameters.hasSlicePlane=e,r.commonMaterialParameters.cullFace=e?j.CullFaceOptions.None:this._initialCullFace.get(t)}))}_elevationInfoChanged(e){const t=e?.offset??0,r=e?.unit?x.getMetersPerUnit(e?.unit):1,i=D.getLyr3DWasm(this.view);i&&i.setLayerOffset(this,t*r)}get _obbs(){return this.objects.map((e=>this._collection.getComponentObb(e)))}get wasmLayerId(){return this._wasmLayerId}get usedMemory(){let e=0;return this._lyrHandleToObjects.forEach((t=>{t.isVisible&&(e+=t.totalMemory())})),e}get unloadedMemory(){let e=0;return this._lyrHandleToObjects.forEach((t=>{t.isVisible||(e+=t.totalMemory())})),e}get performanceInfo(){let e=0,t=0,r=0,i=0,s=0,o=0;return this._lyrHandleToObjects.forEach((a=>{a.isVisible?(e+=a.texMemoryUsage,t+=a.vboMemoryUsage,s++):(r+=a.texMemoryUsage,i+=a.vboMemoryUsage,o++)})),new M.IntegratedMesh3DTilesViewPerformanceInfo(this.usedMemory,s,o,Y(t),Y(e),Y(i),Y(r))}_canProjectWithoutEngine(){if(this.view.state.viewingMode===C.ViewingMode.Local){const e=this.view.renderSpatialReference?.isWebMercator?3857:this.view.renderSpatialReference?.wkid??-1;if(3857!==e&&32662!==e)return!1}return!0}get _stage(){return this.view._stage}get _collection(){return this._stage.renderView.componentObjectCollection}get elevationOffset(){return(this.layer.elevationInfo?.offset??0)*(this.layer.elevationInfo?.unit?x.getMetersPerUnit(this.layer.elevationInfo.unit):1)}get elevationRange(){const e=this.fullExtent;return e?.zmin&&e?.zmax?new I.ElevationRange(e.zmin,e.zmax):null}getElevationRange(e){return null}get fullExtent(){return this.layer.fullExtent}get objects(){return Array.from(this._lyrHandleToObjects.values()).reduce(((e,t)=>e.concat(t.components)),new Array)}isUpdating(){const e=D.getLyr3DWasm(this.view);return!(this._wasmLayerId<0||null==e)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}async createRenderable(e){const t=e.meshData;if(null==t.data)throw new Error("meshData.data undefined");if(t.desc=JSON.parse(t.desc),null==t.desc)throw new Error("meshData.desc undefined");const r=y.fromArray(t.desc.origin),i=new Array,s=new Map,o=new J;o.handle=e.handle,this._lyrHandleToObjects.set(e.handle,o);const a=this.view.basemapTerrain.spatialReference;let n,l;if("global"===this.view.viewingMode){const e=m.create();b.computeTranslationToOriginAndRotation(f.SphericalECEFSpatialReferenceLike,r,e,a),n=d.fromMat4(u.create(),e),l=d.invert(u.create(),n)}else n=u.IDENTITY,l=u.IDENTITY;const c=m.create();h.translate(c,c,r);const _=h.getTranslation(y.create(),c);let x=null;const C=y.create();for(let d=0;d<t.desc.prims.length;d++){const e=t.desc.prims[d];if(e.ptype!==T.Lyr3DPrimitiveType.Lines||null==t.data)continue;const{positionView:i,positionAttr:s,indicesView:o}=this.getBufferViews(e,t.data.buffer,n,!1);null!=s&&null!=i&&null!=o&&(x=O.compute(s),p.add(C,x.center,r),x.center=C)}for(let d=0;d<t.desc.prims.length;d++){const e=t.desc.prims[d];if(this._dbg($.VerboseAPI,JSON.stringify(e)),e.ptype===T.Lyr3DPrimitiveType.Lines)continue;if(null==U.primTypeConversion[e.ptype]||null==t.data){this._dbg($.VerboseAPI,"[Unsupported Feature] Unsupported primitive mode ("+e.ptype+"). Skipping primitive.");continue}const c=t.desc?.materials&&null!=e.materialId?t.desc.materials[e.materialId]:null,h=null!=c?c.lightingModel:T.Lyr3DLightingModel.Unlit,m=h!==T.Lyr3DLightingModel.Unlit,{positionView:f,positionAttr:b,normalsView:M,normalsAttr:V,colorAttr:L,texCoord0Attr:D,indicesView:P}=this.getBufferViews(e,t.data.buffer,n,m);if(null==b||null==f||null==P)continue;const E={colors:null!=L,textureCoordinates:null!=D?H.TextureCoordinateAttributeType.Default:H.TextureCoordinateAttributeType.None,hasNormals:null!=M,needsNormals:m},I=b.data.length/b.size,S=(e,t)=>!e||e.data.length/e.size===I||(this._dbg($.Error,`${t} !== numPos. Skipping primitive.`),!1);if(!S(D,"numTexcoord")||!S(L,"numColors")||!S(V,"normals"))continue;const B=A.createVertexBufferLayout(E);let k;if(null!=x?k=x.clone():(k=O.compute(b),p.add(C,k.center,r),k.center=C),n!==u.IDENTITY)for(let t=0;t<f.count;t++)f.getVec(t,C),p.transformMat3(C,C,n),f.setVec(t,C);const N=B.createBuffer(b.data.length),z=new Map([[G.VertexAttribute.POSITION,b]]);null!=D&&z.set(G.VertexAttribute.UV0,D),null!=L&&z.set(G.VertexAttribute.COLOR,L),null!=V&&z.set(G.VertexAttribute.NORMALCOMPRESSED,V),z.forEach(((e,t)=>{null!=e&&W.writeDefaultAttribute(t,e,null,null,N,0)}));const J=new Uint32Array([0,P.typedBuffer.length]),Y={vertices:{data:N.buffer,count:N.byteLength/B.stride,layoutParameters:E},positionData:{positions:f.typedBuffer,indices:P.typedBuffer},indices:P.typedBuffer,componentOffsets:J};o.cpuMemoryUsage+=f.count,o.cpuMemoryUsage+=P.count;const q=this.view.renderSpatialReference,K=y.create(),Q=[1,1,1];w.localLinearScaleFactors(_,q,Q,a)||this._dbg($.Error,"Unsupported coordinate system for IM overlay"),v.projectVectorToVector(_,q,K,a);const X=this._collection.createObject({toMapSpace:g.fromValues(K[0],K[1],Q[0],Q[1]),geometry:Y,obb:k,transform:{position:_,rotationScale:l}});c&&this._collection.updateMaterial(X,(e=>{e.baseColor=c.baseColorFactor,e.usePBR=h===T.Lyr3DLightingModel.Pbr,e.hasParametersFromSource=!1,e.baseColorTexture=this._getTexture(c.baseColorTex,t,s),e.usePBR&&(e.mrrFactors=[c.metallicFactor,c.roughnessFactor,0],e.emissiveFactor=c.emissiveFactor??[0,0,0],e.metallicRoughnessTexture=this._getTexture(c.metalTex,t,s),e.emissionTexture=this._getTexture(c.emissiveTex,t,s),e.occlusionTexture=this._getTexture(c.occlusionTex,t,s),e.normalTexture=this._getTexture(c.normalTex,t,s)),e.objectOpacity=0,e.alphaDiscardMode=j.AlphaDiscardMode.Mask;const r=[];e.baseColorTexture&&r.push(e.baseColorTexture.loadPromise),e.usePBR&&e.metallicRoughnessTexture&&r.push(e.metallicRoughnessTexture.loadPromise),e.usePBR&&e.emissionTexture&&r.push(e.emissionTexture.loadPromise),e.usePBR&&e.occlusionTexture&&r.push(e.occlusionTexture.loadPromise),e.usePBR&&e.normalTexture&&r.push(e.normalTexture.loadPromise);const a=Promise.all(r);i.push(a),a.then((()=>{e.alphaDiscardMode=U.alphaModeConversion[c.alphaMode],e.objectOpacity=1,o.texMemoryUsage+=e.baseColorTexture?.glTexture?.usedMemory||0,e.usePBR&&(o.texMemoryUsage+=e.metallicRoughnessTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.emissionTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.occlusionTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.normalTexture?.glTexture?.usedMemory||0)})),e.commonMaterialParameters.doubleSided=c.isDoubleSided,e.commonMaterialParameters.cullFace=c.faceCulling?U.faceCullingConversion[c.faceCulling]:j.CullFaceOptions.Back,this._initialCullFace.set(X,e.commonMaterialParameters.cullFace),e.commonMaterialParameters.hasSlicePlane=this.slicePlaneEnabled,e.componentParameters.castShadows=F.ComponentParameterSummary.All,e.textureAlphaCutoff=c.alphaCutoff??.1,e.alphaDiscardMode=U.alphaModeConversion[c.alphaMode],e.isIntegratedMesh=!0,e.polygonOffsetEnabled=!1,e.hasOccludees=!1,e.ellipsoidMode=R.getEllipsoidMode(this.view.spatialReference)})),o.components.push(X),o.vboMemoryUsage+=this._collection.getObjectGPUMemoryUsage(X)}if(await Promise.all(i),s.forEach((e=>{o.textures.push(e)})),!this._memCache)throw new Error("no memCache");return this._memCache.put(`${o.handle}`,o,o.totalMemory()),{memUsageBytes:o.totalMemory()}}freeRenderable(e){const t=this._lyrHandleToObjects.get(e);t&&(this.freeObject(t),this._lyrHandleToObjects.delete(e))}freeObject(e){this._memCache&&this._memCache.pop(`${e.handle}`),e.components.forEach((t=>{e.textures.forEach((e=>{this._stage.remove(e)})),this._collection.destroyObject(t),this._initialCullFace.delete(t)}))}setRenderableVisibility(e,t,r){if(this._memCache){for(let i=0;i<r;++i){const r=e[i],s=t[i];if(!s)continue;const o=this._lyrHandleToObjects.get(r);o&&(this._visibleGeometryChanged(),o.isVisible=s,o.components.forEach((e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))})),this._memCache.pop(`${r}`))}for(let i=0;i<r;++i){const r=e[i],s=t[i];if(s)continue;const o=this._lyrHandleToObjects.get(r);o&&(this._visibleGeometryChanged(),o.isVisible=s,o.components.forEach((e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))})),this._memCache.put(`${r}`,o,o.totalMemory()))}}}_getTexture(e,t,r){let i=null;if(e&&t.desc?.images&&t.data?.buffer){const s=t.desc.images[e?.imageId];if(i=r.get(s),!i&&s){const o=this._stage.renderView.renderingContext.parameters.maxMaxAnisotropy,a=o>1,n=U.wrapModeConversion[e.wrapMode??T.Lyr3DUvWrapMode.None];let l=s.alpha?4:3;const c=new Uint8Array(t.data.buffer,s.data.byteOffset,s.data.byteCount);let d=null,u=null,h=null;switch(s.format){case T.Lyr3DImageFormat.Raw:s.pixelFormat===T.Lyr3DPixelFormat.R8?(d=c.buffer,l=1,u=""):s.pixelFormat===T.Lyr3DPixelFormat.Rgb8?(d=c.buffer,l=3,u=""):s.pixelFormat===T.Lyr3DPixelFormat.Rgba8&&(d=c.buffer,l=4,u="");break;case T.Lyr3DImageFormat.Dxt1:d=c.buffer,l=3,u=j.TextureEncodingMimeType.DDS_ENCODING;break;case T.Lyr3DImageFormat.Dxt5:d=c.buffer,l=4,u=j.TextureEncodingMimeType.DDS_ENCODING;break;case T.Lyr3DImageFormat.Png:u="image/png",h=document.createElement("img");break;case T.Lyr3DImageFormat.Jpeg:u="image/jpeg",h=document.createElement("img");break;case T.Lyr3DImageFormat.Etc2:u="image/ktx",h=document.createElement("img");break;case T.Lyr3DImageFormat.Astc:this._dbg($.Error,"Astc texture not supported");break;case T.Lyr3DImageFormat.Pvrtc:this._dbg($.Error,"Pvrtc texture not supported")}if(h&&u){const e=new Blob([c],{type:u});h.src=URL.createObjectURL(e),d=h}d&&null!=u&&(i=new N.Texture(d,{mipmap:a,maxAnisotropy:o,encoding:u,wrap:n,components:l,noUnpackFlip:!0,width:s.mip0Width,height:s.mip0Height}),this._stage.add(i),r.set(s,i))}}return i?new S.RenderTexture(this.view._stage.renderView.textureRepository,i.id):null}getBufferViews(e,t,r,i){let s,o,a,n,l,c,d,u=null;for(let m=0;m<e.atrbs.length;m++){const d=e.atrbs[m],p=d.view,y=void 0,g=p.byteOffset+p.byteCount,f=p.byteCount/U.lyr3DTypeToByteSize[p.type],b=[...Array(f).keys()].map((e=>e));try{switch(d.sem){case T.Lyr3DVtxAtrbSemantic.Position:3!==p.ncomp||p.type!==T.Lyr3DType.F32?this._dbg($.Error,"[Unsupported Feature] Unsupported view for Position ("+p+")"):(s=new _.BufferViewVec3f(t,p.byteOffset,y,g),o=new B.Attribute(s.typedBuffer,b,3));break;case T.Lyr3DVtxAtrbSemantic.Normal:if(3!==p.ncomp||p.type!==T.Lyr3DType.F32)this._dbg($.Error,"[Unsupported Feature] Unsupported view for Normal ("+p+")");else if(i){const e=new _.BufferViewVec3f(t,p.byteOffset,y,g),i=k.compressAndTransformNormals(e.typedBuffer,r);l=new _.BufferViewInt16(i),c=new B.Attribute(l.typedBuffer,b,2)}break;case T.Lyr3DVtxAtrbSemantic.TexCoord:2!==p.ncomp||p.type!==T.Lyr3DType.F32?this._dbg($.Error,"[Unsupported Feature] Unsupported view for Texcoord ("+p+")"):void 0===n&&(n=new B.Attribute(new _.BufferViewVec2f(t,p.byteOffset,y,g).typedBuffer,b,2));break;case T.Lyr3DVtxAtrbSemantic.Color:4===p.ncomp?(p.type===T.Lyr3DType.F32&&(u=new _.BufferViewVec4f(t,p.byteOffset,y,g)),p.type===T.Lyr3DType.U8&&(u=new _.BufferViewVec4u8(t,p.byteOffset,y,g)),p.type===T.Lyr3DType.U16&&(u=new _.BufferViewVec4u16(t,p.byteOffset,y,g))):3===p.ncomp&&(p.type===T.Lyr3DType.F32&&(u=new _.BufferViewVec3f(t,p.byteOffset,y,g)),p.type===T.Lyr3DType.U8&&(u=new _.BufferViewVec3u8(t,p.byteOffset,y,g)),p.type===T.Lyr3DType.U16&&(u=new _.BufferViewVec3u16(t,p.byteOffset,y,g))),null==u?this._dbg($.VerboseAPI,"[Unsupported Feature] Unsupported view for Color ("+p+")"):a=new B.Attribute(u.typedBuffer,b,p.ncomp);break;case T.Lyr3DVtxAtrbSemantic.FeatureIndex:break;default:this._dbg($.VerboseAPI,"[Unsupported Feature] Unsupported semantic ("+d.sem+"). Skipping vertex attribute.")}}catch(h){this._dbg($.VerboseAPI,"Error Creating buffer ("+h+"). Skipping vertex attribute.")}}if(e.index){const r=e.index.view,i=void 0,s=r.byteOffset+r.byteCount;switch(e.index.view.type){case T.Lyr3DType.U16:d=new _.BufferViewUint16(t,r.byteOffset,i,s);break;case T.Lyr3DType.U32:d=new _.BufferViewUint32(t,r.byteOffset,i,s);break;case T.Lyr3DType.U8:default:this._dbg($.Error,"[Unsupported Feature] index type not supported ("+r.type+").")}}if(null==d&&null!=s){const e=s.count;if(e<65535){const t=new Uint16Array(e);d=new _.BufferViewUint16(t)}else{const t=new Uint32Array(e);d=new _.BufferViewUint32(t)}for(let t=0;t<e;t++)d.set(t,t)}return{positionView:s,positionAttr:o,colorAttr:a,texCoord0Attr:n,indicesView:d,normalsView:l,normalsAttr:c}}_onRemoveFromCache(e){const t=D.getLyr3DWasm(this.view);t&&t.onRenderableEvicted(this,e.handle,e.totalMemory()),this.freeRenderable(e.handle)}_dbg(e,t){this._dbgFlags.has(e)&&(e===$.Error?r.getLogger(this).error(t):r.getLogger(this).warn(t))}};e.__decorate([a.property()],q.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),e.__decorate([a.property()],q.prototype,"layer",void 0),e.__decorate([a.property()],q.prototype,"elevationOffset",null),q=e.__decorate([c.subclass("esri.views.3d.layers.Tiles3DLayerView3D")],q);return q}));
