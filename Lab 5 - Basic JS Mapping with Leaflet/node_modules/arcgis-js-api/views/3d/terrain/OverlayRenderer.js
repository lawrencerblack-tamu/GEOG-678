/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../core/Evented","../../../core/MapUtils","../../../core/maybe","../../../core/PooledArray","../../../core/reactiveUtils","../../../core/SetUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat4","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../ViewingMode","../layers/interfaces","../support/debugFlags","./interfaces","./Overlay","./OverlayContent","./OverlayRenderTargets","../webgl-engine/core/shaderLibrary/ShaderOutput","../webgl-engine/core/shaderLibrary/terrain/Overlay.glsl","../../../chunks/TextureOnly.glsl","../webgl-engine/core/shaderTechnique/ShaderTechniqueRepository","../webgl-engine/effects/RenderPlugin","../webgl-engine/lib/Camera","../webgl-engine/lib/GLMaterialRepository","../webgl-engine/lib/GridLocalOriginFactory","../webgl-engine/lib/Material","../webgl-engine/lib/RenderContext","../webgl-engine/lib/RenderSlot","../webgl-engine/lib/ShadowMap","../webgl-engine/lib/SortedRenderGeometryRenderer","../webgl-engine/lib/TextureTechnique","../webgl-engine/lib/TextureTechniqueConfiguration","../webgl-engine/lib/TransparencyPassType","../webgl-engine/lib/UpdatePolicy","../webgl-engine/lighting/Lightsources","../../../chunks/OverlayCompositing.glsl","../webgl-engine/shaders/OverlayCompositingTechnique","../../support/Scheduler","../../webgl/enums","../../webgl/Texture","../../webgl/TextureDescriptor"],(function(e,r,t,s,a,i,n,o,d,l,h,c,u,p,_,g,y,R,m,T,v,b,O,x,S,w,f,D,C,P,M,E,A,W,F,I,q,L,V,k,G,N,U,H,B,z,Y){"use strict";e.OverlayRenderer=class extends D.SyncRenderPlugin{constructor(e){super(e),this._overlays=null,this._renderTargets=null,this._overlayParameters=new N.OverlayCompositingPassParameters,this.hasHighlights=!1,this._hasWater=!1,this._renderers=new Map,this._sortedDrapeSourceRenderersDirty=!1,this._sortedRenderers=new i,this._passParameters=new w.TextureOnlyPassParameters,this._materialRepository=null,this._screenToWorldRatio=1,this._localOriginFactory=null,this.unloadedMemory=0,this.ignoresMemoryFactor=!1,this._camera=new C.Camera,this.worldToPCSRatio=1,this.events=new t,this.longitudeCyclical=null,this.produces=new Map([[W.RenderSlot.DRAPED_MATERIAL,e=>e!==x.ShaderOutput.Highlight||this.hasHighlights],[W.RenderSlot.DRAPED_WATER,()=>this._hasWater]]),this._hasTargetWithoutRasterImage=!1,this._hasDrapedFeatureSource=!1,this._hasDrapedRasterSource=!1}initialize(){const e=this.view._stage.renderer.fboCache,r=this.view._stage.renderView,{waterTextures:t,stippleTextures:s,markerTextures:a}=r;this._shaderTechniques=new f.ShaderTechniqueRepository({rctx:this._rctx,viewingMode:y.ViewingMode.Local,stippleTextureRepository:s,markerTextureRepository:a,waterTextureRepository:t}),this._renderContext=new A.OverlayRenderContext(this._rctx,new F.ShadowMap(e,this.view.state.viewingMode),null),this.addHandles([n.watch((()=>t.updating),(()=>this.events.emit("content-changed")),n.syncAndInitial),n.watch((()=>this.spatialReference),(e=>this._localOriginFactory=new M.GridLocalOriginFactory(e)),n.syncAndInitial),n.on((()=>this.view.allLayerViews),"after-changes",(()=>this._sortedDrapeSourceRenderersDirty=!0))]),this._materialRepository=new P.GLMaterialRepository(r.textureRepository,this._shaderTechniques,(()=>{this.notifyChange("rendersOccludedDraped"),this.events.emit("content-changed"),this.notifyChange("updating"),this.notifyChange("isEmpty")}),(()=>this.events.emit("content-changed"))),this._bindParameters.slot=W.RenderSlot.DRAPED_MATERIAL,this._bindParameters.mainDepth=null,this._camera.near=1,this._camera.far=1e4,this._camera.relativeElevation=null,this._bindParameters.camera=this._camera,this._bindParameters.transparencyPassType=V.TransparencyPassType.NONE,this._bindParameters.newLighting.noonFactor=0,this._bindParameters.newLighting.globalFactor=0,this._bindParameters.newLighting.set([new G.AmbientLight(g.fromValues(1,1,1))]),this.addHandles(this.view.resourceController.scheduler.registerTask(H.TaskPriority.STAGE,this))}destroy(){this._renderers.forEach((e=>e.destroy())),this._renderers.clear(),this._debugTextureTechnique=a.releaseMaybe(this._debugTextureTechnique),this._passParameters.texture=a.disposeMaybe(this._passParameters.texture),this._shaderTechniques=a.destroyMaybe(this._shaderTechniques),this.disposeOverlays()}get _bindParameters(){return this._renderContext.bindParameters}get _rctx(){return this.view._stage.renderView.renderingContext}get rctx(){return this._rctx}get materialRepository(){return this._materialRepository}get screenToWorldRatio(){return this._screenToWorldRatio}get localOriginFactory(){return this._localOriginFactory}initializeRenderContext(e){this.pluginContext=e}uninitializeRenderContext(){}renderNode(){}get updating(){return this._sortedDrapeSourceRenderersDirty||s.someMap(this._renderers,(e=>e.updating))}get hasOverlays(){return null!=this._overlays&&null!=this._renderTargets}getMemoryForMaterial(e){return Array.from(this._renderers.values()).reduce(((r,t)=>r+t.getMemoryForMaterial(e)),0)}get layers(){return this._sortedDrapeSourceRenderersDirty&&this._updateSortedDrapeSourceRenderers(),this._sortedRenderers.map((e=>e.drapeSource.layer)).filter((e=>!!e))}createGeometryDrapeSourceRenderer(e){return this.createDrapeSourceRenderer(e,I.SortedRenderGeometryRenderer)}createDrapeSourceRenderer(e,r,t){const s=this._renderers.get(e);null!=s&&s.destroy();const a=new r({...t,rendererContext:this,drapeSource:e});return this._renderers.set(e,a),this._sortedDrapeSourceRenderersDirty=!0,"fullOpacity"in e&&this.addHandles(n.watch((()=>e.fullOpacity),(()=>this.events.emit("content-changed"))),e),a}removeDrapeSourceRenderer(e){if(null==e)return;const r=this._renderers.get(e);null!=r&&(this._sortedDrapeSourceRenderersDirty=!0,this._renderers.delete(e),this.removeHandles(e),r.destroy())}computeValidity(){return this._renderTargets?.computeValidity()??0}releaseRenderTargets(){this._renderTargets?.dispose()}get overlays(){return this._overlays??[]}ensureDrapeTargets(e){this._hasTargetWithoutRasterImage=!!this._overlays&&o.someSet(e,(e=>e.drapeTargetType===R.DrapeTargetType.WithoutRasterImage))}ensureDrapeSources(e){this._overlays?(this._hasDrapedFeatureSource=o.someSet(e,(e=>e.drapeSourceType===R.DrapeSourceType.Features)),this._hasDrapedRasterSource=o.someSet(e,(e=>e.drapeSourceType===R.DrapeSourceType.RasterImage))):this._hasDrapedFeatureSource=this._hasDrapedRasterSource=!1}get _needsColorWithoutRasterImage(){return this._hasDrapedRasterSource&&this._hasDrapedFeatureSource&&this._hasTargetWithoutRasterImage}ensureOverlays(e,r,t=this._bindParameters.overlayStretch){null==this._overlays&&(this._renderTargets=new O.OverlayRenderTargets(this.view._stage.renderer.fboCache),this._overlays=[new v.Overlay,new v.Overlay]),this.ensureDrapeTargets(e),this.ensureDrapeSources(r),this._bindParameters.overlayStretch=t}disposeOverlays(){this._overlays=null,this._renderTargets=a.disposeMaybe(this._renderTargets),this.events.emit("textures-disposed")}getTexture(e){if(null!=e)return e===b.OverlayContent.ColorNoRasterImage&&!this._needsColorWithoutRasterImage&&this._hasDrapedFeatureSource?this._renderTargets?.getTexture(b.OverlayContent.Color):this._renderTargets?.getTexture(e)}get running(){return this.updating}runTask(e){this._processDrapeSources(e,(()=>!0))}_processDrapeSources(e,r){let t=!1;for(const[s,a]of this._renderers){if(e.done)break;(s.destroyed||r(s))&&(a.commitChanges()&&(t=!0,e.madeProgress()))}this._sortedDrapeSourceRenderersDirty&&(this._sortedDrapeSourceRenderersDirty=!1,t=!0,this._updateSortedDrapeSourceRenderers()),t&&(null!=this._overlays&&0===this._renderers.size&&this.disposeOverlays(),this.notifyChange("updating"),this.notifyChange("isEmpty"),this.events.emit("content-changed"),this.hasHighlights=s.someMap(this._renderers,(e=>e.hasHighlights)),this.notifyChange("rendersOccludedDraped"),this._updateHasWater())}processSyncDrapeSources(){this._processDrapeSources(H.noBudget,(e=>e.updatePolicy===k.UpdatePolicy.SYNC))}get isEmpty(){return!m.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE&&!s.someMap(this._renderers,(e=>!e.isEmpty))}get hasWater(){return this._hasWater}get rendersOccludedDraped(){const e=this._renderContext.renderOccludedMask;this._renderContext.renderOccludedMask=J;const r=this._sortedRenderers.some((({renderer:e})=>e.shouldRender(this._renderContext)));return this._renderContext.renderOccludedMask=e,r}renders(e){return m.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE&&e!==b.OverlayContent.Occluded||this._sortedRenderers.some((({renderer:e})=>e.shouldRender(this._renderContext)))}get mode(){return this.isEmpty?S.OverlayMode.Disabled:this._renderTargets?.getTexture(b.OverlayContent.WaterNormal)?S.OverlayMode.EnabledWithWater:this._renderTargets?.getTexture(b.OverlayContent.Color)?S.OverlayMode.Enabled:S.OverlayMode.Disabled}updateAnimation(e){let r=!1;return this._renderers.forEach((t=>r=t.updateAnimation(e)||r)),r}updateDrapeSourceOrder(){this._sortedDrapeSourceRenderersDirty=!0}drawOverlays(e){if(this._overlays&&this._renderTargets){for(const e of this._overlays)this.longitudeCyclical?e.setupGeometryViewsCyclical(this.longitudeCyclical):e.setupGeometryViewsDirect();for(const r of this._renderTargets.targets){if(r.content===b.OverlayContent.ColorNoRasterImage&&!this._needsColorWithoutRasterImage)continue;const t=this._drawTarget(T.OverlayIndex.INNER,r,e),s=this._drawTarget(T.OverlayIndex.OUTER,r,e);(t||s)&&r.fbo.generateMipMap()}}}_drawTarget(e,r,t){const s=this._overlays[e],a=s.canvasGeometries;if(0===a.numViews)return!1;const{alignPixelEnabled:i,contentPixelRatio:n}=t;this._screenToWorldRatio=n*s.mapUnitsPerPixel/this._bindParameters.overlayStretch;const o=r.output;if(this.isEmpty||o===x.ShaderOutput.Highlight&&!this.hasHighlights||o===x.ShaderOutput.Normal&&!this.hasWater||!s.hasSomeSizedView())return!1;const d=this._rctx;if(this._camera.pixelRatio=s.pixelRatio*n,this._renderContext.output=o,this._bindParameters.alignPixelEnabled=i,this._bindParameters.screenToWorldRatio=this._screenToWorldRatio,this._bindParameters.screenToPCSRatio=this._screenToWorldRatio*this.worldToPCSRatio,this._bindParameters.slot=o===x.ShaderOutput.Normal?W.RenderSlot.DRAPED_WATER:W.RenderSlot.DRAPED_MATERIAL,r.content===b.OverlayContent.Occluded&&(this._renderContext.renderOccludedMask=J),!this.renders(r.content))return this._renderContext.renderOccludedMask=A.defaultRenderOccludedMask,!1;const l=s.resolution;this._rctx.setViewport(e===T.OverlayIndex.INNER?0:l,0,l,l);const h=2*s.resolution,c=s.resolution,u=r.fbo;u.bind(d,h,c),e===T.OverlayIndex.INNER&&(d.setClearColor(0,0,0,0),d.clearSafe(B.ClearBufferBit.COLOR_BUFFER_BIT));if(m.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE&&r.content!==b.OverlayContent.Occluded)for(let p=0;p<a.numViews;p++)this._setViewParameters(a.extents[p],s),this._ensureDebugPatternResources(s.resolution,j[e]),this._rctx.bindTechnique(this._debugTextureTechnique,this._renderContext.bindParameters,this._passParameters),this._rctx.screen.draw();return this._sortedRenderers.forAll((({drapeSource:t,renderer:i})=>{if(r.content===b.OverlayContent.ColorNoRasterImage&&t.drapeSourceType===R.DrapeSourceType.RasterImage)return;const{fullOpacity:n}=t,l=null!=n&&n<1&&o===x.ShaderOutput.Color?this.bindTemporaryFramebuffer(h,c):null;for(let e=0;e<a.numViews;e++)this._setViewParameters(a.extents[e],s),i.render(this._renderContext);if(l){u.bind(d,h,c),this._overlayParameters.texture=l.getTexture(),this._overlayParameters.opacity=n,this._overlayParameters.overlayIndex=e;const r=this.pluginContext.techniqueRepository.acquire(U.OverlayCompositingTechnique);this._rctx.bindTechnique(r,this._renderContext.bindParameters,this._overlayParameters),this._rctx.screen.draw(),r.release(),l.release()}})),d.bindFramebuffer(null),this._renderContext.renderOccludedMask=A.defaultRenderOccludedMask,!0}bindTemporaryFramebuffer(e,r){const t=this.view._stage.renderer.fboCache,s=t.acquire(e,r,"overlay tmp");return t.rctx.unbindTexture(s.fbo.colorTexture),t.rctx.bindFramebuffer(s.fbo),t.rctx.clearSafe(B.ClearBufferBit.COLOR_BUFFER_BIT),s}async reloadShaders(){await this._shaderTechniques.reloadAll()}notifyContentChanged(){this.events.emit("content-changed")}intersect(e,r,t,s){this._sortedDrapeSourceRenderersDirty&&this._updateSortedDrapeSourceRenderers();let a=0;for(const{renderer:i}of this._sortedRenderers)a=i.intersect?.(e,r,t,s,a)??a}_updateSortedDrapeSourceRenderers(){if(this._sortedRenderers.clear(),0===this._renderers.size)return;const e=this.view.map.allLayers,r=e.length;this._renderers.forEach(((t,s)=>{const a=e.indexOf(s.layer),i=a>=0,n=s.renderGroup??(i?R.DrapedRenderGroup.MapLayer:R.DrapedRenderGroup.ViewLayer),o=r*n+(i?a:0);this._sortedRenderers.push(new X(s,t,o))})),this._sortedRenderers.sort(((e,r)=>e.index-r.index))}_setViewParameters(e,r){const t=this._camera;t.viewport=[0,0,r.resolution,r.resolution],p.ortho(t.projectionMatrix,0,e[2]-e[0],0,e[3]-e[1],t.near,t.far),p.fromTranslation(t.viewMatrix,[-e[0],-e[1],0])}_updateHasWater(){const e=s.someMap(this._renderers,(e=>e.hasWater));e!==this._hasWater&&(this._hasWater=e,this.events.emit("has-water",e))}_ensureDebugPatternResources(e,r){if(_.set(this._passParameters.color,r[0],r[1],r[2]),this._passParameters.texture)return;const t=new Uint8Array(e*e*4);let s=0;for(let n=0;n<e;n++)for(let r=0;r<e;r++){const a=Math.floor(r/10),i=Math.floor(n/10);a<2||i<2||10*a>e-20||10*i>e-20?(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=255):(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=1&a&&1&i?1&r^1&n?0:255:1&a^1&i?0:128)}const a=new Y.TextureDescriptor(e);a.samplingMode=B.TextureSamplingMode.NEAREST,this._passParameters.texture=new z.Texture(this._rctx,a,t);const i=new L.TextureTechniqueConfiguration;i.hasAlpha=!0,this._debugTextureTechnique=this._shaderTechniques.acquire(q.TextureTechnique,i)}get test(){return{drapedRenderers:Array.from(this._renderers.values()),sortedDrapeSources:Array.from(this._sortedRenderers).map((({drapeSource:e})=>e)),getDrapeSourceRenderer:e=>this._renderers.get(e)}}},r.__decorate([d.property()],e.OverlayRenderer.prototype,"hasHighlights",void 0),r.__decorate([d.property()],e.OverlayRenderer.prototype,"_sortedDrapeSourceRenderersDirty",void 0),r.__decorate([d.property()],e.OverlayRenderer.prototype,"_shaderTechniques",void 0),r.__decorate([d.property({constructOnly:!0})],e.OverlayRenderer.prototype,"view",void 0),r.__decorate([d.property()],e.OverlayRenderer.prototype,"worldToPCSRatio",void 0),r.__decorate([d.property()],e.OverlayRenderer.prototype,"spatialReference",void 0),r.__decorate([d.property({type:Boolean,readOnly:!0})],e.OverlayRenderer.prototype,"updating",null),r.__decorate([d.property()],e.OverlayRenderer.prototype,"isEmpty",null),r.__decorate([d.property({readOnly:!0})],e.OverlayRenderer.prototype,"rendersOccludedDraped",null),e.OverlayRenderer=r.__decorate([u.subclass("esri.views.3d.terrain.OverlayRenderer")],e.OverlayRenderer);class X{constructor(e,r,t){this.drapeSource=e,this.renderer=r,this.index=t}}const j=[[1,.5,.5],[.5,.5,1]],Z=-2,J=E.RenderOccludedFlag.OccludeAndTransparent;e.drapedZ=Z,e.overlayRenderOccludedFlag=J,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
