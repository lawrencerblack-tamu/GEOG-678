/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../core/maybe","../../../chunks/vec32","../../../geometry/support/aaBoundingBox","./terrainUtils","../webgl-engine/lib/Normals"],(function(e,t,s,i,r,n){"use strict";class d{constructor(){this.indices=null,this.indexCount=0,this.edgeIndicesStartIndex=0,this.poleIndicesStartIndex=0,this.vertexAttributes=null,this.edgeVerticesStartIndex=0,this.poleVerticesStartIndex=0,this.maxEdgeVertexCount=0,this.boundingBox=i.empty(),this.numVerticesPerSide=0,this.minu=0,this.minv=0,this.maxu=1,this.maxv=1,this.outerEdgesOffsetAndLength=[0,0,0,0,0,0,0,0]}release(){this.vertexAttributes=t.releaseMaybe(this.vertexAttributes),this.indices=null}reset(){this.indices=null,this.vertexAttributes=null,i.empty(this.boundingBox),this.numVerticesPerSide=0}getEdgeFirstVertexIndex(e){return this.outerEdgesOffsetAndLength[2*e]}getEdgeCount(e){return this.outerEdgesOffsetAndLength[2*e+1]}getEdgeVertexIndex(e,t){return this.getEdgeAttributeIndex(e,t)}getEdgeVertexPosition(e,t,i,r){this._getEdgeVertexRaw(this.getEdgeAttributeIndex(e,r),t),s.add(t,t,i)}getEdgeNormal(e,t,s){const{typedBuffer:i,typedBufferStride:r}=this.vertexAttributes.normalCompressed;n.decompressNormal(t,i,this.getEdgeAttributeIndex(e,s),r)}setEdgeNormalFromValues(e,t,s,i,r){this._setNormal(this.getEdgeAttributeIndex(e,t),s,i,r)}setEdgeVertexFromValuesRawPositionUV(e,t,s,i,r,n,d){const o=this.getEdgeAttributeIndex(e,t);this.vertexAttributes.position.setValues(o,s,i,r),this._setUV(o,n,d)}setEdgeVertexFromValuesRawPositionUVNormal(e,t,s,i,r,n,d,o,u,g){const h=this.getEdgeAttributeIndex(e,t);this.vertexAttributes.position.setValues(h,s,i,r),this._setUV(h,n,d),this._setNormal(h,o,u,g)}_getEdgeVertexRaw(e,t){this.vertexAttributes.position.getVec(e,t)}_setNormal(e,t,s,i){const{typedBuffer:r,typedBufferStride:d}=this.vertexAttributes.normalCompressed;n.compressNormal(r,e,t,s,i,d)}_setUV(e,t,s){u(this.vertexAttributes.uv0,e,t,s)}getEdgeAttributeIndex(e,t){return r.internalAssert(0<=t&&t<this.getEdgeCount(e)),this.getEdgeFirstVertexIndex(e)+t}}const o=16384;function u(e,t,s,i){e.setValues(t,s*o,i*o)}e.PatchGeometry=d,e.encodeUVInBuffer=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
