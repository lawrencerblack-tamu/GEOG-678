/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/colorUtils","../../../../../core/handleUtils","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/Logger","../../../../../core/RandomLCG","../../../../../core/accessorSupport/decorators/subclass","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../support/elevationInfoUtils","../../../../../symbols/support/ElevationInfo","../../SegmentLabels3D","../../SnappingVisualizer3D","../meshFastUpdateUtils","../settings","../../visualElements/ExtendedLineVisualElement","../../visualElements/OutlineVisualElement","../../visualElements/VerticesVisualElement","../../../layers/graphics/elevationAlignmentUtils","../../../layers/graphics/ElevationContext","../../../layers/graphics/GraphicState","../../../webgl-engine/lib/Material","../../../../draw/DrawGraphicTool","../../../../draw/DrawOperation","../../../../draw/drawSurfaces","../../../../draw/support/helpMessageUtils3d"],(function(e,t,i,a,n,r,s,o,l,c,h,u,p,d,m,v,w,y,g,f,E,V,_,D,G,T,S,I,L,b){"use strict";e.DrawGraphicTool3D=class extends S.DrawGraphicTool{constructor(e){super(e),this._activeVertexVisualElement=null,this._createGraphicState=null,this._outlineVisualElement=null,this._verticesVisualElement=null,this._verticalLineVisualElement=null,this._settings=new g.Settings({getTheme:()=>this.view.effectiveTheme}),this.geometryType=null,this.type="draw-3d"}initialize(){const{mode:e,offset:t,unit:i}=this.elevationInfo;this.internalGraphicsLayer.elevationInfo=new m({mode:e,offset:t,unit:i});const a=this.geometryToPlace;a&&this.addHandles([r.watch((()=>a.vertexSpace.origin),(()=>this.graphic?.notifyMeshTransformChanged()),r.sync),r.watch((()=>({vertexAttributes:a.vertexAttributes,alwaysUpdate:{}})),(()=>this.graphic?.notifyGeometryChanged()),r.sync)])}normalizeCtorArgs(e){if(!e.elevationInfo){const t=e.hasZ??!0;return{...e,elevationInfo:d.getEffectiveElevationInfo(t)}}return e}initializeGraphic(e){const{view:t}=this,i=this._createGraphicState=new G.GraphicState({graphic:e});return a.handlesGroup([t.maskOccludee(e),t.trackGraphicState(i),r.watch((()=>({element:this._outlineVisualElement,isDraped:i.isDraped})),(({element:e,isDraped:t})=>{e&&(e.isDraped=t)}),r.syncAndInitial),this._setupLoadingIndicator(i),...y.meshTransformFastUpdateHandles(i,t)])}updateDrawMeshTooltipInfo(e){const{graphic:t,sketchOptions:i,view:a}=this;e.sketchOptions=i,e.viewType=a.type,e.helpMessage=b.getDrawMeshHelpMessage(t,this.view),this.updateElevation(e.elevation)}makeDrawOperation(){const{geometryType:e}=this,t="circle"!==e&&"rectangle"!==e;return new I.DrawOperation({view:this.view,manipulators:this.manipulators,geometryType:S.geometryTypeToDrawOperationGeometryType(e),drawingMode:this.mode,hasZ:this.hasZ,defaultZ:this.defaultZ,snapToSceneEnabled:this.snapToScene,drawSurface:new L.SceneDrawSurface(this.view,this.elevationInfo,[this.internalGraphicsLayer]),elevationDrawSurface:new L.ElevationDrawSurface(this.elevationInfo,this.defaultZ,this.view,this.internalGraphicsLayer),hasM:!1,elevationInfo:this.elevationInfo,snappingManager:this.snappingManager,snappingVisualizer:new w.SnappingVisualizer3D,segmentLabels:t?new v.SegmentLabels3D:null,labelOptions:this.sketchOptions.labels,isDraped:this._createGraphicState?this._createGraphicState.isDraped:"on-the-ground"===d.getEffectiveElevationMode(this.hasZ,this.elevationInfo),cursor:this.cursor,constraintsEnabled:!0})}onActiveVertexChanged(e){const{view:t}=this;if(this._activeVertexVisualElement)return this._activeVertexVisualElement.vertices=[e],this._activeVertexVisualElement.recreate(),this._updateVerticalLineVisualElement(e),a.makeHandle();const s=this._settings,o=s.manipulators.vertex,l=new V.VerticesVisualElement({view:t,spatialReference:t.spatialReference,vertices:[e],elevationInfo:this.internalGraphicsLayer.elevationInfo,size:o.size,outlineSize:o.outlineSize,renderOccluded:o.renderOccluded,attached:!1,isDecoration:!0});this._activeVertexVisualElement=l;const c=s.visualElements.zVerticalLine,h=new f.ExtendedLineVisualElement({view:t,extensionType:c.extensionType,innerWidth:1,attached:!1,writeDepthEnabled:!1,renderOccluded:T.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0});this._verticalLineVisualElement=h;const u=a.handlesGroup([r.watch((()=>s.visualElements.zVerticalLine),(e=>e.apply(h)),r.initial),r.watch((()=>({selectedColor:i.unitRGBAFromColor(s.colors.selected),outlineColor:i.unitRGBAFromColor(s.manipulators.vertex.outlineColor)})),(({selectedColor:e,outlineColor:t})=>{l.color=e,l.outlineColor=t}),r.initial),a.makeHandle((()=>{this._activeVertexVisualElement=n.destroyMaybe(this._activeVertexVisualElement),this._verticalLineVisualElement=n.destroyMaybe(this._verticalLineVisualElement)}))]);return l.attached=!0,this._updateVerticalLineVisualElement(e),u}_updateVerticalLineVisualElement(e){const t=this._verticalLineVisualElement;if(!t)return;const{renderCoordsHelper:i,elevationProvider:a}=this.view;u.set(C,e[0],e[1],e[2]),x.setFromElevationInfo(this.elevationInfo),C[2]=_.evaluateElevationAlignmentAtPoint(C,a,x,i);i.toRenderCoords(C,this.view.spatialReference,C)?(t.setStartEndFromWorldDownAtLocation(C),t.attached=!0):t.attached=!1}onOutlineChanged(e){if(this._outlineVisualElement)return this._outlineVisualElement.geometry=e,a.makeHandle();const t=this.internalGraphicsLayer.elevationInfo,{view:i}=this,s=this._settings,o=new E.OutlineVisualElement({view:i,geometry:e,elevationInfo:t,isDraped:this._createGraphicState?this._createGraphicState.isDraped:"on-the-ground"===d.getEffectiveElevationMode(this.hasZ,t),attached:!1,isDecoration:!0});this._outlineVisualElement=o;const l=a.handlesGroup([r.watch((()=>s.visualElements.lineGraphics.outline),(e=>e.apply(o)),r.initial),r.watch((()=>s.visualElements.lineGraphics.shadowStyle),(e=>e.apply(o)),r.initial),a.makeHandle((()=>{this._outlineVisualElement=n.destroyMaybe(this._outlineVisualElement)}))]);return o.attached=!0,o.laserlineEnabled=!0,l}onRegularVerticesChanged(e){if(this._verticesVisualElement)return this._verticesVisualElement.vertices=e,a.makeHandle();const{view:t}=this,s=this._settings,o=s.manipulators.vertex,l=new V.VerticesVisualElement({view:t,spatialReference:t.spatialReference,vertices:e,elevationInfo:this.internalGraphicsLayer.elevationInfo,size:o.size,outlineSize:o.outlineSize,renderOccluded:o.renderOccluded,attached:!1,isDecoration:!0}),c=a.handlesGroup([r.watch((()=>({color:i.unitRGBAFromColor(s.manipulators.vertex.color),outlineColor:i.unitRGBAFromColor(s.manipulators.vertex.outlineColor)})),(({color:e,outlineColor:t})=>{l.color=e,l.outlineColor=t}),r.initial),a.makeHandle((()=>{this._verticesVisualElement=n.destroyMaybe(this._verticesVisualElement)}))]);return l.attached=!0,this._verticesVisualElement=l,c}updateGraphicGeometry(e){if("mesh"!==this.geometryType||"point"!==e?.type)super.updateGraphicGeometry(e);else{const t=this.geometryToPlace;t?.centerAt(e);const i=this._graphic;t&&i.geometry===t||(i.geometry=t)}}_setupLoadingIndicator(e){const{drawOperation:t}=this;if(!this.geometryToPlace)return t.loading=!1,null;t.loading=!0;const i=a.makeHandle((()=>{t.loading=!1}));let n;const s=()=>n&&cancelAnimationFrame(n),o=()=>{s(),n=requestAnimationFrame((()=>i.remove()))};return a.handlesGroup([r.when((()=>e.displaying),o,{...r.syncAndInitial,once:!0}),a.makeHandle(s),i])}},t.__decorate([s.property({constructOnly:!0})],e.DrawGraphicTool3D.prototype,"elevationInfo",void 0),t.__decorate([s.property({constructOnly:!0})],e.DrawGraphicTool3D.prototype,"geometryType",void 0),t.__decorate([s.property()],e.DrawGraphicTool3D.prototype,"type",void 0),t.__decorate([s.property({constructOnly:!0})],e.DrawGraphicTool3D.prototype,"view",void 0),e.DrawGraphicTool3D=t.__decorate([h.subclass("esri.views.3d.interactive.editingTools.draw.DrawGraphicTool3D")],e.DrawGraphicTool3D);const x=new D.ElevationContext,C=p.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
