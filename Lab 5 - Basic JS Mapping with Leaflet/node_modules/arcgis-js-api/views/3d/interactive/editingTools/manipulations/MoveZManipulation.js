/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../Color","../../../../../core/colorUtils","../../../../../core/Evented","../../../../../core/mathUtils","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/libs/gl-matrix-2/math/mat4","../../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../Manipulator3D","../../manipulatorUtils","../../RenderObject","../dragEventPipeline3D","../ManipulatorType","../settings","./config","./Manipulation","./moveUtils","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/lib/Material","../../../../interactive/dragEventPipeline","../../../../interactive/interfaces"],(function(e,t,a,r,i,n,o,s,l,c,d,u,p,h,m,_,M,g,f,v,b,w,O,y){"use strict";class R extends f.Manipulation{constructor(e){super(),this._radius=g.discRadius,this.events=new r,this._tool=e.tool,this._view=e.view;const t=new M.Settings({getTheme:()=>this._view.effectiveTheme});this._settings=t,null!=e.radius&&(this._radius=e.radius);const a=this._view.effectiveTheme.accentColor;this._materials={materialUnfocused:p.createManipulatorMaterial(this._createDarkenedColor(a,1,.25),w.RenderOccludedFlag.Occlude),materialFocused:p.createManipulatorMaterial(this._createDarkenedColor(a,1,0),w.RenderOccludedFlag.Occlude),materialOccludedUnfocused:p.createManipulatorMaterial(this._createDarkenedColor(a,.7,0),t.zManipulator.renderOccluded),materialOccludedFocused:p.createManipulatorMaterial(this._createDarkenedColor(a,.85,0),t.zManipulator.renderOccluded)},this._themeHandle=o.watch((()=>this._view.effectiveTheme.accentColor),(e=>{const t=this._createDarkenedColor(e,1,.25),a=this._createDarkenedColor(e,1,0),r=this._createDarkenedColor(e,.7,0),i=this._createDarkenedColor(e,.85,0),{materialUnfocused:n,materialFocused:o,materialOccludedUnfocused:s,materialOccludedFocused:l}=this._materials;n.setParameters({color:t}),o.setParameters({color:a}),s.setParameters({color:r}),l.setParameters({color:i})})),this._createManipulator(),this.forEachManipulator((e=>this._tool.manipulators.add(e)))}destroy(){this._themeHandle=n.removeMaybe(this._themeHandle),this._manipulator.applyObjectTransform=U,this.forEachManipulator((e=>{this._tool.manipulators.remove(e),e.destroy()}))}forEachManipulator(e){e(this._manipulator,_.ManipulatorType.TRANSLATE_Z)}createGraphicDragPipeline(e,t,a){const r=t.graphic.geometry.spatialReference;return v.createGraphicMoveDragPipeline(t.graphic,a,(t=>this.createDragPipeline(((a,r,i,n,o)=>(({steps:r,cancel:i}=e(a,r,i,n,o)),t(a,r,i))),r)))}createDragPipeline(e,t){const a=this._view;return O.createManipulatorDragEventPipeline(this._manipulator,((r,i,n,o,s)=>{const l=i.next((e=>({...e,manipulatorType:_.ManipulatorType.TRANSLATE_Z}))).next(m.screenToZConstrained(a,r.renderLocation,t)).next(O.addScreenDelta());e(r,l,n,o,s)}))}get radius(){return this._radius}set radius(e){e!==this._radius&&(this._radius=e,this._updateManipulator())}_updateManipulator(){const e=this._settings,t=this._radius/g.discRadius,a=e.zManipulator.height*t,r=e.zManipulator.coneHeight*t,i=e.zManipulator.coneWidth*t,n=e.zManipulator.width*t,o=[d.fromValues(0,0,0),d.fromValues(0,0,a)],c=[d.fromValues(0,0,0),d.fromValues(0,0,a+r)],u=e=>{const t=l.create();if(s.translate(t,t,[0,0,a]),s.rotateX(t,t,Math.PI/2),e){const a=1+2*e/i;s.scale(t,t,[a,a,a])}return t},p=u(0),{materialUnfocused:m,materialFocused:_,materialOccludedUnfocused:M,materialOccludedFocused:f}=this._materials,v=b.createTubeGeometry(m,o,n/2,16,!1),w=b.createConeGeometry(m,r,i/2,16,!1);w.transformation=p,this._manipulator.renderObjects=[new h.RenderObject(w,y.ManipulatorStateFlags.Unfocused),new h.RenderObject(v,y.ManipulatorStateFlags.Unfocused),new h.RenderObject(w.instantiate({material:_}),y.ManipulatorStateFlags.Focused),new h.RenderObject(v.instantiate({material:_}),y.ManipulatorStateFlags.Focused),new h.RenderObject(w.instantiate({material:M}),y.ManipulatorStateFlags.Unfocused),new h.RenderObject(v.instantiate({material:M}),y.ManipulatorStateFlags.Unfocused),new h.RenderObject(w.instantiate({material:f}),y.ManipulatorStateFlags.Focused),new h.RenderObject(v.instantiate({material:f}),y.ManipulatorStateFlags.Focused)],this._manipulator.radius=n/2+2,this._manipulator.collisionType={type:"line",paths:[c]}}_createManipulator(){const e=this._view,t=new u.Manipulator3D({view:e,autoScaleRenderObjects:!1,worldSized:!1,selectable:!1,cursor:"ns-resize",elevationInfo:this.elevationInfo,worldOriented:!0,collisionPriority:1.6});t.applyObjectTransform=t=>{const a=e.state.camera,r=F;e.renderCoordsHelper.toRenderCoords(this._manipulator.elevationAlignedLocation,r);const n=c.dist(a.eye,r),o=a.computeRenderPixelSizeAtDist(n),s=c.subtract(D,r,a.eye);c.normalize(s,s);const l=T;e.renderCoordsHelper.worldUpAtPosition(F,l);const d=Math.abs(c.dot(s,l)),u=c.cross(D,s,l),p=c.cross(D,u,l),h=i.clamp(d,.01,1),m=1-Math.sqrt(1-h*h)/h/a.fullWidth,_=this._settings,M=this._radius/g.discRadius,f=_.zManipulator.width*M;c.scale(p,c.normalize(p,p),(1/m-1)*n+o*f),t[12]-=D[0],t[13]-=D[1],t[14]-=D[2]},this._manipulator=t,this._updateManipulator()}_createDarkenedColor(e,r,i){const n=a.darken(e,i);return n.a*=r,t.toUnitRGBA(n)}get test(){return{manipulator:this._manipulator}}}const F=d.create(),D=d.create(),T=d.create(),U=()=>{};e.MoveZManipulation=R,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
