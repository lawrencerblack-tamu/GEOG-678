/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/libs/gl-matrix-2/math/vec2","../../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../chunks/boundedPlane","../../../../../geometry/support/plane","../../../../../geometry/support/vectorStacks","../../../analysis/Slice/ResizeManipulator","../../../analysis/Slice/sliceToolUtils","../dragEventPipeline3D","../ManipulatorType","./extentUtils","../../../support/geometryUtils/ray","../../../../interactive/dragEventPipeline","../../../../interactive/editGeometry/interfaces","../../../../interactive/editGeometry/operations/UpdateVertices","../../../../interactive/editGeometry/support/editPlaneUtils","../../../../interactive/tooltip/ExtentTooltipInfos"],(function(t,e,a,i,s,r,n,o,c,l,p,d,h,u,S,_,y,g,m){"use strict";class z{get zMax(){if(!this._zMaxDirty)return this._zMax;const t=this._editGeometryOperations.data;if(t.geometry.hasZ){const e=t.coordinateHelper;this._zMax=Number.NEGATIVE_INFINITY;for(const a of t.components)for(const t of a.vertices){const a=e.getZ(t.pos)??0;this._zMax=Math.max(a,this._zMax)}}else this._zMax=0;return this._zMaxDirty=!1,this._zMax}constructor(t,i,s,n,o){this._tool=t,this._graphicState=i,this._editGeometryOperations=s,this._bounds=n,this._preserveAspectRatioStep=o,this._resizeHandles=[{direction:[1,0]},{direction:[1,1]},{direction:[0,1]},{direction:[-1,1]},{direction:[-1,0]},{direction:[-1,-1]},{direction:[0,-1]},{direction:[1,-1]}],this._scaleTooltipInfo=null,this._displayBoundsStart=r.create(),this._displayBoundsMarginStart=0,this._startScale=a.create(),this._endScale=a.create(),this._sizeStart=null,this._zMax=0,this._zMaxDirty=!0;const l=this._tool,p=l.view;this.resizeManipulators=this._resizeHandles.map((t=>{const e=new c.ResizeManipulator(p,t);return l.addHandles([e.events.on("grab-changed",(t=>this._onResizeGrab(t))),this._createResizeDragPipeline(e,t)]),e})),l.manipulators.addMany(this.resizeManipulators),l.addHandles([l.on("graphic-scale-start",(t=>{e.set(this._startScale,t.xScale,t.yScale),e.set(this._endScale,t.xScale,t.yScale)})),l.on("graphic-scale",(t=>{e.set(this._endScale,t.xScale,t.yScale)})),l.on("graphic-scale-stop",(()=>{e.set(this._startScale,0,0),e.set(this._endScale,0,0)})),this._graphicState.on("changed",(()=>{"resize"!==l.inputState?.type&&(this._zMaxDirty=!0)}))])}destroy(){this.forEachManipulator((t=>{this._tool.manipulators.remove(t),t.destroy()}))}forEachManipulator(t){this.resizeManipulators.forEach((e=>t(e,d.ManipulatorType.SCALE)))}updateManipulators(t,e){this.resizeManipulators.forEach(((a,i)=>{l.updateResizeHandle(a,this._resizeHandles[i],t,e)}))}getUpdatedTooltipInfo(){return this.resizeManipulators.some((t=>t.focused))?this._computeScaleTooltipInfo():null}_computeScaleTooltipInfo(){const t=this._tool,e=this._scaleTooltipInfo??=new m.ExtentScaleTooltipInfo({sketchOptions:t.sketchOptions}),a=t.graphic.geometry;if(null==a)return null;const i=h.mapPlaneAutoSize2D(this._bounds.mapBounds,this.zMax,a.spatialReference);return null==i?null:(e.xSize=i.xSize,e.ySize=i.ySize,null!=this._sizeStart&&this.resizeManipulators.some((t=>t.dragging))?(e.xScale=i.xSize.value/this._sizeStart.xSize.value,e.yScale=i.ySize.value/this._sizeStart.ySize.value):(e.xScale=1,e.yScale=1),e)}_onResizeGrab({action:t,screenPoint:e}){const a=this._tool,i=this._bounds;if("start"!==t||!e||!a.graphic.geometry)return;const s=u.fromScreenNormalized(a.view.state.camera,e);n.intersectRay(i.displayBounds.plane,s,o.sv3d.get())&&(i.backupMapBounds(),r.copy(i.displayBounds,this._displayBoundsStart),this._displayBoundsMarginStart=i.displayBoundsMargin,this._sizeStart=h.mapPlaneAutoSize2D(i.mapBoundsStart,this.zMax,a.graphic.geometry.spatialReference),a.inputState={type:"resize"})}_createResizeDragPipeline(t,e){const a=this._tool,i=a.graphic;return S.createManipulatorDragEventPipeline(t,((t,s,r)=>{null!=a.inputState&&(s.next((t=>("start"===t.action&&a.emit("graphic-scale-start",{graphic:i,xScale:1,yScale:1}),t))).next(p.screenToRenderPlane(a.view,this._displayBoundsStart.plane)).next((t=>({...t,handle:e}))).next(this._resizeDragRenderPlaneToFactors()).next(...this._preserveAspectRatioStep()).next(this._resizeDragUpdateGeometry()).next((t=>{const e={graphic:i,xScale:t.factor1,yScale:t.factor2};switch(t.action){case"start":case"update":a.emit("graphic-scale",e);break;case"end":a.inputState=null,a.emit("graphic-scale-stop",e)}return t})),r.next((()=>{null!=a.inputState&&a.emit("graphic-scale-stop",{graphic:i,xScale:1,yScale:1}),a.cancel()})))}))}_resizeDragRenderPlaneToFactors(){const t=this._bounds;return e=>{const a=this._displayBoundsStart,s=e.handle.direction,r=t.displayBoundsMargin,n=this._displayBoundsMarginStart,c=i.copy(o.sv3d.get(),a.origin);i.scaleAndAdd(c,c,a.basis1,-s[0]),i.scaleAndAdd(c,c,a.basis2,-s[1]);const p=i.subtract(o.sv3d.get(),e.renderEnd,c),d=i.subtract(o.sv3d.get(),e.renderStart,c),h=l.isDiagonalResizeHandle(e.handle),u=l.calculateDiagonalResizeHandleScale(a),S=l.calculateDiagonalResizeHandleScale(t.displayBounds)/u,_=(t,e)=>{if(0===t)return 1;let a=i.length(e),s=.5*t*i.dot(e,p)/a;const o=s<0?-1:1;if(h){s+=(a-.5*t*i.dot(e,d)/a)*o*S}const c=a<1.5*n?1:x;return a=Math.max(a-n,x),o>0&&(s-=r),o*Math.max(o*(s/a),c)};return{...e,factor1:_(s[0],a.basis1),factor2:_(s[1],a.basis2)}}}_resizeDragUpdateGeometry(){const t=this._tool,n=this._bounds;return o=>{const c=i.copy(s.create(),n.mapBoundsStart.origin);i.scaleAndAdd(c,c,n.mapBoundsStart.basis1,-o.handle.direction[0]),i.scaleAndAdd(c,c,n.mapBoundsStart.basis2,-o.handle.direction[1]);const l=e.set(a.create(),n.mapBoundsStart.basis1[0],n.mapBoundsStart.basis1[1]);e.normalize(l,l);const p=[];for(const t of this._editGeometryOperations.data.components)p.push(...t.vertices);const d="start"===o.action?_.AccumulationBehavior.NEW_STEP:_.AccumulationBehavior.ACCUMULATE_STEPS,h=this._editGeometryOperations.scaleVertices(p,c,l,o.factor1,o.factor2,d,y.AccumulationType.REPLACE);return r.copy(n.mapBoundsStart,n.mapBounds),g.apply(h,n.mapBounds),t.graphic.geometry=this._editGeometryOperations.data.geometry,o}}}const x=1e-6;t.ExtentScale=z,t.scaleEpsilon=x,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
