/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../../../../Color","../../../../../core/colorUtils","../../../../../core/Handles","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/screenUtils","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/Point","../../Manipulator3D","../../manipulatorUtils","../../RenderObject","../support/PickRequest","../../visualElements/LaserlineVisualElement","../../../webgl-engine/lib/GeometryUtil","../../../../interactive/ManipulatorCollection","../../../../interactive/ToolIntersector"],(function(t,e,i,a,s,n,r,l,o,h,c,u,d,_,p,g){"use strict";class w{constructor(t){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=r.create();const{analysisViewData:e,manipulators:i,toolState:a,view:s,visible:n}=t;this._analysisViewData=e,this._toolState=a,null!=i?(this._manipulators=i,this._isManipulatorsOwner=!1):this._manipulators=new p.ManipulatorCollection,this._view=s,this._intersector=g.newToolIntersector(s.state.viewingMode);const l=h.createManipulatorMaterial(this._handleColor),u=[new c.RenderObject(_.createSphereGeometry(l,1,32,32))],w=new o.Manipulator3D({view:s,renderObjects:u});w.available=!1,w.radius=b,w.interactive=!1,this._manipulators.add(w),this._cursorManipulator=w,this._cursorManipulatorMaterial=l,this._laserLine=new d.LaserlineVisualElement({view:s,attached:!0,style:{glowWidth:v,glowFalloff:M,innerWidth:m},isDecoration:!0}),this._updateVisibility(n??!0)}destroy(){this._listenerHandles=a.destroyMaybe(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=a.destroyMaybe(this._manipulators):this._manipulators=null,this._laserLine=a.destroyMaybe(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){const t=this._laserLine.testData;return{laserLineRenderer:null!=t?{heightManifoldEnabled:t.heightManifoldEnabled,heightManifoldTarget:t.heightManifoldTarget,pointDistanceEnabled:t.pointDistanceEnabled,pointDistanceOrigin:t.pointDistanceOrigin,pointDistanceTarget:t.pointDistanceTarget,lineVerticalPlaneEnabled:t.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(t){this._destroyed||this._visible===t||this._updateVisibility(t)}_updateVisibility(t){this._visible=t,this._laserLine.visible=t,t?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach((({manipulator:t})=>this._removeVertexManipulator(t))),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(t,e){const i=this._manipulators.intersect(t,e);return i?.metadata}pick(t){const e=this._view.spatialReference,i=n.screenPointObjectToArray(t.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const a=this._intersector.results.min,s=r.create();if(!a.getIntersectionPoint(s))return null;const o=this._view.renderCoordsHelper.fromRenderCoords(s,new l({spatialReference:e}));return null==o?null:new u.PickResult(s,o)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const t=h.createManipulatorMaterial(this._handleColor),e=[new c.RenderObject(_.createSphereGeometry(t,1,32,32))],i=new o.Manipulator3D({view:this._view,renderObjects:e});return i.radius=b,this._manipulators.add(i),{manipulator:i,material:t}}_removeVertexManipulator(t){this._manipulators.remove(t)}_updateVertexManipulators(){const{viewData:t}=this._analysisViewData,e=this._analysisViewData.path?this._analysisViewData.path.vertices:[],i=this.vertexManipulators;y(i,e.length,(()=>this._createVertexManipulator()),(({manipulator:t})=>this._removeVertexManipulator(t))),i.forEach((({manipulator:i},a)=>{i.metadata=e[a],i.renderLocation=t.positionsRenderCoords[a],i.cursor=0===a&&"drawing"===this._toolState.polygonState?"crosshair":null})),"drawing"===this._toolState.polygonState&&null!=this._analysisViewData.stagedPoint?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return e.multiplyOpacityToUnitRGBA(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:t}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return null!=this._analysisViewData.stagedPoint?this._analysisViewData.stagedPoint:null!=t?this._analysisViewData.path.getVertexPositionAsPoint(t):this._analysisViewData.path.lastPoint;case"editing":return null!=t?this._analysisViewData.path.getVertexPositionAsPoint(t):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const t="measured"!==this._toolState.polygonState&&this._toolState.active,e=this._getFocusPoint();if(t&&null!=e){const t=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(e,t),this._laserLine.heightManifoldTarget=t}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new i,this._listenerHandles.add([s.watch((()=>this._toolState.polygonState),(()=>this._updateLaserLine())),s.watch((()=>this._analysisViewData.viewData),(()=>this._updateAll()),s.sync),s.watch((()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint})),(()=>this._updateLaserLine())),s.watch((()=>this._toolState.active),(()=>this._updateAll())),s.watch((()=>this._view.effectiveTheme.accentColor),(i=>{const a=e.multiplyOpacityToUnitRGBA(i,.5);for(const{material:t}of this.vertexManipulators)t.setParameters({color:a});this._cursorManipulatorMaterial.setParameters({color:a});const s=t.toUnitRGB(i),n=t.toUnitRGB(e.getContrast(i)),r=.75*i.a,l=this._laserLine,o=l.style;l.style={...o,glowColor:s,innerColor:n,globalAlpha:r}}),{initial:!0,equals:e.colorEquals})])}_destroyListeners(){this._listenerHandles=a.destroyMaybe(this._listenerHandles)}}function y(t,e,i,a){for(;t.length<e;)t.push(i());if(a)for(;t.length>e;){a(t.pop())}else t.length=e}const v=8,M=8,m=1,b=5;return w}));
