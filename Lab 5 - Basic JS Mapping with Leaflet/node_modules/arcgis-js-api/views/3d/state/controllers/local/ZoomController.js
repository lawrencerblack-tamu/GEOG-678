/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/mathUtils","../../../../../core/screenUtils","../../../../../core/Logger","../../../../../core/has","../../../../../core/RandomLCG","../../../../../core/Error","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/libs/gl-matrix-2/math/vec2","../../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/support/plane","../../../camera/constraintUtils","../../../camera/constraintUtils/ConstraintOptions","../../../camera/constraintUtils/ConstraintTypes","../../../camera/constraintUtils/InteractionType","../../../layers/VoxelWasm","../InteractiveController","../../utils/navigationUtils"],(function(t,i,e,r,s,a,n,o,c,h,m,l,p,_,u,C,d,P,y,g,D){"use strict";t.ZoomController=class extends g.InteractiveController{constructor(){super(...arguments),this._tmpP=p.create(),this._tmpDir=p.create(),this._tmpN=p.create(),this._tmpP0=m.create(),this._tmpPoi=p.create(),this._tmpRayDir=p.create(),this.dragBeginPoint=r.createScreenPointArray(),this._normalizedAnchorPoint=m.create(),this._constraintOptions=new C.ConstraintOptions(d.ConstraintTypes.ALL,P.InteractionType.ZOOM,0,this.startCamera,p.create()),this._plane=_.create()}get _intersectionHelper(){return this.view.sceneIntersectionHelper}begin(t){if(!this.active)return;h.copy(this.dragBeginPoint,t),D.normalizeCoordinate(this.startCamera,t,this._normalizedAnchorPoint);const i=this._intersectionHelper.intersectScreenFreePointFallback(t,this._tmpP,0===this.view.map.ground.opacity?D.contentIntersectorOptions:{});l.subtract(this._tmpDir,this._tmpP,this.startCamera.eye);const r=l.length(this._tmpDir);l.normalize(this._tmpDir,this._tmpDir);const s=Math.abs(this.view.camera.position.z);let a=e.clamp(Math.min(D.pivotDistanceModifier,1/Math.abs(l.dot(b,this._tmpDir)))*s,D.distanceClampValues[0],D.distanceClampValues[1]);const n=this.view._stage.renderView.getMinimalDepthForArea(y.getVoxelWasm(this.view),t[0],t[1],this.view.state.camera,D.screenPixelArea);a=null!=n?n:a,a=i?Math.min(a,r):a,l.scale(this._tmpDir,this._tmpDir,a),l.add(this._tmpP,this.startCamera.eye,this._tmpDir),l.subtract(this._tmpN,this.startCamera.eye,this.startCamera.center),l.normalize(this._tmpN,this._tmpN),this._tmpN[1]<0&&l.negate(this._tmpN,this._tmpN),_.fromPositionAndNormal(this._tmpP,this._tmpN,this._plane)}update(t){if(!this.active)return;D.intersectPlaneFromScreenPoint(this._plane,this.currentCamera,this.dragBeginPoint,this._tmpPoi)||l.copy(this._tmpPoi,this.currentCamera.center),D.normalizeCoordinate(this.currentCamera,t,this._tmpP0);let i=4*(this._tmpP0[1]-this._normalizedAnchorPoint[1]);h.copy(this._normalizedAnchorPoint,this._tmpP0),l.subtract(this._tmpRayDir,this._tmpPoi,this.currentCamera.eye);const e=l.length(this._tmpRayDir);let r=e*(1-i);this._constraintOptions.interactionDirection&&(l.copy(this._constraintOptions.interactionDirection,this._tmpRayDir),l.scale(this._constraintOptions.interactionDirection,this._constraintOptions.interactionDirection,Math.sign(i)/e));const s=this.view.state.constraints.minimumPoiDistance;i>=0&&r<s&&(r=s,i=-(r-e)/e),Math.abs(e-r)<1e-6||(l.scale(this._tmpRayDir,this._tmpRayDir,i),this.currentCamera.eye=l.add(v,this.currentCamera.eye,this._tmpRayDir),l.lerp(v,this.currentCamera.center,this._tmpPoi,i),this._tmpPoi[2]>this.startCamera.center[2]?v[2]=Math.max(this.startCamera.center[2],v[2]):v[2]=Math.min(this.startCamera.center[2],v[2]),this.currentCamera.center=v,this._constraintOptions.interactionFactor=u.pixelDistanceToInteractionFactor(h.distance(this.dragBeginPoint,t)),u.applyAll(this.view,this.currentCamera,this._constraintOptions),this.commitCamera())}end(){this.active&&this.finishController()}},t.ZoomController=i.__decorate([c.subclass("esri.views.3d.state.controllers.local.ZoomController")],t.ZoomController);const v=p.create(),b=p.fromValues(0,0,1);Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
