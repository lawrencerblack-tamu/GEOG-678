/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Logger","../../../core/mathUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/support/Ellipsoid","../../ViewingMode","../support/mathUtils"],(function(t,e,i,o,r,a,n,s,l,c,d,u){"use strict";function p(t){return{min:-2e5,max:4*t.radius}}t.Constraints=class extends i{constructor(t){super(t),this.collision=new _,this.distance=1/0,this.minimumPoiDistance=4,this.tilt=null}get altitude(){return this.mode===d.ViewingMode.Local?null:this._get("altitude")||null}set altitude(t){this.mode!==d.ViewingMode.Local?this._set("altitude",t):o.getLogger(this).warn("Altitude constraint is ignored in local scenes")}clampAltitude(t){return this.altitude?r.clamp(t,this.altitude.min,this.altitude.max):t}clampTilt(t,e){if(!this.tilt)return e;const i=this.tilt(t);return r.clamp(e,i.min,i.max)}clampDistance(t){return Math.min(t,this.distance)}createDefaultTilt(){return this.mode===d.ViewingMode.Local?this._createDefaultTiltLocal():this._createDefaultTiltGlobal()}createConstantMaxTilt(t){return(e,i=g)=>(i.min=h.min,i.max=t,i)}_createDefaultTiltLocal(){const t=this.collision.enabled?u.makePiecewiseLinearFunction([[4e3,h.max],[1e4,r.deg2rad(88)],[6e6,r.deg2rad(88)]]):()=>h.max;return(e,i=g)=>(i.min=h.min,i.max=t(e),i)}_createDefaultTiltGlobal(){const t=this.collision.enabled?u.makePiecewiseLinearFunction([[4e3,h.max],[5e4,r.deg2rad(88)],[6e6,r.deg2rad(88)],[2e7,h.min]]):u.makePiecewiseLinearFunction([[3e5,h.max],[3e6,r.deg2rad(88)],[6e6,r.deg2rad(88)],[2e7,h.min]]);return(e,i=g)=>(i.min=h.min,i.max=t(e),i)}},e.__decorate([a.property()],t.Constraints.prototype,"altitude",null),e.__decorate([a.property({readOnly:!0})],t.Constraints.prototype,"collision",void 0),e.__decorate([a.property()],t.Constraints.prototype,"distance",void 0),e.__decorate([a.property({readOnly:!0})],t.Constraints.prototype,"minimumPoiDistance",void 0),e.__decorate([a.property()],t.Constraints.prototype,"tilt",void 0),e.__decorate([a.property({constructOnly:!0})],t.Constraints.prototype,"mode",void 0),t.Constraints=e.__decorate([l.subclass("esri.views.3d.state.Constraints")],t.Constraints);const m=p(c.earth),h={min:r.deg2rad(.5),max:r.deg2rad(179.5)},g={min:0,max:0};let _=class extends i{constructor(){super(...arguments),this.enabled=!0,this.elevationMargin=5}};e.__decorate([a.property({type:Boolean})],_.prototype,"enabled",void 0),e.__decorate([a.property({type:Number})],_.prototype,"elevationMargin",void 0),_=e.__decorate([l.subclass("esri.views.3d.state.Constraints.CollisionConstraint")],_),t.TiltRange=h,t.earthAltitudeConstraint=m,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
