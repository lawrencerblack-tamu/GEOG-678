/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/PooledArray","../../../../core/screenUtils","../../../../core/unitUtils","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../../support/elevationInfoUtils","../../../ViewingMode","../../support/hitTest","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/intersectorUtils"],(function(e,t,r,n,i,s,o,l,c,a,u,d,h,p,y,g){"use strict";class f{constructor(e,r,n){this.viewingMode=e,this._forEachLayer=r,this._view=n,this._externalIntersectionHandlers=new t,this._tolerance=p.defaultTolerance,this._tmpRay=l.create(),this._tmpRegion=o.create(),this._validateHUDIntersector=p.newIntersector(this.viewingMode),this._validateHUDIntersector.options.hud=!1}intersectScreen(e,t,r){return this.intersectRay(this._getPickRay(e,this._tmpRay),v(this.viewingMode),t,r)}intersectScreenFreePointFallback(e,t,r){return this.intersectRayFreePointFallback(this._getPickRay(e,this._tmpRay),t,r)}intersectRayFreePointFallback(e,t,r){return this.intersectRay(e,v(this.viewingMode),t,r)||this._intersectRayFreePointLocal(e,t)}intersectRay(e,t,r,n){return t.options.selectionMode=!1,t.options.store=y.StoreResults.MIN,this.computeIntersection(e,t,n),!!t.results.min&&t.results.min.getIntersectionPoint(r)}getCenterRayWithSubpixelOffset(e,t,r=.5,n=.5){return e.getRenderCenter(T,r,n),T[0]+=.0466,T[1]-=.0123,h.fromRenderAtEye(e,T,t)}intersectIntersectorScreen(e,t,r){this.computeIntersection(this._getPickRay(e,this._tmpRay),t,r)}intersectToolIntersectorScreen(e,t,r){const n=this._getPickRay(e,this._tmpRay);this.intersectToolIntersectorRay(n,t,r)}intersectToolIntersectorRay(e,t,r){t.options.selectionMode=!0,this.computeIntersection(e,t,r);const n=t.results.min;!!this._view.basemapTerrain&&this._view.basemapTerrain.opaque||g.isValidIntersectorResult(n)&&n.intersector!==y.IntersectorType.TERRAIN||(t.options.selectionMode=!1,this.computeIntersection(e,t,r))}setTolerance(e=p.defaultTolerance){this._tolerance=e}addIntersectionHandler(e){this._externalIntersectionHandlers.push(e),this._externalIntersectionHandlers.sort(((e,t)=>e.type===y.IntersectorType.TERRAIN?1:t.type===y.IntersectorType.TERRAIN?-1:0))}removeIntersectionHandler(e){null!=this._externalIntersectionHandlers.removeUnordered(e)&&this._externalIntersectionHandlers.sort(((e,t)=>e.type===y.IntersectorType.TERRAIN?1:t.type===y.IntersectorType.TERRAIN?-1:0))}_getPickRay(e,t){const r=this._view.state.camera;return h.fromScreen(r,e,t)}_intersectRayFreePointLocal(e,t){return this.viewingMode!==u.ViewingMode.Local||null==e||i.add(t,e.origin,i.normalize(c.sv3d.get(),e.direction)),!1}intersectElevationFromScreen(e,t,r=0,n=null){return this._intersectElevation(this._getPickRay(e,this._tmpRay),t,r,n)}_intersectElevation(e,t,s=0,o=null){if(null==e)return null;const l=this._view,{renderCoordsHelper:u}=l,h=n.getMetersPerVerticalUnitForSR(l.spatialReference),f=null!=t?t.mode:"absolute-height",m=a.getElevationOffsetInMeters(t)/h,R=("on-the-ground"!==f?m+s:0)*h/u.unitInMeters,{camera:I}=l.state;if("absolute-height"===f){const t=u?.getAltitude(I.eye),r=i.dot(i.normalize(w,e.direction),u.worldUpAtPosition(I.eye,M));if(t<R&&r<0||t>=R&&r>0)return null;if(u.intersectInfiniteManifold(e,R,w)){const e=d.computeMapPointFromVec3d(l,w);return e.z??=0,e.z-=m,e}return null}const _=r.castRenderScreenPointArray3(c.sv3d.get());I.projectToRenderScreen(e.origin,_);const v=new P(null,this._forEachLayer),{slicePlane:b}=l,T=null!=b?g.sliceFilterPredicate(b):null,U=p.newIntersector(this.viewingMode);U.options.store=y.StoreResults.MIN,U.options.verticalOffset=R;const x=e.origin,S=i.add(c.sv3d.get(),x,e.direction);U.reset(x,S,I),U.point=_;const A=o?"type"in o&&"graphics"===o.type?e=>e.layerUid!==o.uid:e=>e.graphicUid!==o.uid:null;switch(f){case"relative-to-scene":{const e=e=>(!A||A(e))&&!!e.lastValidElevationBB;U.intersect(v.layers,_,this._tolerance,null,e),this._externalIntersectionHandlers.forAll((e=>{if(e.type===y.IntersectorType.I3S||e.type===y.IntersectorType.TERRAIN||e.type===y.IntersectorType.TILES3D){const t=e.slicePlaneEnabled?T:null;e.intersect(U,t,U.rayBegin,U.rayEnd,_)}}));break}case"on-the-ground":case"relative-to-ground":this._externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlaneEnabled?T:null;e.intersect(U,t,U.rayBegin,U.rayEnd,_)}}))}if(U.results.min.getIntersectionPoint(w)){const e=d.computeMapPointFromVec3d(l,w);return e.z=s,e}return null}computeIntersection(e,t,n,s){if(null==e)return;const o=this._view.state.camera,l=r.castRenderScreenPointArray3(c.sv3d.get());o.projectToRenderScreen(e.origin,l);const a=new P(n,this._forEachLayer);t.options.selectOpaqueTerrainOnly=!n||!("include"in n||"exclude"in n);const u=e.origin,d=i.add(c.sv3d.get(),e.origin,e.direction);t.reset(u,d,o),t.intersect(a.layers,l,this._tolerance);const h=this._view.slicePlane,p=null!=h?g.sliceFilterPredicate(h):null;t.intersect(a.sliceableLayers,l,this._tolerance,p);const y=n&&(n.requiresGroundFeedback||n.enableDraped);this._externalIntersectionHandlers.forAll((e=>{const r=e.layerUid,n=Array.isArray(r),i=n?r:[r];n&&(t.options.filteredLayerUids=[]);let o=!1;for(const s of i){!a.filterLayerUid(s)?n&&t.options.filteredLayerUids.push(s):o=!0}if(t.options.isFiltered=!o,e.isGround&&y||!t.options.isFiltered){const r=e.slicePlaneEnabled?p:null;e.intersect(t,r,u,d,l,s)}}));const f=c.sv3d.get(),m=this._view.basemapTerrain;if(n&&n.enableDraped&&null!=m.spatialReference&&t.results.ground.getIntersectionPoint(f)){const e=m.overlayManager.renderer,r=this._view.renderCoordsHelper.spatialReference,n=c.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(f,n,m.spatialReference),n[2]=this._view.elevationProvider?.getElevation(f[0],f[1],f[2],r,"ground")??0,e.intersect(t,n,t.results.ground,(e=>a.filterRenderGeometry(e)))}t.sortResults(),this._processHUDResults(t)}_processHUDResults(e){const t=e.results.hud;o.copy(this._tmpRegion,o.negativeInfinity);const r=this._view.state.camera,n=[],i=this._tmpRegion,s=e=>{const t=new I(e);r.projectToRenderScreen(e.target.center,t.screenPoint),t.screenPoint[0]=Math.floor(t.screenPoint[0]),t.screenPoint[1]=Math.floor(t.screenPoint[1]),n.push(t),o.expandPointInPlace(i,t.screenPoint)};e.sortResults(t.all),null!=t.min.dist&&s(t.min);for(const o of t.all)t.min.target.object!==o.target.object&&t.max.target.object!==o.target.object&&s(o);if(null!=t.max.dist&&t.max.target.object!==t.min.target.object&&s(t.max),!n.length)return;i[0]===i[2]&&(i[2]+=1),i[1]===i[3]&&(i[3]+=1);const l=r.fullWidth,c=r.fullHeight,a=Math.max(0,i[0]-m),u=Math.max(0,i[1]-m),d=Math.min(o.width(i)+2*m,l-a),h=Math.min(o.height(i)+2*m,c-u);if(d<=0||h<=0)return;const p=new Uint8Array(d*h*4);this._view._stage.renderer.readHUDVisibility(a,u,d,h,p);let g=!0;const f=null==e.results.max.dist;let _=0;for(const o of n)for(const t of R){const r=4*(Math.min(o.screenPoint[0]+t[0],l)-i[0]+(Math.min(o.screenPoint[1]+t[1],c)-i[1])*d);if(!(r<0||r>=p.length)&&p[r]){g&&(e.results.min.copy(o.result),g=!1),f&&e.results.max.copy(o.result),e.options.store===y.StoreResults.ALL&&e.results.all.splice(_++,0,o.result);break}}}}const m=1,R=(()=>{const e=[],t=m;for(let r=-t;r<=t;r++)for(let n=-t;n<=t;n++)e.push([n+t,r+t]);return e})();class I{constructor(e){this.result=e,this.screenPoint=r.createRenderScreenPointArray3()}}let _;function v(e){return _&&_.viewingMode===e||(_=p.newIntersector(e)),_}class P{constructor(e,t){this.layers=new Array,this.sliceableLayers=new Array,this.include=e?.include,this.exclude=e?.exclude,t((e=>{e.pickable&&this.filterLayerUid(e.apiLayerUid)&&(e.sliceable?this.sliceableLayers:this.layers).push(e)}))}filterLayerUid(e){const{include:t,exclude:r}=this;return null==e?null==t&&null==r:(null==t||t.has(e))&&(null==r||!r.has(e))}filterRenderGeometry(e){return this.filterLayerUid(e.layerUid)}}function b(e){return"object"==typeof e&&"intersect"in e}const w=s.create(),M=s.create(),T=r.createRenderScreenPointArray3();e.SceneIntersectionHelper=f,e.isIntersectionHandler=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
