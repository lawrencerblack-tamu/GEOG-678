/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/vec2","../../../chunks/NoiseTextureAtlas.glsl","./NoiseTextureAtlasConfiguration","./NoiseTextureAtlasDimensions","./NoiseTextureAtlasTechnique","../webgl-engine/lib/glUtil3D","../../webgl/FramebufferObject","../../webgl/TextureDescriptor"],(function(e,t,r,s,i,o,a,n,h,u,c,l,d,_,T,p,x){"use strict";e.NoiseTextureAtlas=class extends r{constructor(e){super(e),this._needsRender=!0,this._passParameters=new c.NoiseTextureAtlasPassParameters,this._fbo=new p.FramebufferObject(e.context.renderContext.rctx,new x.TextureDescriptor(d.atlasSize)),this._vao=T.createQuadVAO(e.context.renderContext.rctx)}get _techniqueRepository(){return this.context.techniqueRepository}get textureAtlas(){return null!=this._texture?null!=this._weatherMapTechnique&&this._weatherMapTechnique.compiled&&this._needsRender&&(this._texture=this._render(l.NoiseTextureRenderMode.WeatherMap)):null!=this._fullTechnique&&this._fullTechnique.compiled&&(this._texture=this._render(l.NoiseTextureRenderMode.Full)),this._texture}_setDirty(){this._needsRender=!0}updateWeatherMap(e){this._passParameters.weatherTile[0]===e[0]&&this._passParameters.weatherTile[1]===e[1]||(u.copy(this._passParameters.weatherTile,e),this._setDirty())}destroy(){this._fullTechniqueCached=s.releaseMaybe(this._fullTechniqueCached),this._weatherMapTechniqueCached=s.releaseMaybe(this._weatherMapTechniqueCached),this._fbo=s.disposeMaybe(this._fbo),this._vao=s.disposeMaybe(this._vao)}get _fullTechnique(){if(null==this._fullTechniqueCached){const e=new l.NoiseTextureAtlasTechniqueConfiguration;e.mode=l.NoiseTextureRenderMode.Full,this._fullTechniqueCached=this._techniqueRepository.acquire(_.NoiseTextureAtlasTechnique,e)}return this._fullTechniqueCached}get _weatherMapTechnique(){if(null==this._weatherMapTechniqueCached){const e=new l.NoiseTextureAtlasTechniqueConfiguration;e.mode=l.NoiseTextureRenderMode.WeatherMap,this._weatherMapTechniqueCached=this._techniqueRepository.acquire(_.NoiseTextureAtlasTechnique,e)}return this._weatherMapTechniqueCached}_render(e){if(null==this._vao||null==this._fbo)return null;const t=e===l.NoiseTextureRenderMode.Full?this._fullTechnique:this._weatherMapTechnique,r=this.context.renderContext.rctx,s=r.getViewport();r.setViewport(0,0,d.atlasSize,d.atlasSize),r.bindFramebuffer(this._fbo);const i=r.bindTechnique(t,null,this._passParameters);return r.bindVAO(this._vao),i.assertCompatibleVertexAttributeLocations(this._vao),r.gl.drawArrays(r.gl.TRIANGLE_STRIP,0,4),r.setViewport(s.x,s.y,s.width,s.height),this._needsRender=!1,this._fbo.colorTexture}},t.__decorate([i.property({constructOnly:!0})],e.NoiseTextureAtlas.prototype,"context",void 0),t.__decorate([i.property({readOnly:!0})],e.NoiseTextureAtlas.prototype,"_techniqueRepository",null),e.NoiseTextureAtlas=t.__decorate([h.subclass("esri.views.3d.environment.NoiseTextureAtlas")],e.NoiseTextureAtlas),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
