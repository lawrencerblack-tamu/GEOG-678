/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../core/mathUtils","../../../core/unitUtils","../../../core/libs/gl-matrix-2/math/mat4","../../../chunks/vec32","../../../geometry/ellipsoidUtils","../../../geometry/spatialReferenceEllipsoidUtils","../../../geometry/projection/projectPointToVector","../../../geometry/projection/projectVectorToPoint","../../../geometry/projection/projectVectorToVector","../../../geometry/support/Axis","../../../geometry/support/coordinateSystem","../../../geometry/support/plane","../../../geometry/support/vector","../../../geometry/support/vectorStacks","../../../layers/graphics/dehydratedFeatureUtils","../../ViewingMode"],(function(t,e,i,o,r,s,n,a,c,l,d,p,h,m,u,y,g){"use strict";class S{constructor(t,e,i,o){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=i,this._coordinateSystem=o,this._tmpCoordinateSystem=p.create(o),this.referenceEllipsoid=s.getReferenceEllipsoid(e),this.sphericalPCPF=n.getSphericalPCPF(e)}set extent(t){t&&p.setExtent(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return p.altitudeAt(this._coordinateSystem,t)}setAltitude(t,e,i=t){return p.setAltitudeAt(this._coordinateSystem,i,e,t)}setAltitudeOfTransformation(t,e){p.setAltitudeOfTransformation(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return p.normalAt(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,i){return p.axisAt(this._coordinateSystem,t,e,i)}basisMatrixAtPosition(t,e){const i=this.worldBasisAtPosition(t,d.Axis.X,u.sv3d.get()),r=this.worldBasisAtPosition(t,d.Axis.Y,u.sv3d.get()),s=this.worldBasisAtPosition(t,d.Axis.Z,u.sv3d.get());return o.set(e,i[0],i[1],i[2],0,r[0],r[1],r[2],0,s[0],s[1],s[2],0,0,0,0,1),e}headingAtPosition(t,i){const o=this.worldUpAtPosition(t,u.sv3d.get()),r=this.worldBasisAtPosition(t,d.Axis.Y,u.sv3d.get()),s=m.angleAroundAxis(i,r,o);return e.rad2deg(s)}intersectManifoldClosestSilhouette(t,e,i){return p.elevate(this._coordinateSystem,e,this._tmpCoordinateSystem),p.intersectRayClosestSilhouette(this._tmpCoordinateSystem,t,i),i}intersectManifold(t,e,i){p.elevate(this._coordinateSystem,e,this._tmpCoordinateSystem);const o=u.sv3d.get();return p.intersectRay(this._tmpCoordinateSystem,t,o)?r.copy(i,o):null}intersectInfiniteManifold(t,e,i){if(this.viewingMode===g.ViewingMode.Global)return this.intersectManifold(t,e,i);p.elevate(this._coordinateSystem,e,this._tmpCoordinateSystem);const o=this._tmpCoordinateSystem.value,s=u.sv3d.get();return h.intersectRay(o.plane,t,s)?r.copy(i,s):null}toRenderCoords(t,e,i){return y.isDehydratedPoint(t)?a.projectPointToVector(t,e,this.spatialReference):l.projectVectorToVector(t,e,i,this.spatialReference)}fromRenderCoords(t,e,i=null){return y.isDehydratedPoint(e)?(null!=i&&(e.spatialReference=i),c.projectVectorToPoint(t,this.spatialReference,e)?e:null):l.projectVectorToVector(t,this.spatialReference,e,i)?e:null}static create(t,e){switch(t){case g.ViewingMode.Local:return new S(g.ViewingMode.Local,e,i.getMetersPerUnitForSR(e),p.createLocal());case g.ViewingMode.Global:return new S(g.ViewingMode.Global,e,1,p.createGlobal(e))}}static renderUnitScaleFactor(t,e){return i.getMetersPerCartesianUnitForSR(t)/i.getMetersPerCartesianUnitForSR(e)}}t.RenderCoordsHelper=S,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
