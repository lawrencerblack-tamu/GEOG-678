/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/Point","../../../ViewingMode","../cameraUtils","../PropertiesPool","./PointOfInterest","../../../support/Yield"],(function(e,t,r,o,i,n,a,s,c,d,l,p,u,h,_,y,g,m){"use strict";const f=Array;e.CameraOnSurface=class extends g.PointOfInterest{constructor(e){super(e),this._dirty=!1,this._propertiesPool=new y.PropertiesPool({location:u,renderLocation:f},this),this._estimatedSurfaceAltitude=0,this._pendingElevationQueryController=null,this.renderLocation=p.create(),this._tmpPoint=new u}initialize(){if(this.scheduler&&this.addHandles(this.scheduler.registerTask(this.task,this)),this.runTask(),this.map){const e=()=>this._setDirty();this.addHandles(i.on((()=>this.map?.ground?.layers),"change",e,{onListenerAdd:e,onListenerRemove:e}))}this._updateRenderLocation()}destroy(){this._cancelPendingRequest(),this._propertiesPool=r.destroyMaybe(this._propertiesPool)}get _camera(){return this.state.contentCamera}get location(){const e=this._propertiesPool.get("location");return e.spatialReference=this.state.spatialReference,this.renderCoordsHelper.fromRenderCoords(this.renderLocation,e),e}get scale(){const e=this._camera,t=l.distance(e.eye,this.renderLocation),r={renderCoordsHelper:this.renderCoordsHelper,state:{camera:e}};return _.distanceToScale(r,t,0)}get updating(){return this._dirty||null!=this._pendingElevationQueryController}updateRenderLocation(){this._setDirty(),this._updateRenderLocation()}_setDirty(){this._dirty||(this._dirty=!0,this.notifyChange("updating"))}_cancelPendingRequest(){const e=this._pendingElevationQueryController;e&&(this._pendingElevationQueryController=null,e.abort(),this.notifyChange("updating"))}get running(){return!this._pendingElevationQueryController&&this._dirty}runTask(){if(this._cancelPendingRequest(),this._dirty=!1,this.notifyChange("updating"),!this.map?.ground)return this._updateSurfaceAltitude(0),m.Yield;const e=this.state.spatialReference;this._tmpPoint.spatialReference=e,this.renderCoordsHelper.fromRenderCoords(this._camera.eye,this._tmpPoint);const t=(this._tmpPoint.z??0)>S&&this.renderCoordsHelper.viewingMode===h.ViewingMode.Global&&(e.isWGS84||e.isWebMercator);let r=new AbortController;return this.map.ground.queryElevation(this._tmpPoint,{signal:r.signal,cache:this.cache,minDemResolution:t?v:0}).then((e=>this._updateSurfaceAltitude(e.geometry.z??0))).catch((e=>{o.isAbortError(e)||this._updateSurfaceAltitude(0)})).catch((()=>{})).then((()=>{this._pendingElevationQueryController===r&&(this._pendingElevationQueryController=null,this.notifyChange("updating")),r=null})),this._pendingElevationQueryController=r,m.Yield}_updateSurfaceAltitude(e){this._estimatedSurfaceAltitude!==e&&(this._estimatedSurfaceAltitude=e,this._updateRenderLocation())}_updateRenderLocation(){this.renderCoordsHelper.setAltitude(C,this._estimatedSurfaceAltitude,this._camera.eye),l.exactEquals(this._get("renderLocation"),C)||(this._set("renderLocation",l.copy(this._propertiesPool.get("renderLocation"),C)),this.notifyChange("renderLocation"))}},t.__decorate([n.property({constructOnly:!0})],e.CameraOnSurface.prototype,"scheduler",void 0),t.__decorate([n.property({constructOnly:!0})],e.CameraOnSurface.prototype,"cache",void 0),t.__decorate([n.property({constructOnly:!0})],e.CameraOnSurface.prototype,"task",void 0),t.__decorate([n.property()],e.CameraOnSurface.prototype,"location",null),t.__decorate([n.property({constructOnly:!0})],e.CameraOnSurface.prototype,"map",void 0),t.__decorate([n.property()],e.CameraOnSurface.prototype,"renderLocation",void 0),t.__decorate([n.property()],e.CameraOnSurface.prototype,"scale",null),t.__decorate([n.property()],e.CameraOnSurface.prototype,"updating",null),e.CameraOnSurface=t.__decorate([d.subclass("esri.views.3d.support.CameraOnSurface")],e.CameraOnSurface);const C=p.create(),S=1e5,v=1e6;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
