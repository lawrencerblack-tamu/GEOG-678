/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/mathUtils","../../../../core/maybe","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/ellipsoidUtils","../../../../geometry/Point","../../../../geometry/projection/projectBoundingRect","../../../../geometry/support/aaBoundingRect","../debugFlags","../PropertiesPool","./PointOfInterest","../../../support/Yield"],(function(e,t,r,a,i,s,o,c,n,u,d,l,p,h,f,_,S,y,g){"use strict";const m=Array;e.CenterOnSurface=class extends y.PointOfInterest{constructor(e){super(e),this._propertiesPool=new S.PropertiesPool({location:p,renderLocation:m},this),this._currentSurfaceAltitude=0,this._latestSurfaceAltitude=0,this.distance=0,this.renderLocation=d.create(),this.updating=!1}initialize(){this._frameWorker=this.scheduler.registerTask(this.task,this),this.runTask()}destroy(){this._frameWorker=a.removeMaybe(this._frameWorker),this._propertiesPool=a.destroyMaybe(this._propertiesPool)}get _camera(){return this.state.contentCamera}get location(){const e=this._propertiesPool.get("location");return e.spatialReference=this.state.spatialReference,this.renderCoordsHelper.fromRenderCoords(this.renderLocation,e),e}updateRenderLocation(){this.updating=!0,this._updateRenderLocation()}get estimatedSurfaceAltitude(){return this._latestSurfaceAltitude}get running(){return this.updating}runTask(){return this._latestSurfaceAltitude=this.estimateSurfaceAltitudeAtCenter(),this._updateRenderLocation(),this.updating=!1,g.Yield}_updateRenderLocation(){const e=C;let t=this._calculateSurfaceIntersection(this._currentSurfaceAltitude,e);const r=this._currentSurfaceAltitude!==this._latestSurfaceAltitude;!t&&r&&(t=this._calculateSurfaceIntersection(this._latestSurfaceAltitude,e),t&&(this._currentSurfaceAltitude=this._latestSurfaceAltitude));const a=O;t&&this._latestSurfaceAltitudeChangesDistanceSignificantly(e,a)&&(u.copy(e,a),this._currentSurfaceAltitude=this._latestSurfaceAltitude),t?this.distance=u.distance(this._camera.eye,e):(u.scale(e,this._camera.viewForward,this._get("distance")),u.add(e,e,this._camera.eye)),u.exactEquals(this._get("renderLocation"),e)||this._set("renderLocation",u.copy(this._propertiesPool.get("renderLocation"),e))}_calculateSurfaceIntersection(e,t){const a=this._camera;if(!this.renderCoordsHelper.intersectInfiniteManifold(a.ray,e,t))return!1;if(this.state.isGlobal){const r=l.getReferenceEllipsoid(this.renderCoordsHelper.spatialReference).radius,i=r+e,s=u.squaredLength(a.eye),o=s<i*i,c=u.distance(a.eye,t);if(o&&c>r/4){const e=i-Math.sqrt(s);return u.scale(t,a.viewForward,e),u.add(t,t,a.eye),!0}}else{const e=this.surface?.ready?this.surface.extent:null;null!=e&&h.projectBoundingRect(e,this.surface?.spatialReference,L,this.renderCoordsHelper.spatialReference)&&(t[0]=r.clamp(t[0],L[0],L[2]),t[1]=r.clamp(t[1],L[1],L[3]))}return!0}_latestSurfaceAltitudeChangesDistanceSignificantly(e,t){if(this._latestSurfaceAltitude===this._currentSurfaceAltitude||null==e)return!1;if(this._calculateSurfaceIntersection(this._latestSurfaceAltitude,t)){if(_.debugFlags.TESTS_DISABLE_OPTIMIZATIONS)return!0;const r=this._camera.eye,a=u.distance(r,e),i=u.distance(r,t);if(Math.abs(i-a)/a>A)return!0}return!1}},t.__decorate([i.property({constructOnly:!0})],e.CenterOnSurface.prototype,"scheduler",void 0),t.__decorate([i.property({constructOnly:!0})],e.CenterOnSurface.prototype,"task",void 0),t.__decorate([i.property()],e.CenterOnSurface.prototype,"distance",void 0),t.__decorate([i.property({constructOnly:!0})],e.CenterOnSurface.prototype,"estimateSurfaceAltitudeAtCenter",void 0),t.__decorate([i.property({readOnly:!0})],e.CenterOnSurface.prototype,"location",null),t.__decorate([i.property({readOnly:!0})],e.CenterOnSurface.prototype,"renderLocation",void 0),t.__decorate([i.property()],e.CenterOnSurface.prototype,"updating",void 0),e.CenterOnSurface=t.__decorate([n.subclass("esri.views.3d.support.CenterOnSurface")],e.CenterOnSurface);const A=.05,C=d.create(),O=d.create(),L=f.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
