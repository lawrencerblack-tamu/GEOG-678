/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../core/libs/gl-matrix-2/math/mat3","../../../core/libs/gl-matrix-2/factories/mat3f64","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/math/quat","../../../core/libs/gl-matrix-2/factories/quatf64","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../chunks/vec42","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../geometry/ellipsoidUtils","../../../geometry/spatialReferenceEllipsoidUtils","../../../geometry/projection/computeTranslationToOriginAndRotation","../../../geometry/projection/projectBuffer","../../../geometry/projection/projectors","../../../geometry/support/plane","../../../geometry/support/spatialReferenceUtils","../../../geometry/support/vectorStacks","../../ViewingMode","./dito","../webgl-engine/lib/Attribute"],(function(t,a,e,s,r,i,n,o,h,c,d,l,u,f,g,_,m,b,p,M,S){"use strict";class Q{constructor(t=o.ZEROS,a=X,e=i.IDENTITY){this._data=[t[0],t[1],t[2],a[0],a[1],a[2],e[0],e[1],e[2],e[3]]}clone(){const t=new Q;return t._data=this._data.slice(),t}invalidate(){this._data[3]=-1}get isValid(){return this._data[3]>=0}static fromData(t){const a=new Q;return a._data=t.slice(),a}static fromJSON(t){return new Q(t.center,t.halfSize,t.quaternion)}copy(t){this._data=t.data.slice()}get center(){return n.set(b.sv3d.get(),this._data[0],this._data[1],this._data[2])}get centerX(){return this._data[0]}get centerY(){return this._data[1]}get centerZ(){return this._data[2]}getCenter(t){return t[0]=this._data[0],t[1]=this._data[1],t[2]=this._data[2],t}set center(t){this._data[0]=t[0],this._data[1]=t[1],this._data[2]=t[2]}setCenter(t,a,e){this._data[0]=t,this._data[1]=a,this._data[2]=e}get halfSize(){return n.set(b.sv3d.get(),this._data[3],this._data[4],this._data[5])}get halfSizeX(){return this._data[3]}get halfSizeY(){return this._data[4]}get halfSizeZ(){return this._data[5]}getHalfSize(t){return t[0]=this._data[3],t[1]=this._data[4],t[2]=this._data[5],t}set halfSize(t){this._data[3]=t[0],this._data[4]=t[1],this._data[5]=t[2]}get quaternion(){return r.set(b.sq4d.get(),this._data[6],this._data[7],this._data[8],this._data[9])}getQuaternion(t){return t[0]=this._data[6],t[1]=this._data[7],t[2]=this._data[8],t[3]=this._data[9],t}set quaternion(t){this._data[6]=t[0],this._data[7]=t[1],this._data[8]=t[2],this._data[9]=t[3]}get data(){return this._data}getCorners(t){const a=P,e=this._data;a[0]=e[6],a[1]=e[7],a[2]=e[8],a[3]=e[9];for(let s=0;s<8;++s){const r=t[s];r[0]=(1&s?-1:1)*e[3],r[1]=(2&s?-1:1)*e[4],r[2]=(4&s?-1:1)*e[5],n.transformQuat(r,r,a),r[0]+=e[0],r[1]+=e[1],r[2]+=e[2]}}isVisible(t){return this.intersectPlane(t[0])<=0&&this.intersectPlane(t[1])<=0&&this.intersectPlane(t[2])<=0&&this.intersectPlane(t[3])<=0&&this.intersectPlane(t[4])<=0&&this.intersectPlane(t[5])<=0}get radius(){const t=this._data[3],a=this._data[4],e=this._data[5];return Math.sqrt(t*t+a*a+e*e)}intersectSphere(t){z[0]=this._data[0]-t[0],z[1]=this._data[1]-t[1],z[2]=this._data[2]-t[2];const a=this.getQuaternion(j);return r.conjugate(P,a),n.transformQuat(z,z,P),n.abs(z,z),y[0]=Math.min(z[0],this._data[3]),y[1]=Math.min(z[1],this._data[4]),y[2]=Math.min(z[2],this._data[5]),n.sqrDist(y,z)<t[3]*t[3]}intersectSphereWithMBS(t,a=this.radius){const e=this._data;z[0]=e[0]-t[0],z[1]=e[1]-t[1],z[2]=e[2]-t[2];const s=t[3],r=s+a;return!(n.sqrLen(z)>r*r)&&(P[0]=-e[6],P[1]=-e[7],P[2]=-e[8],P[3]=e[9],n.transformQuat(z,z,P),n.abs(z,z),y[0]=Math.min(z[0],e[3]),y[1]=Math.min(z[1],e[4]),y[2]=Math.min(z[2],e[5]),n.sqrDist(y,z)<s*s)}intersectPlane(t){const a=t[0]*this._data[0]+t[1]*this._data[1]+t[2]*this._data[2]+t[3],e=this.projectedRadius(_.getNormal(t));return a>e?1:a<-e?-1:0}intersectRay(t,a,e=0){const s=this._data,r=P;r[0]=-s[6],r[1]=-s[7],r[2]=-s[8],r[3]=s[9],z[0]=t[0]-s[0],z[1]=t[1]-s[1],z[2]=t[2]-s[2];const i=n.transformQuat(z,z,P),o=n.transformQuat(y,a,P);let h=-1/0,c=1/0;const d=this.getHalfSize(I);for(let n=0;n<3;n++){const t=i[n],a=o[n],s=d[n]+e;if(Math.abs(a)>1e-6){const e=(s-t)/a,r=(-s-t)/a;h=Math.max(h,Math.min(e,r)),c=Math.min(c,Math.max(e,r))}else if(t>s||t<-s)return!1}return h<=c}projectedArea(t,e,s,i){const o=this.getQuaternion(j);r.conjugate(P,o),z[0]=t[0]-this._data[0],z[1]=t[1]-this._data[1],z[2]=t[2]-this._data[2],n.transformQuat(z,z,P);const c=this.getHalfSize(I),d=z[0]<-c[0]?-1:z[0]>c[0]?1:0,l=z[1]<-c[1]?-1:z[1]>c[1]?1:0,u=z[2]<-c[2]?-1:z[2]>c[2]?1:0,f=Math.abs(d)+Math.abs(l)+Math.abs(u);if(0===f)return 1/0;const g=1===f?4:6,_=6*(d+3*l+9*u+13);a.fromQuat(U,o),a.scale(U,U,c);const m=this.getCenter(V);for(let a=0;a<g;a++){const t=R[_+a];n.set(z,((1&t)<<1)-1,(2&t)-1,((4&t)>>1)-1),n.transformMat3(z,z,U),n.add(q,m,z),q[3]=1,h.transformMat4(q,q,e);const s=1/Math.max(1e-6,q[3]);A[2*a]=q[0]*s,A[2*a+1]=q[1]*s}const b=2*g-2;let p=A[0]*(A[3]-A[b+1])+A[b]*(A[1]-A[b-1]);for(let a=2;a<b;a+=2)p+=A[a]*(A[a+3]-A[a-1]);return Math.abs(p)*s*i*.125}projectedRadius(t){const a=this.getQuaternion(j);return r.conjugate(P,a),n.transformQuat(z,t,P),Math.abs(z[0]*this._data[3])+Math.abs(z[1]*this._data[4])+Math.abs(z[2]*this._data[5])}minimumDistancePlane(t){return t[0]*this._data[0]+t[1]*this._data[1]+t[2]*this._data[2]+t[3]-this.projectedRadius(_.getNormal(t))}maximumDistancePlane(t){return t[0]*this._data[0]+t[1]*this._data[1]+t[2]*this._data[2]+t[3]+this.projectedRadius(_.getNormal(t))}toAaBoundingBox(t){const e=this.getQuaternion(j),s=a.fromQuat(U,e),r=this._data[3]*Math.abs(s[0])+this._data[4]*Math.abs(s[3])+this._data[5]*Math.abs(s[6]),i=this._data[3]*Math.abs(s[1])+this._data[4]*Math.abs(s[4])+this._data[5]*Math.abs(s[7]),n=this._data[3]*Math.abs(s[2])+this._data[4]*Math.abs(s[5])+this._data[5]*Math.abs(s[8]);t[0]=this._data[0]-r,t[1]=this._data[1]-i,t[2]=this._data[2]-n,t[3]=this._data[0]+r,t[4]=this._data[1]+i,t[5]=this._data[2]+n}transform(t,a,e,s=0,r=l.getSphericalPCPF(e),i=l.getSphericalPCPF(a),n=g.getProjector(a,i)){if(e===r)a.isGeographic?H(this,t,a,s,i):T(this,t,a,s,i,n);else if(a.isWGS84&&(e.isWebMercator||m.isPlateCarree(e)))w(a,this,e,t,s);else if(a.isWebMercator&&m.isPlateCarree(e))B(a,this,e,t,s);else{const r=this.getCenter(V);r[2]+=s,f.projectBuffer(r,a,0,r,e,0,1),t.center=r,this!==t&&(t.quaternion=this.getQuaternion(j),t.halfSize=this.getHalfSize(I))}}}const P=i.create(),j=i.create(),C=i.create(),z=o.create(),y=o.create(),q=c.create();function x(t,a=new Q){return M.computeOBB(t,a),a}const A=[.1,.2,.3,.4,.5,.6,.7,.8,.9,1,1.1,1.2],R=(()=>{const t=new Int8Array(162);let a=0;const e=e=>{for(let s=0;s<e.length;s++)t[a+s]=e[s];a+=6};return e([6,2,3,1,5,4]),e([0,2,3,1,5,4]),e([0,2,3,7,5,4]),e([0,1,3,2,6,4]),e([0,1,3,2,0,0]),e([0,1,5,7,3,2]),e([0,1,3,7,6,4]),e([0,1,3,7,6,2]),e([0,1,5,7,6,2]),e([0,1,5,4,6,2]),e([0,1,5,4,0,0]),e([0,1,3,7,5,4]),e([0,2,6,4,0,0]),e([0,0,0,0,0,0]),e([1,3,7,5,0,0]),e([2,3,7,6,4,0]),e([2,3,7,6,0,0]),e([2,3,1,5,7,6]),e([0,1,5,7,6,2]),e([0,1,5,7,6,4]),e([0,1,3,7,6,4]),e([4,5,7,6,2,0]),e([4,5,7,6,0,0]),e([4,5,1,3,7,6]),e([0,2,3,7,5,4]),e([6,2,3,7,5,4]),e([6,2,3,1,5,4]),t})();function v(t,a,e,s,i){const h=t.getQuaternion(j);i.quaternion=h,r.conjugate(P,h);const c=t.getCenter(V),d=t.getHalfSize(I);if(s===p.ViewingMode.Global){n.transformQuat(k,c,P),n.abs(G,k),n.min(Y,G,d),n.sub(Y,G,Y);const s=n.length(Y);n.add(Y,G,d);const r=n.length(Y);if(s<e)i.center=c,n.set(k,e,e,e),i.halfSize=n.add(k,d,k);else{const o=r>0?1+a/r:1,h=s>0?1+e/s:1,c=(h+o)/2,l=(h-o)/2;n.scale(Y,G,l),i.halfSize=n.scaleAndAdd(Y,Y,d,c),n.scale(Y,G,c),n.scaleAndAdd(Y,Y,d,l),n.sign(k,k),n.multiply(k,Y,k);const u=t.getQuaternion(C);i.center=n.transformQuat(k,k,u)}}else{i.center=n.scaleAndAdd(k,c,o.UNIT_Z,(e+a)/2);const t=n.transformQuat(k,o.UNIT_Z,P);n.abs(t,t),i.halfSize=n.scaleAndAdd(G,d,t,(e-a)/2)}return i}function w(t,a,e,s,r){a.getCenter(V),V[2]+=r;const i=l.getSphericalPCPF(e);f.projectBuffer(V,t,0,V,i,0,1),O(i,a,V,e,s)}function B(t,a,e,s,r){a.getCenter(V),V[2]+=r,O(t,a,V,e,s)}function O(t,e,s,r,i){const n=e.getQuaternion(j),o=a.fromQuat(U,n),h=e.getHalfSize(I);for(let a=0;a<8;++a){for(let t=0;t<3;++t)F[t]=h[t]*(0!=(a&1<<t)?-1:1);for(let t=0;t<3;++t){let e=s[t];for(let a=0;a<3;++a)e+=F[a]*o[3*a+t];N[3*a+t]=e}}f.projectBuffer(N,t,0,N,r,0,8),x(D,i)}function T(t,a,e,s,i=l.getSphericalPCPF(e),o=g.getProjector(e,i)){t.getCorners(W),t.getCenter(F),F[2]+=s,u.computeTranslationToOriginAndRotation(e,F,E,i),a.setCenter(E[12],E[13],E[14]);const h=2*Math.sqrt(1+E[0]+E[5]+E[10]);P[0]=(E[6]-E[9])/h,P[1]=(E[8]-E[2])/h,P[2]=(E[1]-E[4])/h,P[3]=.25*h;const c=t.getQuaternion(j);a.quaternion=r.multiply(P,P,c),r.conjugate(P,P),n.set(G,0,0,0);const d=a.getCenter(Z);for(const r of W)r[2]+=s,o(r,0,r,0),n.sub(k,r,d),n.transformQuat(k,k,P),n.abs(k,k),n.max(G,G,k);a.halfSize=G}function H(t,a,e,s,i=l.getSphericalPCPF(e)){const o=d.getReferenceEllipsoid(e),h=1+Math.max(0,s)/(o.radius+t.centerZ);t.getCenter(F),F[2]+=s,f.projectBuffer(F,e,0,F,i,0,1),a.center=F;const c=t.getQuaternion(j);a.quaternion=c,r.conjugate(P,c),n.set(k,0,0,1),n.transformQuat(k,k,P);const u=t.getHalfSize(I);n.set(k,u[0]*Math.abs(k[0]),u[1]*Math.abs(k[1]),u[2]*Math.abs(k[2])),n.scale(k,k,o.inverseFlattening),n.add(k,u,k),a.halfSize=n.scale(k,k,h)}const N=new Array(24),D=new S.Vertices(N,3),F=o.create(),V=o.create(),Z=o.create(),I=o.create(),U=e.create(),E=s.create(),W=[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],k=o.create(),G=o.create(),Y=o.create(),X=o.fromValues(-1,-1,-1);t.Obb=Q,t.compute=x,t.computeOffsetObb=v,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
