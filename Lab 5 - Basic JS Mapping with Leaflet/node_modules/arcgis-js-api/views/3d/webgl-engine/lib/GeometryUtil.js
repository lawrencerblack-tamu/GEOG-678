/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/DoubleArray","../../../../geometry/support/FloatArray","../../../../geometry/support/Indices","../../../../geometry/support/plane","../../../../geometry/support/ray","./Attribute","./BufferVectorMath","./ContentObjectType","./Geometry","./Util","./VertexAttribute"],(function(t,e,r,n,o,s,a,u,l,c,i,h,A,f,b,p){"use strict";const y=h.Vec3Compact,m=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],w=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],g=[0,0,1,0,1,1,0,1],V=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],O=new Array(36);for(let ut=0;ut<6;ut++)for(let t=0;t<6;t++)O[6*ut+t]=ut;const x=new Array(36);for(let ut=0;ut<6;ut++)x[6*ut]=0,x[6*ut+1]=1,x[6*ut+2]=2,x[6*ut+3]=2,x[6*ut+4]=3,x[6*ut+5]=0;function d(t,e){Array.isArray(e)||(e=[e,e,e]);const r=new Array(24);for(let n=0;n<8;n++)r[3*n]=m[n][0]*e[0],r[3*n+1]=m[n][1]*e[1],r[3*n+2]=m[n][2]*e[2];return new f.Geometry(t,[[p.VertexAttribute.POSITION,new i.Attribute(r,V,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(w,O,3)],[p.VertexAttribute.UV0,new i.Attribute(g,x,2)]])}const M=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],I=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],P=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],N=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];function T(t,e){Array.isArray(e)||(e=[e,e,e]);const r=new Array(18);for(let n=0;n<6;n++)r[3*n]=M[n][0]*e[0],r[3*n+1]=M[n][1]*e[1],r[3*n+2]=M[n][2]*e[2];return new f.Geometry(t,[[p.VertexAttribute.POSITION,new i.Attribute(r,P,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(I,N,3)]])}const G=n.fromValues(-.5,0,-.5),S=n.fromValues(.5,0,-.5),F=n.fromValues(0,0,.5),R=n.fromValues(0,.5,0),L=n.create(),z=n.create(),C=n.create(),E=n.create(),U=n.create();r.subtract(L,G,R),r.subtract(z,G,S),r.cross(C,L,z),r.normalize(C,C),r.subtract(L,S,R),r.subtract(z,S,F),r.cross(E,L,z),r.normalize(E,E),r.subtract(L,F,R),r.subtract(z,F,G),r.cross(U,L,z),r.normalize(U,U);const v=[G,S,F,R],D=[0,-1,0,C[0],C[1],C[2],E[0],E[1],E[2],U[0],U[1],U[2]],j=[0,1,2,3,1,0,3,2,1,3,0,2],B=[0,0,0,1,1,1,2,2,2,3,3,3];function k(t,e){Array.isArray(e)||(e=[e,e,e]);const r=new Array(12);for(let n=0;n<4;n++)r[3*n]=v[n][0]*e[0],r[3*n+1]=v[n][1]*e[1],r[3*n+2]=v[n][2]*e[2];return new f.Geometry(t,[[p.VertexAttribute.POSITION,new i.Attribute(r,j,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(D,B,3)]])}function q(t,e,r,n,o={uv:!0}){const s=-Math.PI,l=2*Math.PI,c=-Math.PI/2,h=Math.PI,A=Math.max(3,Math.floor(r)),b=Math.max(2,Math.floor(n)),y=(A+1)*(b+1),m=a.newFloatArray(3*y),w=a.newFloatArray(3*y),g=a.newFloatArray(2*y),V=[];let O=0;for(let a=0;a<=b;a++){const t=[],r=a/b,n=c+r*h,o=Math.cos(n);for(let a=0;a<=A;a++){const u=a/A,c=s+u*l,i=Math.cos(c)*o,h=Math.sin(n),f=-Math.sin(c)*o;m[3*O]=i*e,m[3*O+1]=h*e,m[3*O+2]=f*e,w[3*O]=i,w[3*O+1]=h,w[3*O+2]=f,g[2*O]=u,g[2*O+1]=r,t.push(O),++O}V.push(t)}const x=new Array;for(let a=0;a<b;a++)for(let t=0;t<A;t++){const e=V[a][t],r=V[a][t+1],n=V[a+1][t+1],o=V[a+1][t];0===a?(x.push(e),x.push(n),x.push(o)):a===b-1?(x.push(e),x.push(r),x.push(n)):(x.push(e),x.push(r),x.push(n),x.push(n),x.push(o),x.push(e))}const d=[[p.VertexAttribute.POSITION,new i.Attribute(m,x,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(w,x,3,!0)]];return o.uv&&d.push([p.VertexAttribute.UV0,new i.Attribute(g,x,2,!0)]),o.offset&&(d[0][0]=p.VertexAttribute.OFFSET,d.push([p.VertexAttribute.POSITION,new i.Attribute(Float64Array.from(o.offset),u.getZeroIndexArray(x.length),3,!0)])),new f.Geometry(t,d)}function Z(t,e,r,n){const o=H(e,r,n);return new f.Geometry(t,o)}function H(t,e,r){const n=t;let o,s;if(r)o=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],s=[0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1];else{const t=n*(1+Math.sqrt(5))/2;o=[-n,t,0,n,t,0,-n,-t,0,n,-t,0,0,-n,t,0,n,t,0,-n,-t,0,n,-t,t,0,-n,t,0,n,-t,0,-n,-t,0,n],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]}for(let a=0;a<o.length;a+=3)y.scale(o,a,t/y.length(o,a));let u={};function l(e,r){e>r&&([e,r]=[r,e]);const n=e.toString()+"."+r.toString();if(u[n])return u[n];let s=o.length;return o.length+=3,y.add(o,3*e,o,3*r,o,s),y.scale(o,s,t/y.length(o,s)),s/=3,u[n]=s,s}for(let a=0;a<e;a++){const t=s.length,e=new Array(4*t);for(let r=0;r<t;r+=3){const t=s[r],n=s[r+1],o=s[r+2],a=l(t,n),u=l(n,o),c=l(o,t),i=4*r;e[i]=t,e[i+1]=a,e[i+2]=c,e[i+3]=n,e[i+4]=u,e[i+5]=a,e[i+6]=o,e[i+7]=c,e[i+8]=u,e[i+9]=a,e[i+10]=u,e[i+11]=c}s=e,u={}}const c=a.floatArrayFrom(o);for(let a=0;a<c.length;a+=3)y.normalize(c,a);return[[p.VertexAttribute.POSITION,new i.Attribute(a.floatArrayFrom(o),s,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(c,s,3,!0)]]}function J(t,r,n,s,a,l,c,h,b=null){const y=n?o.clone(n):o.create(),m=r?o.clone(r):o.fromValues(0,0,1);c??=e.create();const w=s?[255*s[0],255*s[1],255*s[2],s.length>3?255*s[3]:255]:[255,255,255,255],g=null!=a&&2===a.length?a:[1,1],V=u.getZeroIndexArray(1),O=[[p.VertexAttribute.POSITION,new i.Attribute(y,V,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(m,V,3,!0)],[p.VertexAttribute.UV0,new i.Attribute(c,V,c.length)],[p.VertexAttribute.COLOR,new i.Attribute(w,V,4,!0)],[p.VertexAttribute.SIZE,new i.Attribute(g,V,2)]];if(null!=l&&(l=[l[0],l[1],l[2],l[3]],O.push([p.VertexAttribute.CENTEROFFSETANDDISTANCE,new i.Attribute(l,V,4)])),h){const t=[h[0],h[1],h[2],h[3]];O.push([p.VertexAttribute.FEATUREATTRIBUTE,new i.Attribute(t,V,4)])}return new f.Geometry(t,O,null,A.ContentObjectType.Point,b)}const K=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0]];function Q(t,e=K){const r=new Array(12);for(let c=0;c<4;c++)for(let t=0;t<3;t++)r[3*c+t]=e[c][t];const n=[0,1,2,2,3,0],o=[0,0,1],s=[0,0,0,0,0,0],a=[0,0,1,0,1,1,0,1],u=[255,255,255,255],l=[[p.VertexAttribute.POSITION,new i.Attribute(r,n,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(o,s,3,!0)],[p.VertexAttribute.UV0,new i.Attribute(a,n,2,!0)],[p.VertexAttribute.COLOR,new i.Attribute(u,s,4,!0)]];return new f.Geometry(t,l)}function W(t,e,r,o,s,u=!0,l=!0){let c=0;const h=r,A=e;let b=n.fromValues(0,c,0),y=n.fromValues(0,c+A,0),m=n.fromValues(0,-1,0),w=n.fromValues(0,1,0);s&&(c=A,y=n.fromValues(0,0,0),b=n.fromValues(0,c,0),m=n.fromValues(0,1,0),w=n.fromValues(0,-1,0));const g=[y,b],V=[m,w],O=o+2,x=Math.sqrt(A*A+h*h);if(s)for(let a=o-1;a>=0;a--){const t=a*(2*Math.PI/o),e=n.fromValues(Math.cos(t)*h,c,Math.sin(t)*h);g.push(e);const r=n.fromValues(A*Math.cos(t)/x,-h/x,A*Math.sin(t)/x);V.push(r)}else for(let a=0;a<o;a++){const t=a*(2*Math.PI/o),e=n.fromValues(Math.cos(t)*h,c,Math.sin(t)*h);g.push(e);const r=n.fromValues(A*Math.cos(t)/x,h/x,A*Math.sin(t)/x);V.push(r)}const d=new Array,M=new Array;if(u){for(let t=3;t<g.length;t++)d.push(1),d.push(t-1),d.push(t),M.push(0),M.push(0),M.push(0);d.push(g.length-1),d.push(2),d.push(1),M.push(0),M.push(0),M.push(0)}if(l){for(let t=3;t<g.length;t++)d.push(t),d.push(t-1),d.push(0),M.push(t),M.push(t-1),M.push(1);d.push(0),d.push(2),d.push(g.length-1),M.push(1),M.push(2),M.push(V.length-1)}const I=a.newFloatArray(3*O);for(let n=0;n<O;n++)I[3*n]=g[n][0],I[3*n+1]=g[n][1],I[3*n+2]=g[n][2];const P=a.newFloatArray(3*O);for(let n=0;n<O;n++)P[3*n]=V[n][0],P[3*n+1]=V[n][1],P[3*n+2]=V[n][2];const N=[[p.VertexAttribute.POSITION,new i.Attribute(I,d,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(P,M,3,!0)]];return new f.Geometry(t,N)}function X(t,e,o,s,u,l,c){const h=u?n.clone(u):n.fromValues(1,0,0),A=l?n.clone(l):n.fromValues(0,0,0);c??=!0;const b=n.create();r.normalize(b,h);const y=n.create();r.scale(y,b,Math.abs(e));const m=n.create();r.scale(m,y,-.5),r.add(m,m,A);const w=n.fromValues(0,1,0);Math.abs(1-r.dot(b,w))<.2&&r.set(w,0,0,1);const g=n.create();r.cross(g,b,w),r.normalize(g,g),r.cross(w,g,b);const V=2*s+(c?2:0),O=s+(c?2:0),x=a.newFloatArray(3*V),d=a.newFloatArray(3*O),M=a.newFloatArray(2*V),I=new Array(3*s*(c?4:2)),P=new Array(3*s*(c?4:2));c&&(x[3*(V-2)]=m[0],x[3*(V-2)+1]=m[1],x[3*(V-2)+2]=m[2],M[2*(V-2)]=0,M[2*(V-2)+1]=0,x[3*(V-1)]=x[3*(V-2)]+y[0],x[3*(V-1)+1]=x[3*(V-2)+1]+y[1],x[3*(V-1)+2]=x[3*(V-2)+2]+y[2],M[2*(V-1)]=1,M[2*(V-1)+1]=1,d[3*(O-2)]=-b[0],d[3*(O-2)+1]=-b[1],d[3*(O-2)+2]=-b[2],d[3*(O-1)]=b[0],d[3*(O-1)+1]=b[1],d[3*(O-1)+2]=b[2]);const N=(t,e,r)=>{I[t]=e,P[t]=r};let T=0;const G=n.create(),S=n.create();for(let n=0;n<s;n++){const t=n*(2*Math.PI/s);r.scale(G,w,Math.sin(t)),r.scale(S,g,Math.cos(t)),r.add(G,G,S),d[3*n]=G[0],d[3*n+1]=G[1],d[3*n+2]=G[2],r.scale(G,G,o),r.add(G,G,m),x[3*n]=G[0],x[3*n+1]=G[1],x[3*n+2]=G[2],M[2*n]=n/s,M[2*n+1]=0,x[3*(n+s)]=x[3*n]+y[0],x[3*(n+s)+1]=x[3*n+1]+y[1],x[3*(n+s)+2]=x[3*n+2]+y[2],M[2*(n+s)]=n/s,M[2*n+1]=1;const e=(n+1)%s;N(T++,n,n),N(T++,n+s,n),N(T++,e,e),N(T++,e,e),N(T++,n+s,n),N(T++,e+s,e)}if(c){for(let t=0;t<s;t++){const e=(t+1)%s;N(T++,V-2,O-2),N(T++,t,O-2),N(T++,e,O-2)}for(let t=0;t<s;t++){const e=(t+1)%s;N(T++,t+s,O-1),N(T++,V-1,O-1),N(T++,e+s,O-1)}}const F=[[p.VertexAttribute.POSITION,new i.Attribute(x,I,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(d,P,3,!0)],[p.VertexAttribute.UV0,new i.Attribute(M,I,2,!0)]];return new f.Geometry(t,F)}function Y(t,e,r,n,o,s){n=n||10,o=null==o||o,b.assert(e.length>1);const a=[[0,0,0]],u=[],l=[];for(let c=0;c<n;c++){u.push([0,-c-1,-(c+1)%n-1]);const t=c/n*2*Math.PI;l.push([Math.cos(t)*r,Math.sin(t)*r])}return $(t,l,e,a,u,o,s)}function $(t,e,s,u,h,A,b=n.fromValues(0,0,0)){const y=e.length,m=a.newFloatArray(s.length*y*3+(6*u.length||0)),w=a.newFloatArray(s.length*y*3+(u?6:0)),g=new Array,V=new Array;let O=0,x=0;const d=o.create(),M=o.create(),I=o.create(),P=o.create(),N=o.create(),T=o.create(),G=o.create(),S=o.create(),F=o.create(),R=o.create(),L=o.create(),z=o.create(),C=o.create(),E=l.create();r.set(F,0,1,0),r.subtract(M,s[1],s[0]),r.normalize(M,M),A?(r.add(S,s[0],b),r.normalize(I,S)):r.set(I,0,0,1),ot(M,I,F,F,N,I,st),r.copy(P,I),r.copy(z,N);for(let n=0;n<u.length;n++)r.scale(T,N,u[n][0]),r.scale(S,I,u[n][2]),r.add(T,T,S),r.add(T,T,s[0]),m[O++]=T[0],m[O++]=T[1],m[O++]=T[2];w[x++]=-M[0],w[x++]=-M[1],w[x++]=-M[2];for(let r=0;r<h.length;r++)g.push(h[r][0]>0?h[r][0]:-h[r][0]-1+u.length),g.push(h[r][1]>0?h[r][1]:-h[r][1]-1+u.length),g.push(h[r][2]>0?h[r][2]:-h[r][2]-1+u.length),V.push(0),V.push(0),V.push(0);let U=u.length;const v=u.length-1;for(let n=0;n<s.length;n++){let t=!1;if(n>0){r.copy(d,M),n<s.length-1?(r.subtract(M,s[n+1],s[n]),r.normalize(M,M)):t=!0,r.add(R,d,M),r.normalize(R,R),r.add(L,s[n-1],P),l.fromPositionAndNormal(s[n],R,E);l.intersectRay(E,c.wrap(L,d),S)?(r.subtract(S,S,s[n]),r.normalize(I,S),r.cross(N,R,I),r.normalize(N,N)):ot(R,P,z,F,N,I,st),r.copy(P,I),r.copy(z,N)}A&&(r.add(S,s[n],b),r.normalize(C,S));for(let o=0;o<y;o++)if(r.scale(T,N,e[o][0]),r.scale(S,I,e[o][1]),r.add(T,T,S),r.normalize(G,T),w[x++]=G[0],w[x++]=G[1],w[x++]=G[2],r.add(T,T,s[n]),m[O++]=T[0],m[O++]=T[1],m[O++]=T[2],!t){const t=(o+1)%y;g.push(U+o),g.push(U+y+o),g.push(U+t),g.push(U+t),g.push(U+y+o),g.push(U+y+t);for(let e=0;e<6;e++){const t=g.length-6;V.push(g[t+e]-v)}}U+=y}const D=s[s.length-1];for(let n=0;n<u.length;n++)r.scale(T,N,u[n][0]),r.scale(S,I,u[n][1]),r.add(T,T,S),r.add(T,T,D),m[O++]=T[0],m[O++]=T[1],m[O++]=T[2];const j=x/3;w[x++]=M[0],w[x++]=M[1],w[x++]=M[2];const B=U-y;for(let r=0;r<h.length;r++)g.push(h[r][0]>=0?U+h[r][0]:-h[r][0]-1+B),g.push(h[r][2]>=0?U+h[r][2]:-h[r][2]-1+B),g.push(h[r][1]>=0?U+h[r][1]:-h[r][1]-1+B),V.push(j),V.push(j),V.push(j);const k=[[p.VertexAttribute.POSITION,new i.Attribute(m,g,3,!0)],[p.VertexAttribute.NORMAL,new i.Attribute(w,V,3,!0)]];return new f.Geometry(t,k)}function _(t,e,r,n){b.assert(e.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),b.assert(3===e[0].length,"createPolylineGeometry(): malformed vertex"),b.assert(null==r||r.length===e.length,"createPolylineGeometry: need same number of points and normals"),b.assert(null==r||3===r[0].length,"createPolylineGeometry(): malformed normal");const o=s.newDoubleArray(3*e.length),l=new Array(2*(e.length-1));let c=0,h=0;for(let s=0;s<e.length;s++){for(let t=0;t<3;t++)o[c++]=e[s][t];s>0&&(l[h++]=s-1,l[h++]=s)}const y=[[p.VertexAttribute.POSITION,new i.Attribute(o,l,3,!0)]];if(r){const t=a.newFloatArray(3*r.length);let n=0;for(let o=0;o<e.length;o++)for(let e=0;e<3;e++)t[n++]=r[o][e];y.push([p.VertexAttribute.NORMAL,new i.Attribute(t,l,3,!0)])}return n&&y.push([p.VertexAttribute.COLOR,new i.Attribute(n,u.getContinuousIndexArray(n.length/4),4)]),new f.Geometry(t,y,null,A.ContentObjectType.Line)}function tt(t,e,r,n,o,s=0){const a=new Array(18),u=[[-r,s,o/2],[n,s,o/2],[0,e+s,o/2],[-r,s,-o/2],[n,s,-o/2],[0,e+s,-o/2]],l=[0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5];for(let c=0;c<6;c++)a[3*c]=u[c][0],a[3*c+1]=u[c][1],a[3*c+2]=u[c][2];return new f.Geometry(t,[[p.VertexAttribute.POSITION,new i.Attribute(a,l,3,!0)]])}function et(t,e){const n=t.getMutableAttribute(p.VertexAttribute.POSITION).data;for(let o=0;o<n.length;o+=3){const t=n[o],s=n[o+1],a=n[o+2];r.set(at,t,s,a),r.transformMat4(at,at,e),n[o]=at[0],n[o+1]=at[1],n[o+2]=at[2]}}function rt(t,e=t){const r=t.attributes,n=r.get(p.VertexAttribute.POSITION).data,o=r.get(p.VertexAttribute.NORMAL).data;if(o){const t=e.getMutableAttribute(p.VertexAttribute.NORMAL).data;for(let e=0;e<o.length;e+=3){const r=o[e+1];t[e+1]=-o[e+2],t[e+2]=r}}if(n){const t=e.getMutableAttribute(p.VertexAttribute.POSITION).data;for(let e=0;e<n.length;e+=3){const r=n[e+1];t[e+1]=-n[e+2],t[e+2]=r}}}function nt(t,e,n,o,s){return!(Math.abs(r.dot(e,t))>s)&&(r.cross(n,t,e),r.normalize(n,n),r.cross(o,n,t),r.normalize(o,o),!0)}function ot(t,e,r,n,o,s,a){return nt(t,e,o,s,a)||nt(t,r,o,s,a)||nt(t,n,o,s,a)}const st=.99619469809,at=o.create();t.cgToGIS=rt,t.createBoxGeometry=d,t.createConeGeometry=W,t.createCylinderGeometry=X,t.createDiamondGeometry=T,t.createExtrudedTriangle=tt,t.createPathExtrusionGeometry=$,t.createPointGeometry=J,t.createPolySphereData=H,t.createPolySphereGeometry=Z,t.createPolylineGeometry=_,t.createSphereGeometry=q,t.createSquareGeometry=Q,t.createTetrahedronGeometry=k,t.createTubeGeometry=Y,t.makeOrthoBasisDirUpFallback=ot,t.transformInPlace=et,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
