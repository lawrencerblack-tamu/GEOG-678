/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/arrayUtils","../../../../../core/mathUtils","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64"],(function(e,t,o,n,c){"use strict";const r=-1;var a;function s(e,c,a,s=h){const p=e.vertices.position,m=e.vertices.componentIndex,v=o.deg2rad(s.anglePlanar),y=o.deg2rad(s.angleSignificantEdge),A=Math.cos(y),w=Math.cos(v),E=u.edge,I=E.position0,S=E.position1,x=E.faceNormal0,V=E.faceNormal1,b=d(e),N=f(e),T=N.length/4,D=c.allocate(T);let F=0;const C=T,L=a.allocate(C);let M=0,O=0,P=0;const H=t.range(0,T),K=new Float32Array(T);K.forEach(((e,t,o)=>{p.getVec(N[4*t],I),p.getVec(N[4*t+1],S),o[t]=n.distance(I,S)})),H.sort(((e,t)=>K[t]-K[e]));const U=new Array,j=new Array;for(let t=0;t<T;t++){const e=H[t],o=K[e],s=N[4*e],f=N[4*e+1],d=N[4*e+2],u=N[4*e+3],h=u===r;if(p.getVec(s,I),p.getVec(f,S),h)n.set(x,b[3*d],b[3*d+1],b[3*d+2]),n.copy(V,x),E.componentIndex=m.get(s),E.cosAngle=n.dot(x,V);else{if(n.set(x,b[3*d],b[3*d+1],b[3*d+2]),n.set(V,b[3*u],b[3*u+1],b[3*u+2]),E.componentIndex=m.get(s),E.cosAngle=n.dot(x,V),l(E,w))continue;E.cosAngle<-.9999&&n.copy(V,x)}O+=o,P++,h||i(E,A)?(c.write(D,F++,E),U.push(o)):g(E,v)&&(a.write(L,M++,E),j.push(o))}const k=new Float32Array(U.reverse()),z=new Float32Array(j.reverse());return{regular:{instancesData:c.trim(D,F),lodInfo:{lengths:k}},silhouette:{instancesData:a.trim(L,M),lodInfo:{lengths:z}},averageEdgeLength:O/P}}function i(e,t){return e.cosAngle<t}function l(e,t){return e.cosAngle>t}function g(e,t){const c=o.acosClamped(e.cosAngle),r=u.fwd,a=u.ortho;n.direction(r,e.position1,e.position0);return c*(n.dot(n.cross(a,e.faceNormal0,e.faceNormal1),r)>0?-1:1)>t}function f(e){const t=e.faces.length/3,o=e.faces,n=e.neighbors;let c=0;for(let i=0;i<t;i++){const e=n[3*i],t=n[3*i+1],a=n[3*i+2],s=o[3*i],l=o[3*i+1],g=o[3*i+2];c+=e===r||s<l?1:0,c+=t===r||l<g?1:0,c+=a===r||g<s?1:0}const a=new Int32Array(4*c);let s=0;for(let i=0;i<t;i++){const e=n[3*i],t=n[3*i+1],c=n[3*i+2],l=o[3*i],g=o[3*i+1],f=o[3*i+2];(e===r||l<g)&&(a[s++]=l,a[s++]=g,a[s++]=i,a[s++]=e),(t===r||g<f)&&(a[s++]=g,a[s++]=f,a[s++]=i,a[s++]=t),(c===r||f<l)&&(a[s++]=f,a[s++]=l,a[s++]=i,a[s++]=c)}return a}function d(e){const t=e.faces.length/3,o=e.vertices.position,c=e.faces,r=p.v0,a=p.v1,s=p.v2,i=new Float32Array(3*t);for(let l=0;l<t;l++){const e=c[3*l],t=c[3*l+1],g=c[3*l+2];o.getVec(e,r),o.getVec(t,a),o.getVec(g,s),n.subtract(a,a,r),n.subtract(s,s,r),n.cross(r,a,s),n.normalize(r,r),i[3*l]=r[0],i[3*l+1]=r[1],i[3*l+2]=r[2]}return i}e.EdgeType=void 0,(a=e.EdgeType||(e.EdgeType={}))[a.SOLID=0]="SOLID",a[a.SKETCH=1]="SKETCH";const u={edge:{position0:c.create(),position1:c.create(),faceNormal0:c.create(),faceNormal1:c.create(),componentIndex:0,cosAngle:0},ortho:c.create(),fwd:c.create()},p={v0:c.create(),v1:c.create(),v2:c.create()},h={anglePlanar:4,angleSignificantEdge:35};e.extractEdges=s,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
