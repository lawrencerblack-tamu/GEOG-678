/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/Logger","../../../../core/mathUtils","../../../../core/screenUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/support/frustum","../../../../geometry/support/ray","../../../../geometry/support/vector","../../../ViewingMode","./fov"],(function(t,e,i,r,s,o,a,n,h,p,d,_,c,u,l,y,v,w,g,m,f,x,M){"use strict";var P;t.Camera=P=class extends i{constructor(t){super(t),this._ray=m.create(),this._viewport=w.fromValues(0,0,1,1),this._padding=w.fromValues(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=u.fromValues(1,1e3),this._viewDirty=!0,this._viewMatrix=_.create(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=_.create(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=_.create(),this._frustumDirty=!0,this._frustum=g.create(),this._fullViewport=w.create(),this._pixelRatio=1,this.row=0,this.column=0,this._rows=1,this._columns=1,this._center=y.create(),this._up=y.create(),this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(t){this._pixelRatio=t>0?t:1}get rows(){return this._rows}set rows(t){this._rows=Math.max(1,t)}get columns(){return this._columns}set columns(t){this._columns=Math.max(1,t)}get eye(){return this._ray.origin}set eye(t){this._compareAndSetView(t,this._ray.origin)}get center(){return this._center}set center(t){this._compareAndSetView(t,this._center,"_center")}get ray(){return l.subtract(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(t){this._compareAndSetView(t,this._up,"_up")}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(t){d.copy(this._viewMatrix,t),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),l.set(y.create(),-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10])}get viewUp(){return this._ensureViewClean(),l.set(y.create(),this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9])}get viewRight(){return this._ensureViewClean(),l.set(y.create(),this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8])}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(t){this._nearFar[0]!==t&&(this._nearFar[0]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(t){this._nearFar[1]!==t&&(this._nearFar[1]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(t){this.x=t[0],this.y=t[1],this.width=t[2],this.height=t[3]}get screenViewport(){if(1===this.pixelRatio)return this._viewport;const t=v.scale(w.create(),this._viewport,1/this.pixelRatio),e=this._get("screenViewport");return e&&v.equals(t,e)?e:t}get screenPadding(){if(1===this.pixelRatio)return this._padding;const t=v.scale(w.create(),this._padding,1/this.pixelRatio),e=this._get("screenPadding");return e&&v.equals(t,e)?e:t}get x(){return this._viewport[0]}set x(e){e+=this._padding[t.PaddingSide.LEFT],this._viewport[0]!==e&&(this._viewport[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(e){e+=this._padding[t.PaddingSide.BOTTOM],this._viewport[1]!==e&&(this._viewport[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(t){this._viewport[2]!==t&&(this._viewport[2]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(t){this._viewport[3]!==t&&(this._viewport[3]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+this._padding[t.PaddingSide.RIGHT]+this._padding[t.PaddingSide.LEFT]}set fullWidth(e){this.width=e-(this._padding[t.PaddingSide.RIGHT]+this._padding[t.PaddingSide.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[t.PaddingSide.TOP]+this._padding[t.PaddingSide.BOTTOM]}set fullHeight(e){this.height=e-(this._padding[t.PaddingSide.TOP]+this._padding[t.PaddingSide.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[t.PaddingSide.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[t.PaddingSide.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(e){v.exactEquals(this._padding,e)||(this._viewport[0]+=e[t.PaddingSide.LEFT]-this._padding[t.PaddingSide.LEFT],this._viewport[1]+=e[t.PaddingSide.BOTTOM]-this._padding[t.PaddingSide.BOTTOM],this._viewport[2]-=e[t.PaddingSide.RIGHT]+e[t.PaddingSide.LEFT]-(this._padding[t.PaddingSide.RIGHT]+this._padding[t.PaddingSide.LEFT]),this._viewport[3]-=e[t.PaddingSide.TOP]+e[t.PaddingSide.BOTTOM]-(this._padding[t.PaddingSide.TOP]+this._padding[t.PaddingSide.BOTTOM]),v.copy(this._padding,e),this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){return this._viewProjectionDirty&&(d.multiply(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){const e=this.width,i=this.height,r=this.near*Math.tan(this.fovY/2)*2,s=r*this._aspect,o=r/this.rows,a=s/this.columns,n=-s/2+this.column*a,h=n+a,p=-r/2+this.row*o,c=p+o,u=d.frustum(_.create(),n*(1+2*this._padding[t.PaddingSide.LEFT]/e),h*(1+2*this._padding[t.PaddingSide.RIGHT]/e),p*(1+2*this._padding[t.PaddingSide.BOTTOM]/i),c*(1+2*this._padding[t.PaddingSide.TOP]/i),this.near,this.far),l=this._get("projectionMatrix");return l&&d.equals(l,u)?l:u}get inverseProjectionMatrix(){return d.invert(_.create(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||_.create()}get fov(){return this._fov}set fov(t){this._fov=t,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return M.fovd2fovx(this._fov,this.width,this.height)}set fovX(t){this._fov=M.fovx2fovd(t,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return M.fovd2fovy(this._fov,this.width,this.height)}set fovY(t){this._fov=M.fovy2fovd(t,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return l.distance(this.center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(d.invert(this._viewInverseTransposeMatrix,this.viewMatrix),d.transpose(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(t){const e=2*t-1;return 2*this.near*this.far/(this.far+this.near-e*(this.far-this.near))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return null!=this.relativeElevation&&this.relativeElevation>=0}copyFrom(t){l.copy(this._ray.origin,t.eye),this.center=t.center,this.up=t.up,v.copy(this._viewport,t.viewport),this.notifyChange("_viewport"),v.copy(this._padding,t.padding),this.notifyChange("_padding"),c.copy(this._nearFar,t.nearFar),this.notifyChange("_nearFar"),this._fov=t.fov,this.row=t.row,this.column=t.column,this.rows=t.rows,this.columns=t.columns,this.relativeElevation=t.relativeElevation;const e=t;return this._viewDirty=e._viewDirty,this._viewDirty||(d.copy(this._viewMatrix,t.viewMatrix),this.notifyChange("_viewMatrix")),this._viewProjectionDirty=!0,this._frustumDirty=e._frustumDirty,this._frustumDirty||(g.copy(this._frustum,t.frustum),this._frustumDirty=!1),e._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(d.copy(this._viewInverseTransposeMatrix,t.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),v.copy(this._fullViewport,t.fullViewport),this.pixelRatio=t.pixelRatio,this}copyViewFrom(t){this.eye=t.eye,this.center=t.center,this.up=t.up}clone(){return(new P).copyFrom(this)}equals(t){return l.exactEquals(this.eye,t.eye)&&l.exactEquals(this.center,t.center)&&l.exactEquals(this.up,t.up)&&v.exactEquals(this._viewport,t.viewport)&&v.exactEquals(this._padding,t.padding)&&c.exactEquals(this.nearFar,t.nearFar)&&this._fov===t.fov&&this.pixelRatio===t.pixelRatio&&this.relativeElevation===t.relativeElevation&&this.row===t.row&&this.column===t.column&&this.rows===t.rows&&this.columns===t.columns}almostEquals(t){const e=Math.max(1,1/this.pixelRatio,1/t.pixelRatio);if(Math.abs(t.fov-this._fov)>=.001||v.squaredDistance(t.screenPadding,this.screenPadding)>=e||v.squaredDistance(this.screenViewport,t.screenViewport)>=e||this.row!==t.row||this.column!==t.column||this.rows!==t.rows||this.columns!==t.columns)return!1;l.sub(D,t.eye,t.center),l.sub(S,this.eye,this.center);const i=l.dot(D,S),r=l.sqrLen(D),s=l.sqrLen(S),o=5e-4;return i*i>=(1-1e-10)*r*s&&l.sqrDist(t.eye,this.eye)<Math.max(r,s)*o*o}computeRenderPixelSizeAt(t){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(t))}computeRenderPixelSizeAtDist(t){return t*this.perRenderPixelRatio}computeScreenPixelSizeAt(t){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(t))}_viewDirectionDistance(t){return Math.abs(f.projectPointSignedLength(this.viewForward,l.subtract(D,t,this.eye)))}computeScreenPixelSizeAtDist(t){return t*this.perScreenPixelRatio}computeDistanceFromRadius(t,e){return t/Math.tan(Math.min(this.fovX,this.fovY)/(2*(e||1)))}getScreenCenter(e=o.createScreenPointArray()){return e[0]=(this.padding[t.PaddingSide.LEFT]+this.width/2)/this.pixelRatio,e[1]=(this.padding[t.PaddingSide.TOP]+this.height/2)/this.pixelRatio,e}getRenderCenter(e,i=.5,r=.5){return e[0]=this.padding[t.PaddingSide.LEFT]+this.width*i,e[1]=this.padding[t.PaddingSide.BOTTOM]+this.height*r,e[2]=.5,e}setGLViewport(t){const e=this.viewport,i=this.padding;t.setViewport(e[0]-i[3],e[1]-i[2],e[2]+i[1]+i[3],e[3]+i[0]+i[2])}applyProjection(t,e){t!==T&&l.copy(T,t),T[3]=1,v.transformMat4(T,T,this.projectionMatrix);const i=Math.abs(T[3]);l.scale(T,T,1/i);const r=this.fullViewport;e[0]=s.lerp(0,r[0]+r[2],.5+.5*T[0]),e[1]=s.lerp(0,r[1]+r[3],.5+.5*T[1]),e[2]=.5*(T[2]+1),e[3]=i}unapplyProjection(t,e){const i=this.fullViewport;T[0]=(t[0]/(i[0]+i[2])*2-1)*t[3],T[1]=(t[1]/(i[1]+i[3])*2-1)*t[3],T[2]=(2*t[2]-1)*t[3],T[3]=t[3],null!=this.inverseProjectionMatrix&&(v.transformMat4(T,T,this.inverseProjectionMatrix),e[0]=T[0],e[1]=T[1],e[2]=T[2])}projectToScreen(t,e){return this.projectToRenderScreen(t,R),this.renderToScreen(R,e),e}projectToRenderScreen(t,e){if(T[0]=t[0],T[1]=t[1],T[2]=t[2],T[3]=1,v.transformMat4(T,T,this.viewProjectionMatrix),0===T[3])return null;const i=T;l.scale(i,i,1/Math.abs(T[3]));const r=this.fullViewport,o=s.lerp(0,r[0]+r[2],.5+.5*i[0]),a=s.lerp(0,r[1]+r[3],.5+.5*i[1]);return"x"in e?(e.x=o,e.y=a):(e[0]=o,e[1]=a,e.length>2&&(e[2]=.5*(i[2]+1))),e}unprojectFromScreen(t,e){return this.unprojectFromRenderScreen(this.screenToRender(t,R),e)}unprojectFromRenderScreen(t,e){if(d.multiply(C,this.projectionMatrix,this.viewMatrix),!d.invert(C,C))return null;const i=this.fullViewport;return T[0]=2*(t[0]-i[0])/i[2]-1,T[1]=2*(t[1]-i[1])/i[3]-1,T[2]=2*t[2]-1,T[3]=1,v.transformMat4(T,T,C),0===T[3]?null:(e[0]=T[0]/T[3],e[1]=T[1]/T[3],e[2]=T[2]/T[3],e)}constrainWindowSize(t,e,i,r){const s=t*this.pixelRatio,o=e*this.pixelRatio,a=Math.max(s-i/2,0),n=Math.max(this.fullHeight-o-r/2,0),h=-Math.min(s-i/2,0),p=-Math.min(this.fullHeight-o-r/2,0),d=i-h- -Math.min(this.fullWidth-s-i/2,0),_=r-p- -Math.min(o-r/2,0);return[Math.round(a),Math.round(n),Math.round(d),Math.round(_)]}computeUp(t){t===x.ViewingMode.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(t,e){const i=t[0]*this.pixelRatio,r=this.fullHeight-t[1]*this.pixelRatio;return e[0]=i,e[1]=r,e}renderToScreen(t,e){const i=t[0]/this.pixelRatio,r=(this.fullHeight-t[1])/this.pixelRatio;e[0]=i,e[1]=r}_computeUpGlobal(){l.subtract(D,this.center,this.eye);const t=l.length(this.center);t<1?(l.set(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs(l.dot(D,this.center))>.9999*l.length(D)*t||(l.cross(this._up,D,this.center),l.cross(this._up,this._up,D),l.normalize(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){l.direction(D,this.eye,this.center),Math.abs(D[2])<=.9999&&(l.scale(D,D,D[2]),l.set(this._up,-D[0],-D[1],1-D[2]),l.normalize(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(t,e,i=""){"number"==typeof t[0]&&isFinite(t[0])&&"number"==typeof t[1]&&isFinite(t[1])&&"number"==typeof t[2]&&isFinite(t[2])?l.exactEquals(t,e)||(l.copy(e,t),this._markViewDirty(),i.length&&this.notifyChange(i)):r.getLogger("esri.views.3d.webgl-engine.lib.Camera").warn("Camera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&(g.fromMatrix(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(d.lookAt(this._viewMatrix,this.eye,this.center,this.up),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}},e.__decorate([a.property()],t.Camera.prototype,"_viewport",void 0),e.__decorate([a.property()],t.Camera.prototype,"_padding",void 0),e.__decorate([a.property()],t.Camera.prototype,"_fov",void 0),e.__decorate([a.property()],t.Camera.prototype,"_nearFar",void 0),e.__decorate([a.property()],t.Camera.prototype,"_viewDirty",void 0),e.__decorate([a.property()],t.Camera.prototype,"_viewMatrix",void 0),e.__decorate([a.property()],t.Camera.prototype,"_pixelRatio",void 0),e.__decorate([a.property()],t.Camera.prototype,"pixelRatio",null),e.__decorate([a.property()],t.Camera.prototype,"row",void 0),e.__decorate([a.property()],t.Camera.prototype,"column",void 0),e.__decorate([a.property()],t.Camera.prototype,"_rows",void 0),e.__decorate([a.property()],t.Camera.prototype,"rows",null),e.__decorate([a.property()],t.Camera.prototype,"_columns",void 0),e.__decorate([a.property()],t.Camera.prototype,"columns",null),e.__decorate([a.property()],t.Camera.prototype,"eye",null),e.__decorate([a.property()],t.Camera.prototype,"center",null),e.__decorate([a.property()],t.Camera.prototype,"_center",void 0),e.__decorate([a.property()],t.Camera.prototype,"up",null),e.__decorate([a.property()],t.Camera.prototype,"_up",void 0),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"viewForward",null),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"viewUp",null),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"viewRight",null),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"nearFar",null),e.__decorate([a.property()],t.Camera.prototype,"near",null),e.__decorate([a.property()],t.Camera.prototype,"far",null),e.__decorate([a.property()],t.Camera.prototype,"viewport",null),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"screenViewport",null),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"screenPadding",null),e.__decorate([a.property()],t.Camera.prototype,"x",null),e.__decorate([a.property()],t.Camera.prototype,"y",null),e.__decorate([a.property()],t.Camera.prototype,"width",null),e.__decorate([a.property()],t.Camera.prototype,"height",null),e.__decorate([a.property()],t.Camera.prototype,"fullWidth",null),e.__decorate([a.property()],t.Camera.prototype,"fullHeight",null),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"_aspect",null),e.__decorate([a.property()],t.Camera.prototype,"padding",null),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"projectionMatrix",null),e.__decorate([a.property({readOnly:!0})],t.Camera.prototype,"inverseProjectionMatrix",null),e.__decorate([a.property()],t.Camera.prototype,"fov",null),e.__decorate([a.property()],t.Camera.prototype,"fovX",null),e.__decorate([a.property()],t.Camera.prototype,"fovY",null),t.Camera=P=e.__decorate([p.subclass("esri.views.3d.webgl-engine.lib.Camera")],t.Camera);const T=w.create(),C=_.create(),D=y.create(),S=y.create(),R=o.createRenderScreenPointArray3();var F;t.PaddingSide=void 0,(F=t.PaddingSide||(t.PaddingSide={}))[F.TOP=0]="TOP",F[F.RIGHT=1]="RIGHT",F[F.BOTTOM=2]="BOTTOM",F[F.LEFT=3]="LEFT",Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
