/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/has","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../ViewingMode","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../core/shaderLibrary/attributes/NormalAttribute.glsl","../core/shaderLibrary/shading/Normals.glsl","../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl","../lib/basicInterfaces","../lib/GLTextureMaterial","../lib/Material","../lib/OrderIndependentTransparency","../lib/RenderSlot","../lib/VertexAttribute","../lib/verticalOffsetUtils","./DefaultBufferWriter","./internal/MaterialUtil","../shaders/DefaultMaterialTechnique","../shaders/DefaultMaterialTechniqueConfiguration","../shaders/RealisticTreeTechnique"],(function(e,t,r,a,s,i,o,n,u,l,h,c,d,p,m,f,g,T,b,x,S,_){"use strict";class O extends d.Material{constructor(e){super(e,w),this.supportsEdges=!0,this.produces=new Map([[m.RenderSlot.OPAQUE_MATERIAL,e=>(o.is3DGeometryOutput(e)||o.isShadowRelatedOutput(e))&&!this.parameters.transparent],[m.RenderSlot.TRANSPARENT_MATERIAL,e=>(o.is3DGeometryOutput(e)||o.isShadowRelatedOutput(e))&&this.parameters.transparent&&this.parameters.writeDepth],[m.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,e=>(o.is3DGeometryOutput(e)||o.isShadowRelatedOutput(e))&&this.parameters.transparent&&!this.parameters.writeDepth]]),this._configuration=new S.DefaultMaterialTechniqueConfiguration,this._vertexBufferLayout=y(this.parameters)}isVisibleForOutput(e){return e!==o.ShaderOutput.Shadow&&e!==o.ShaderOutput.ShadowExcludeHighlight&&e!==o.ShaderOutput.ShadowHighlight||this.parameters.castShadows}isVisible(){const e=this.parameters;if(!super.isVisible()||0===e.layerOpacity)return!1;const{hasInstancedColor:t,hasVertexColors:r,hasSymbolColors:a,vvColor:s}=e,i="replace"===e.colorMixMode,o=e.opacity>0,n=e.externalColor&&e.externalColor[3]>0,u=t||s||a;return r&&u?i||o:r?i?n:o:u?i||o:i?n:o}getConfiguration(e,t){return this._configuration.output=e,this._configuration.hasNormalTexture=!!this.parameters.normalTextureId,this._configuration.hasColorTexture=!!this.parameters.textureId,this._configuration.hasVertexTangents=this.parameters.hasVertexTangents,this._configuration.instanced=this.parameters.isInstanced,this._configuration.instancedDoublePrecision=this.parameters.instancedDoublePrecision,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.hasVerticalOffset=null!=this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=null!=this.parameters.screenSizePerspective,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasSliceHighlight=this.parameters.hasSliceHighlight,this._configuration.alphaDiscardMode=this.parameters.textureAlphaMode,this._configuration.normalType=this.parameters.normalType,this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,null!=this.parameters.customDepthTest&&(this._configuration.customDepthTest=this.parameters.customDepthTest),this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.cullFace=this.parameters.hasSlicePlane?h.CullFaceOptions.None:this.parameters.cullFace,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration.hasModelTransformation=null!=this.parameters.modelTransformation,e!==o.ShaderOutput.Color&&e!==o.ShaderOutput.Alpha||(this._configuration.hasVertexColors=this.parameters.hasVertexColors,this._configuration.hasSymbolColors=this.parameters.hasSymbolColors,this.parameters.treeRendering?this._configuration.doubleSidedMode=u.NormalsDoubleSidedMode.WindingOrder:this._configuration.doubleSidedMode=this.parameters.doubleSided&&"normal"===this.parameters.doubleSidedType?u.NormalsDoubleSidedMode.View:this.parameters.doubleSided&&"winding-order"===this.parameters.doubleSidedType?u.NormalsDoubleSidedMode.WindingOrder:u.NormalsDoubleSidedMode.None,this._configuration.instancedColor=this.parameters.hasInstancedColor,this._configuration.receiveShadows=this.parameters.receiveShadows&&this.parameters.shadowMappingEnabled,this._configuration.receiveAmbientOcclusion=this.parameters.receiveAmbientOcclusion&&null!=t.ssao,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.textureAlphaPremultiplied=!!this.parameters.textureAlphaPremultiplied,this._configuration.pbrMode=this.parameters.usePBR?this.parameters.isSchematic?l.PBRMode.Schematic:l.PBRMode.Normal:l.PBRMode.Disabled,this._configuration.hasMetallicRoughnessTexture=!!this.parameters.metallicRoughnessTextureId,this._configuration.hasEmissionTexture=!!this.parameters.emissiveTextureId,this._configuration.hasOcclusionTexture=!!this.parameters.occlusionTextureId,this._configuration.offsetBackfaces=!(!this.parameters.transparent||!this.parameters.offsetTransparentBackfaces),this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.enableOffset=t.camera.relativeElevation<p.OITPolygonOffsetLimit,this._configuration.snowCover=this.hasSnowCover(t),this._configuration.hasColorTextureTransform=!!this.parameters.colorTextureTransformMatrix,this._configuration.hasNormalTextureTransform=!!this.parameters.normalTextureTransformMatrix,this._configuration.hasEmissionTextureTransform=!!this.parameters.emissiveTextureTransformMatrix,this._configuration.hasOcclusionTextureTransform=!!this.parameters.occlusionTextureTransformMatrix,this._configuration.hasMetallicRoughnessTextureTransform=!!this.parameters.metallicRoughnessTextureTransformMatrix),this._configuration}hasSnowCover(e){return null!=e.weather&&e.weatherVisible&&"snowy"===e.weather.type&&"enabled"===e.weather.snowCover}intersect(e,t,a,i,o,n){if(null!=this.parameters.verticalOffset){const e=a.camera;r.set(V,t[12],t[13],t[14]);let n=null;switch(a.viewingMode){case s.ViewingMode.Global:n=r.normalize(C,V);break;case s.ViewingMode.Local:n=r.copy(C,D)}let u=0;const l=r.subtract(I,V,e.eye),h=r.length(l),c=r.scale(l,l,1/h);let d=null;this.parameters.screenSizePerspective&&(d=r.dot(n,c)),u+=b.verticalOffsetAtDistance(e,h,this.parameters.verticalOffset,d??0,this.parameters.screenSizePerspective),r.scale(n,n,u),r.transformMat3(P,n,a.transform.inverseRotation),i=r.subtract(A,i,P),o=r.subtract(R,o,P)}b.intersectTriangleGeometry(e,a,i,o,g.getVerticalOffsetObject3D(a.verticalOffset),n)}createGLMaterial(e){return new M(e)}createBufferWriter(){return new T.DefaultBufferWriter(this._vertexBufferLayout)}}class M extends c.GLTextureMaterial{constructor(e){super({...e,...e.material.parameters})}_updateShadowState(e){e.shadowMap.enabled!==this._material.parameters.shadowMappingEnabled&&this._material.setParameters({shadowMappingEnabled:e.shadowMap.enabled})}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){this._output!==o.ShaderOutput.Color&&this._output!==o.ShaderOutput.Alpha||(this._updateShadowState(e),this._updateOccludeeState(e));const t=this._material.parameters;this.updateTexture(t.textureId);const a=e.camera.viewInverseTransposeMatrix;return r.set(t.origin,a[3],a[7],a[11]),this._material.setParameters(this.textureBindParameters),this.ensureTechnique(t.treeRendering?_.RealisticTreeTechnique:x.DefaultMaterialTechnique,e)}}class v extends x.DefaultMaterialPassParameters{constructor(){super(...arguments),this.initTextureTransparent=!1,this.treeRendering=!1,this.hasVertexTangents=!1}}const w=new v;function y(e){const r=i.newLayout().vec3f(f.VertexAttribute.POSITION);e.normalType===n.NormalType.Compressed?r.vec2i16(f.VertexAttribute.NORMALCOMPRESSED,{glNormalized:!0}):r.vec3f(f.VertexAttribute.NORMAL),e.hasVertexTangents&&r.vec4f(f.VertexAttribute.TANGENT);return(e.textureId||e.normalTextureId||e.metallicRoughnessTextureId||e.emissiveTextureId||e.occlusionTextureId)&&r.vec2f(f.VertexAttribute.UV0),e.hasVertexColors&&r.vec4u8(f.VertexAttribute.COLOR),e.hasSymbolColors&&r.vec4u8(f.VertexAttribute.SYMBOLCOLOR),t("enable-feature:objectAndLayerId-rendering")&&r.vec4u8(f.VertexAttribute.OBJECTANDLAYERIDCOLOR),r}const A=a.create(),R=a.create(),D=a.fromValues(0,0,1),C=a.create(),P=a.create(),V=a.create(),I=a.create();e.DefaultGLMaterial=M,e.DefaultMaterial=O,e.DefaultMaterialParameters=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
