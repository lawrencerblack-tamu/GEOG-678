/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../core/libs/gl-matrix-2/factories/vec2f32","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/VertexAttribute","./internal/bufferWriterUtils","../shaders/LineCalloutTechnique","../shaders/LineCalloutTechniqueConfiguration"],(function(e,t,r,i,n,s,a,u,o,l,c){"use strict";class f extends s.Material{get uniqueMaterialIdentifier(){return this._uniqueMaterialIdentifier}constructor(e){super(e,new d),this.produces=new Map([[a.RenderSlot.LINE_CALLOUTS,e=>e===i.ShaderOutput.Color],[a.RenderSlot.LINE_CALLOUTS_HUD_DEPTH,e=>e===i.ShaderOutput.Color]]),this._configuration=new c.LineCalloutTechniqueConfiguration,this._uniqueMaterialIdentifier=f.uniqueMaterialIdentifier(this.parameters)}passParameters(){return this.parameters}getConfiguration(e,t){const r=t?.slot!==a.RenderSlot.LINE_CALLOUTS;return this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.hasVerticalOffset=null!=this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=null!=this.parameters.screenSizePerspective,this._configuration.depthHudEnabled=r,this._configuration.depthHudAlignStartEnabled=!!this.parameters.depthHUDAlignStart,this._configuration.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration}intersect(){}createGLMaterial(e){return new h(e)}createBufferWriter(){return new g}validateParameters(e){const t=f.uniqueMaterialIdentifier(e);t!==this._uniqueMaterialIdentifier&&(this._uniqueMaterialIdentifier=t)}static uniqueMaterialIdentifier(e){return JSON.stringify({horizontalScreenOffset:e.horizontalScreenOffset??0,centerOffsetUnits:e.centerOffsetUnits||"world"})}}class h extends n{beginSlot(e){return this.ensureTechnique(l.LineCalloutTechnique,e)}}class d extends s.MaterialParameters{constructor(){super(...arguments),this.horizontalScreenOffset=0,this.color=[0,0,0,1],this.size=1,this.occlusionTest=!1,this.shaderPolygonOffset=1e-5,this.depthHUDAlignStart=!1,this.centerOffsetUnits="world",this.hasSlicePlane=!1}}const S=r.newLayout().vec3f(u.VertexAttribute.POSITION).vec3f(u.VertexAttribute.NORMAL).vec2f(u.VertexAttribute.UV0).vec4f(u.VertexAttribute.CENTEROFFSETANDDISTANCE),b=[t.fromValues(0,0),t.fromValues(1,0),t.fromValues(0,1),t.fromValues(1,0),t.fromValues(1,1),t.fromValues(0,1)];class g{constructor(){this.vertexBufferLayout=S}elementCount(e){return 6*e.attributes.get(u.VertexAttribute.POSITION).indices.length}write(e,t,r,i,n){o.writePosition(r.attributes.get(u.VertexAttribute.POSITION),e,i.position,n,6),o.writeNormal(r.attributes.get(u.VertexAttribute.NORMAL),t,i.normal,n,6),o.writeBufferVec4(r.attributes.get(u.VertexAttribute.CENTEROFFSETANDDISTANCE),i.centerOffsetAndDistance,n,6);for(let s=0;s<b.length;++s)i.uv0.setVec(n+s,b[s])}}e.LineCalloutMaterial=f,e.Parameters=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
