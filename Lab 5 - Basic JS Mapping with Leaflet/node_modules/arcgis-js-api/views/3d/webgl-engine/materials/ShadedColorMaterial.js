/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/buffer/BufferView","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../lib/basicInterfaces","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/Util","../lib/VertexAttribute","./internal/bufferWriterUtils","./internal/MaterialUtil","../shaders/ShadedColorMaterialTechnique"],(function(e,t,r,i,a,s,n,o,l,c,u,h,d,p,b,f,S){"use strict";class g extends u.Material{constructor(e){super(e,new A),this.supportsEdges=!0,this.produces=new Map([[h.RenderSlot.OPAQUE_MATERIAL,e=>e===o.ShaderOutput.Highlight||o.isColorAlphaOrOID(e)&&!this._isTransparent],[h.RenderSlot.TRANSPARENT_MATERIAL,e=>o.isColorAlphaOrOID(e)&&this._isTransparent&&this.parameters.writeDepth],[h.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,e=>o.isColorAlphaOrOID(e)&&this._isTransparent&&!this.parameters.writeDepth]]),this._configuration=new S.ShadedColorMaterialTechniqueConfiguration,this._vertexAttributeLocations=S.vertexAttributeLocations}getConfiguration(e,t){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this._isTransparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.screenSizeEnabled=this.parameters.screenSizeEnabled,this._configuration.shadingEnabled=this.parameters.shadingEnabled,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}intersect(e,r,i,s,n,o){if(this.parameters.screenSizeEnabled){const r=e.attributes.get(p.VertexAttribute.OFFSET),l={applyToVertex:(e,a,s,n)=>{const o=t.set(E,r.data[3*n],r.data[3*n+1],r.data[3*n+2]),l=t.set(x,e,a,s);return t.scale(o,o,this.parameters.screenSizeScale*i.camera.computeScreenPixelSizeAt(o)),t.add(l,l,o),[l[0],l[1],l[2]]},applyToAabb:e=>{const t=a.center(e,E);return a.scale(e,this.parameters.screenSizeScale*i.camera.computeScreenPixelSizeAt(t))}};f.intersectTriangleGeometry(e,i,s,n,l,o)}else f.intersectTriangleGeometry(e,i,s,n,void 0,o)}createGLMaterial(e){return new T(e)}createBufferWriter(){return new m(this.parameters.screenSizeEnabled)}get _isTransparent(){return this.parameters.color[3]<1||this.parameters.forceTransparentMode}}class T extends c{beginSlot(e){return this.ensureTechnique(S.ShadedColorMaterialTechnique,e)}}class A extends u.MaterialParameters{constructor(){super(...arguments),this.color=i.fromValues(1,1,1,1),this.shadingTint=i.fromValues(0,0,0,.25),this.shadingDirection=t.normalize(r.create(),[.5,-.5,-.5]),this.screenSizeScale=14,this.forceTransparentMode=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=l.CullFaceOptions.None,this.screenSizeEnabled=!1,this.shadingEnabled=!0}}class m{constructor(e){this.screenSizeEnabled=e;const t=n.newLayout().vec3f(p.VertexAttribute.POSITION).vec3f(p.VertexAttribute.NORMAL);this.screenSizeEnabled&&t.vec3f(p.VertexAttribute.OFFSET),this.vertexBufferLayout=t}elementCount(e){return e.attributes.get(p.VertexAttribute.POSITION).indices.length}write(e,t,r,i,a){if(b.writeDefaultAttributes(r,this.vertexBufferLayout,e,t,i,a),this.screenSizeEnabled){if(!r.attributes.has(p.VertexAttribute.OFFSET))throw new Error(`${p.VertexAttribute.OFFSET} vertex attribute required for screenSizeEnabled ShadedColorMaterial`);{const e=r.attributes.get(p.VertexAttribute.OFFSET);d.assert(3===e.size);const n=i.getField(p.VertexAttribute.OFFSET,s.BufferViewVec3f);if(!n)throw new Error("unable to acquire view for "+p.VertexAttribute.OFFSET);b.writePosition(e,t,n,a)}}}}const E=r.create(),x=r.create();e.ShadedColorMaterial=g,e.ShadedColorMaterialParameters=A,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
