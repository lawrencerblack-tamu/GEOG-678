/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/Evented","../../../../core/has","../../../../core/Logger","../../../../core/maybe","../../../../core/reactiveUtils","../../../../core/scheduling","../../../../core/time","../../../../core/accessorSupport/decorators/property","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../collections/Component/ComponentObjectCollection","../core/shaderTechnique/ShaderTechniqueRepository","../lib/basicInterfaces","../lib/CompositingHelper","../lib/depthRangeUtils","../lib/GLMaterialRepository","../lib/MagnifierHelper","../lib/Material","../lib/ObjectAndLayerIdRenderHelper","../lib/Renderer","../lib/RenderingContext","../lib/TextureRepository","../materials/markerTextureRepository","../materials/stippleTextureRepository","../materials/internal/WaterTextureRepository","./contextCache","./requireUtils","./ScreenshotManager","./testUtils","../../../support/RenderState","../../../webgl/contextUtils"],(function(e,t,r,i,s,n,o,a,d,h,c,p,l,u,_,y,R,m,g,x,b,w,f,T,v,C,A,M,q,U,O,S,L,H){"use strict";e.RenderView=class extends r{constructor(e){super({}),this.events=new i,this.waterTextures=new M.WaterTextureRepository,this._magnifierHelper=new x.MagnifierHelper,this.objectAndLayerIdRenderHelper=s("enable-feature:objectAndLayerId-rendering")?new w.ObjectAndLayerIdRenderHelper:null,this._needsUpdate=!0,this._needsRender=!0,this._idleSuspend=!0,this._needsWaterReflectionUpdate=!1,this._lastAnimationUpdate=0,this._container=e.container,this._viewingMode=e.viewingMode;try{this._initializeContext(e)}catch(n){return void console.error("Failed to initialize context",n)}this.addHandles([a.watch((()=>this.waterTextures?.updating),(()=>this.requestRender()),a.initial),a.watch((()=>e.view.qualityProfile),(e=>this.renderer?.updateRenderFeatures(e)),a.syncAndInitial),this._magnifierHelper.events.on("request-render",(()=>this.requestRender()))]);const{memoryController:t}=e.view.resourceController;this.stippleTextures=A.createStippleTextureRepository(this._rctx,t),this.markerTextures=C.createMarkerTextureRepository(this._rctx,t),this._shaderTechniques=new _.ShaderTechniqueRepository({rctx:this._rctx,viewingMode:e.viewingMode,stippleTextureRepository:this.stippleTextures,waterTextureRepository:this.waterTextures,markerTextureRepository:this.markerTextures}),this._textures=new v.TextureRepository(e,this._shaderTechniques,this._rctx),this.addHandles(this._textures.events.on("changed",(e=>this.requestRender(e)))),this._materialRepository=new g.GLMaterialRepository(this._textures,this._shaderTechniques,(()=>this.requestRender()),(()=>this.requestRender())),this._compositingHelper=new R(this._rctx,this._shaderTechniques),this.renderer=new f.Renderer(e,this._materialRepository,this._textures,this._shaderTechniques,this._rctx,this._compositingHelper,this._magnifierHelper,(e=>this.requestRender(e)));const r={renderScene:(e,t,r,i)=>this.renderer.render(e,t,r,i),requestRenderScene:e=>this.requestRender(e),prepareOverlay:()=>e.options.screenshot.prepareOverlay(),renderOverlay:(t,r,i)=>e.options.screenshot.renderOverlay(t,r,i)};this._screenshotManager=new O.ScreenshotManager(this._rctx,r,(e=>this.events.emit("force-camera-for-screenshot",e))),this._registerFrameTask(e)}normalizeCtorArgs(){return{}}destroy(){this._container.contains(this._canvas)&&this._container.removeChild(this._canvas),this._frameTask=o.removeMaybe(this._frameTask),this._shaderTechniques=o.destroyMaybe(this._shaderTechniques),this._componentObjects=o.destroyMaybe(this._componentObjects),this._screenshotManager=o.destroyMaybe(this._screenshotManager),o.destroyMaybe(this.renderer),this._textures=o.destroyMaybe(this._textures),o.destroyMaybe(this._magnifierHelper),o.destroyMaybe(this.waterTextures),o.destroyMaybe(this.markerTextures),o.destroyMaybe(this.stippleTextures),this._canvas=null,this._container=null,this._rctx=o.destroyMaybe(this._rctx)}requestRender(e=y.RenderRequestType.UPDATE){this._needsRender=!0,e===y.RenderRequestType.UPDATE&&(this._needsUpdate=!0)}get updating(){return this._needsUpdate||this._needsWaterReflectionUpdate||this.renderer.updating||this._textures.updating||this.waterTextures.updating||this._magnifierHelper.updating}get textureRepository(){return this._textures}get compositingHelper(){return this._compositingHelper}set magnifier(e){this._magnifierHelper.magnifier=e}setIdleSuspend(e){this._idleSuspend!==e&&(this._idleSuspend=e,this.requestRender())}get renderingContext(){return this._rctx}get capabilities(){return this._rctx.capabilities}get canvas(){return this._canvas}takeScreenshot(e){return this._screenshotManager.takeScreenshot(e).then((e=>e[0]))}takeScreenshotWithOID(e){return e.objectAndLayerIdColor=!0,this._screenshotManager.takeScreenshot(e)}getAlpha(){return!!this._rctx.contextAttributes.alpha}getMinimalDepthForArea(e,t,r,i,s,n=s){const o=i.constrainWindowSize(t,r,s*i.pixelRatio,n*i.pixelRatio),a=this._ensureDepthBuffer(o);this.renderer.readDepthPixels(i,o,a);let d=Number.MAX_VALUE;for(let h=0;h<o[2]*o[3];h++){const e=m.textureToDepth(4*h,a,i.nearFar);d>e&&e!==i.nearFar[0]&&e!==i.nearFar[1]&&(d=e)}if(e){const s=e.pickDepth(t*i.pixelRatio,r*i.pixelRatio,i);null!=s&&d>s&&s!==i.nearFar[0]&&s!==i.nearFar[1]&&(d=s)}return d===Number.MAX_VALUE?void 0:d}_ensureDepthBuffer(e){const t=4*e[2]*e[3];return(null==this._tmpDepthBuffer||this._tmpDepthBuffer.byteLength<t)&&(this._tmpDepthBuffer=new Uint8Array(t)),this._tmpDepthBuffer}async reloadShaders(){U.removeLoadedShaderModules(),await this._shaderTechniques.reloadAll(),this.requestRender()}_registerFrameTask(e){const t=e.view.state;let r=!1,i=y.RenderRequestType.BACKGROUND,s=!1;const n={preRender:({time:s})=>{r=this.updating,i=this._needsUpdate?y.RenderRequestType.UPDATE:y.RenderRequestType.BACKGROUND,e.commitSyncLayers();const n=h.Milliseconds(s-this._lastAnimationUpdate);if(n>this.renderer.animationTimestep||null!=t.forcedAnimationTime||r||this._needsRender){const e=h.Milliseconds(n/this.renderer.animationTimeDilation),r=new b.UpdateParameters(t.camera,e,t.forcedAnimationTime);this.renderer.updateAnimation(r)&&this.requestRender(y.RenderRequestType.BACKGROUND),this._lastAnimationUpdate=s}},render:({time:e})=>{if((this._needsRender||!this._idleSuspend||!this.renderer.isCameraFinal||this._needsWaterReflectionUpdate)&&t.camera.fullWidth>0&&t.camera.fullHeight>0){const r=this._needsUpdate&&this._idleSuspend&&this.renderer.isCameraFinal;this._needsRender=!1,this._needsUpdate=!1,this._needsWaterReflectionUpdate=!1,this.renderer.render(t,e),s=!0,r&&this.renderer.hasReflections&&(this.requestRender(y.RenderRequestType.BACKGROUND),this._needsWaterReflectionUpdate=!0)}},update:({time:e})=>{const r=this.renderer.hasSlicePlane||this._magnifierHelper.enabled||this.renderer.hasDecorations||this.renderer.hasHighlights,i=new O.ScreenshotContext(t,r,this.renderer.fboCache);this._textures.update(),this._screenshotManager.update(i,e)},finish:()=>{s&&(this.renderer.finish(t.mode===L.RenderState.IDLE?i:y.RenderRequestType.UPDATE),s=!1)}};this._frameTask=d.addFrameTask(n)}_initializeContext(e){const t=e.options;this._canvas=t.canvas,this._canvas||(this._canvas=document.createElement("canvas")),this._canvas.setAttribute("style","width: 100%; height:100%; display:block;");const r={alpha:t.alpha||!1,premultipliedAlpha:!0,antialias:!1,depth:!0,stencil:t.stencil??!0,powerPreference:"high-performance",preserveDrawingBuffer:t.preserveDrawingBuffer??!1},i=H.createContext(this._canvas,r);null!=i?(this._rctx=this._newRenderingContext(i,e),this._loadShaderOnlyExtensions(),!t.alpha&&this._rctx.contextAttributes.alpha&&n.getLogger(this).error("WebGL context has alpha channel even though no alpha channel was requested"),!this._rctx.contextAttributes.alpha&&s("safari")>=11&&(this._container.style.backgroundColor="black"),this._container.appendChild(this._canvas)):n.getLogger(this).error("A WebGL2 context could not be created.")}_newRenderingContext(e,t){const r={disabledExtensions:t.options.deactivatedWebGLExtensions||{},debugWebGLExtensions:t.options.debugWebGLExtensions||{},maxAnisotropy:8},i=(e,r)=>t.view.resourceController.memoryController.newCache(e,r);if(S.contextCache.enabled){let t=D.get(e);return t?(t.configure(r),t.newCache=i,t.ref(),t):(t=new T.RenderingContext(e,r,i),D.set(e,t),t.ref(),t)}return new T.RenderingContext(e,r,i)}_loadShaderOnlyExtensions(){this._rctx.capabilities.enable("textureFloat")}getObjectAndLayerIdColor(e){return null!=this.objectAndLayerIdRenderHelper?this.objectAndLayerIdRenderHelper.getObjectAndLayerIdColor(e):null}get componentObjectCollection(){return null==this._componentObjects&&(this._componentObjects=new u.ComponentObjectCollection(this.renderer.renderPassManager,this._viewingMode)),this._componentObjects}set componentObjectCollection(e){this._componentObjects=e}},t.__decorate([c.property({type:Boolean,readOnly:!0})],e.RenderView.prototype,"updating",null),t.__decorate([c.property()],e.RenderView.prototype,"_rctx",void 0),t.__decorate([c.property()],e.RenderView.prototype,"_container",void 0),t.__decorate([c.property()],e.RenderView.prototype,"_canvas",void 0),t.__decorate([c.property()],e.RenderView.prototype,"stippleTextures",void 0),t.__decorate([c.property()],e.RenderView.prototype,"markerTextures",void 0),t.__decorate([c.property()],e.RenderView.prototype,"waterTextures",void 0),t.__decorate([c.property()],e.RenderView.prototype,"_magnifierHelper",void 0),t.__decorate([c.property({readOnly:!0})],e.RenderView.prototype,"objectAndLayerIdRenderHelper",void 0),t.__decorate([c.property()],e.RenderView.prototype,"_textures",void 0),t.__decorate([c.property({readOnly:!0})],e.RenderView.prototype,"renderer",void 0),t.__decorate([c.property()],e.RenderView.prototype,"_screenshotManager",void 0),t.__decorate([c.property()],e.RenderView.prototype,"componentObjectCollection",null),t.__decorate([c.property()],e.RenderView.prototype,"_componentObjects",void 0),t.__decorate([c.property()],e.RenderView.prototype,"_needsUpdate",void 0),t.__decorate([c.property()],e.RenderView.prototype,"_needsWaterReflectionUpdate",void 0),e.RenderView=t.__decorate([l.subclass("esri.views.3d.webgl-engine.parts.RenderView")],e.RenderView);const D=q.getContextCache();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
