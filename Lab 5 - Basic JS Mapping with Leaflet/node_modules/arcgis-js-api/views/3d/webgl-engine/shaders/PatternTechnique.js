/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/tslib.es6","../../../../core/has","../core/shaderLibrary/ShaderOutput","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../core/shaderTechnique/ShaderTechniqueConfiguration","../lib/basicInterfaces","../lib/OrderIndependentTransparency","../lib/Program","../lib/StencilUtils","../lib/TransparencyPassType","../lib/VertexAttribute","../materials/DefaultTechniqueConfiguration","../materials/PatternStyle","../../../../chunks/Pattern.glsl","../../../webgl/renderState"],(function(e,t,r,a,o,i,n,s,l,p,c,u,d,h,y,O,T,_){"use strict";class P extends n.ShaderTechnique{initializeProgram(e){return new c.Program(e.rctx,P.shader.get().build(this.configuration),a("enable-feature:objectAndLayerId-rendering")?v:m)}_setPipelineState(e,t){const r=this.configuration,a=e===d.TransparencyPassType.NONE,i=e===d.TransparencyPassType.FrontFace;return _.makePipelineState({blending:r.output===o.ShaderOutput.Color||r.output===o.ShaderOutput.Alpha?a?p.blendingDefault:p.oitBlending(e):null,culling:_.cullingParams(r.cullFace),depthTest:r.draped?null:{func:p.oitDepthTest(e)},depthWrite:r.draped?null:a?_.defaultDepthWriteParams:p.oitDepthWrite(e),colorWrite:_.defaultColorWriteParams,stencilWrite:r.hasOccludees?u.stencilWriteMaskOn:null,stencilTest:r.hasOccludees?t?u.stencilToolMaskBaseParams:u.stencilBaseAllZerosParams:null,polygonOffset:a||i?r.polygonOffset?b:null:p.getOITPolygonOffset(r.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipeline(e){return e?this._occludeePipelineState:super.getPipeline()}}P.shader=new i.ReloadableShaderModule(T.Pattern,(()=>new Promise(((t,r)=>e(["./Pattern.glsl"],t,r)))));const b={factor:1,units:1};class f extends y.DefaultTechniqueConfiguration{constructor(){super(...arguments),this.output=o.ShaderOutput.Color,this.cullFace=l.CullFaceOptions.None,this.transparencyPassType=d.TransparencyPassType.NONE,this.hasSlicePlane=!1,this.hasVertexColors=!1,this.polygonOffset=!1,this.hasOccludees=!1,this.enableOffset=!0,this.multipassEnabled=!1,this.cullAboveGround=!1,this.vvColor=!1,this.objectAndLayerIdColorInstanced=!1}}r.__decorate([s.parameter({count:o.ShaderOutput.COUNT})],f.prototype,"output",void 0),r.__decorate([s.parameter({count:l.CullFaceOptions.COUNT})],f.prototype,"cullFace",void 0),r.__decorate([s.parameter({count:O.Style.COUNT})],f.prototype,"style",void 0),r.__decorate([s.parameter({count:d.TransparencyPassType.COUNT})],f.prototype,"transparencyPassType",void 0),r.__decorate([s.parameter()],f.prototype,"hasSlicePlane",void 0),r.__decorate([s.parameter()],f.prototype,"hasVertexColors",void 0),r.__decorate([s.parameter()],f.prototype,"polygonOffset",void 0),r.__decorate([s.parameter()],f.prototype,"hasOccludees",void 0),r.__decorate([s.parameter()],f.prototype,"patternSpacing",void 0),r.__decorate([s.parameter()],f.prototype,"lineWidth",void 0),r.__decorate([s.parameter()],f.prototype,"enableOffset",void 0),r.__decorate([s.parameter()],f.prototype,"draped",void 0),r.__decorate([s.parameter()],f.prototype,"multipassEnabled",void 0),r.__decorate([s.parameter()],f.prototype,"cullAboveGround",void 0),r.__decorate([s.parameter()],f.prototype,"vvColor",void 0),r.__decorate([s.parameter({constValue:!0})],f.prototype,"writeDepth",void 0),r.__decorate([s.parameter({constValue:!1})],f.prototype,"occlusionPass",void 0),r.__decorate([s.parameter({constValue:!1})],f.prototype,"hasVvInstancing",void 0),r.__decorate([s.parameter({constValue:!1})],f.prototype,"vvSize",void 0),r.__decorate([s.parameter({constValue:!1})],f.prototype,"vvOpacity",void 0);const m=new Map([[h.VertexAttribute.POSITION,0],[h.VertexAttribute.COLOR,3],[h.VertexAttribute.UVMAPSPACE,4],[h.VertexAttribute.COLORFEATUREATTRIBUTE,5],[h.VertexAttribute.BOUNDINGRECT,6]]),v=new Map([[h.VertexAttribute.POSITION,0],[h.VertexAttribute.COLOR,3],[h.VertexAttribute.UVMAPSPACE,4],[h.VertexAttribute.COLORFEATUREATTRIBUTE,5],[h.VertexAttribute.BOUNDINGRECT,6],[h.VertexAttribute.OBJECTANDLAYERIDCOLOR,9]]);t.PatternTechnique=P,t.PatternTechniqueConfiguration=f,t.vertexAttributeLocations=m,t.vertexAttributeLocationsOID=v,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
