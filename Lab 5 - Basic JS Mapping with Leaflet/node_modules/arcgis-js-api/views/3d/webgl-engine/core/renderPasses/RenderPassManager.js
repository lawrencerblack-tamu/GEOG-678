/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Logger","../../../../../core/has","../../../../../core/RandomLCG","../../../../../core/Error","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/libs/gl-matrix-2/math/mat3","../../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../../core/libs/gl-matrix-2/math/mat4","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","./AllRenderPasses","./RenderPass","../shaderLibrary/ShaderOutput","../util/TwoVectorPosition","../../effects/RenderPlugin","../../lib/depthRange","../../lib/RenderSlot"],(function(e,s,t,a,r,i,h,n,o,u,d,l,p,c,m,g,P,_,S){"use strict";e.RenderPassManager=class extends P.SyncPreparesRenderPlugin{constructor(){super({}),this._passes=null,this.produces=new Map([[S.RenderSlot.OPAQUE_MATERIAL,e=>this._produces(e)],[S.RenderSlot.TRANSPARENT_MATERIAL,e=>!!(this._passes&&this._passes.materialTransparent.count>0)&&this._produces(e)],[S.RenderSlot.INTEGRATED_MESH,e=>this._produces(e)]]),this._materialPassParameters=new p.MaterialPassParameters,this._shadowPassParameters=new p.ShadowMapPassParameters,this._highlightPassParameters=new p.HighlightPassParameters,this._systems=new Set}initializeRenderContext(e){this._context=e;const s=e.renderContext.rctx,t=e.techniqueRepository;this._passes={materialOpaque:new c.RenderPass(s,t),materialTransparent:new c.RenderPass(s,t,c.RenderPassSorting.BackToFront),materialIntegratedMesh:new c.RenderPass(s,t),shadowMap:new c.RenderPass(s,t),highlight:new c.RenderPass(s,t),highlightIntegratedMesh:new c.RenderPass(s,t),highlightShadowMap:new c.RenderPass(s,t),defaultShadowMap:new c.RenderPass(s,t)}}get rctx(){return this._context.renderContext.rctx}uninitializeRenderContext(){}dispose(){this._context=null,this._systems.clear()}register(e){this._systems.add(e)}_produces(e){return 0!==this._systems.size&&null!==this._passes&&(e===m.ShaderOutput.Highlight?this._passes.highlight.count>0||this._passes.highlightIntegratedMesh.count>0:e!==m.ShaderOutput.ShadowHighlight||this._passes.highlight.count>0)}prepareRender(e){if(0!==this._systems.size&&null!==this._passes){for(const e of Object.values(this._passes))e.prepareSubmit();this._systems.forEach((s=>s.submit(this._passes,e.bindParameters)));for(const e of Object.values(this._passes))e.finishSubmit();this._context.techniqueRepository.frameUpdate()}}prepareTechniques(e){if(0===this._systems.size)return null;const s=e.output===m.ShaderOutput.Shadow||e.output===m.ShaderOutput.ShadowHighlight||e.output===m.ShaderOutput.ShadowExcludeHighlight?this._shadowPassParameters:e.output===m.ShaderOutput.Highlight?this._highlightPassParameters:this._materialPassParameters,t=e.bindParameters;return this._updateParameters(t.camera,s,t.slot===S.RenderSlot.TRANSPARENT_MATERIAL),this._materialPassParameters.output=e.output,this._invoke(e,((s,t)=>s.prepare(t,e.bindParameters)))}renderNode(e,s){this._invoke(e,((t,a)=>t.dispatch(a,e.bindParameters,s)))}_invoke(e,s){if(null===this._passes)return null;switch(e.bindParameters.slot){case S.RenderSlot.OPAQUE_MATERIAL:switch(e.output){case m.ShaderOutput.Color:case m.ShaderOutput.LinearDepth:case m.ShaderOutput.Normal:case m.ShaderOutput.ObjectAndLayerIdColor:return s(this._passes.materialOpaque,this._materialPassParameters);case m.ShaderOutput.Highlight:return s(this._passes.highlight,this._highlightPassParameters);case m.ShaderOutput.Shadow:return s(this._passes.shadowMap,this._shadowPassParameters);case m.ShaderOutput.ShadowHighlight:return s(this._passes.highlightShadowMap,this._shadowPassParameters);case m.ShaderOutput.ShadowExcludeHighlight:return s(this._passes.defaultShadowMap,this._shadowPassParameters)}break;case S.RenderSlot.TRANSPARENT_MATERIAL:switch(e.output){case m.ShaderOutput.Color:case m.ShaderOutput.Alpha:case m.ShaderOutput.LinearDepth:case m.ShaderOutput.Normal:case m.ShaderOutput.ObjectAndLayerIdColor:return s(this._passes.materialTransparent,this._materialPassParameters)}break;case S.RenderSlot.INTEGRATED_MESH:switch(e.output){case m.ShaderOutput.Color:case m.ShaderOutput.LinearDepth:case m.ShaderOutput.Normal:case m.ShaderOutput.ObjectAndLayerIdColor:return s(this._passes.materialIntegratedMesh,this._materialPassParameters);case m.ShaderOutput.Highlight:return s(this._passes.highlightIntegratedMesh,this._highlightPassParameters)}}return null}notifyDirty(){this._context.requestRender()}queryDepthRange(e){const s=new _.DepthRange;return this._systems.forEach((t=>_.union(s,t.queryShadowCasterDepthRange(e)))),s}_updateParameters(e,s,t){const a=e.viewInverseTransposeMatrix;d.set(R,a[3],a[7],a[11]),O.set(R),d.copy(s.transformWorldFromViewTH,O.high),d.copy(s.transformWorldFromViewTL,O.low),d.copy(s.slicePlaneLocalOrigin,R),n.fromMat4(s.transformViewFromCameraRelativeRS,e.viewMatrix),u.copy(s.transformProjFromView,e.projectionMatrix),s.identifier===p.RenderPassIdentifier.Material&&(this._materialPassParameters.transparent=t,n.transpose(w,s.transformViewFromCameraRelativeRS),n.invert(s.transformNormalViewFromGlobal,w))}},e.RenderPassManager=s.__decorate([h.subclass("esri.views.3d.webgl-engine.core.renderPasses.RenderPassManager")],e.RenderPassManager);const R=l.create(),w=o.create(),O=new g.TwoVectorPosition;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
