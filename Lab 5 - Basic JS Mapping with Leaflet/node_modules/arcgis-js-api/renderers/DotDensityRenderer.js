/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../Color","../core/lang","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/subclass","../layers/support/fieldUtils","./Renderer","./mixins/VisualVariablesMixin","./support/AttributeColorInfo","./support/DotDensityLegendOptions","../symbols/SimpleFillSymbol","../symbols/SimpleLineSymbol"],(function(e,t,o,r,i,s,n,l,a,d,p,u,c,y,h){"use strict";var b;let g=b=class extends(p.VisualVariablesMixin(d)){constructor(e){super(e),this.attributes=null,this.backgroundColor=new t([0,0,0,0]),this.dotBlendingEnabled=!0,this.dotShape="square",this.dotSize=1,this.legendOptions=null,this.outline=new h,this.dotValue=null,this.referenceScale=null,this.seed=1,this.type="dot-density"}calculateDotValue(e){if(null==this.referenceScale)return this.dotValue;const t=e/this.referenceScale*this.dotValue;return t<1?1:t}getSymbol(){return new y({outline:this.outline})}async getSymbolAsync(){return this.getSymbol()}getSymbols(){return[this.getSymbol()]}getAttributeHash(){return this.attributes?.reduce(((e,t)=>e+t.getAttributeHash()),"")??""}getMeshHash(){return JSON.stringify(this.outline)}clone(){return new b({attributes:o.clone(this.attributes),backgroundColor:o.clone(this.backgroundColor),dotBlendingEnabled:o.clone(this.dotBlendingEnabled),dotShape:o.clone(this.dotShape),dotSize:o.clone(this.dotSize),dotValue:o.clone(this.dotValue),legendOptions:o.clone(this.legendOptions),outline:o.clone(this.outline),referenceScale:o.clone(this.referenceScale),seed:o.clone(this.seed),visualVariables:o.clone(this.visualVariables),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}getControllerHash(){const e=this.attributes?.map((e=>e.field||e.valueExpression||""));return`${e}-${this.outline&&JSON.stringify(this.outline.toJSON())||""}`}async collectRequiredFields(e,t){await this.collectVVRequiredFields(e,t);for(const o of this.attributes??[])o.valueExpression&&await a.collectArcadeFieldNames(e,t,o.valueExpression),o.field&&e.add(o.field)}};e.__decorate([r.property({type:[u],json:{write:!0}})],g.prototype,"attributes",void 0),e.__decorate([r.property({type:t,json:{write:!0}})],g.prototype,"backgroundColor",void 0),e.__decorate([r.property({type:Boolean,json:{write:!0}})],g.prototype,"dotBlendingEnabled",void 0),e.__decorate([r.property({type:String,json:{write:!1}})],g.prototype,"dotShape",void 0),e.__decorate([r.property({type:Number,json:{write:!0}})],g.prototype,"dotSize",void 0),e.__decorate([r.property({type:c,json:{write:!0}})],g.prototype,"legendOptions",void 0),e.__decorate([r.property({type:h,json:{default:null,write:!0}})],g.prototype,"outline",void 0),e.__decorate([r.property({type:Number,json:{write:!0}})],g.prototype,"dotValue",void 0),e.__decorate([r.property({type:Number,json:{write:!0}})],g.prototype,"referenceScale",void 0),e.__decorate([r.property({type:Number,json:{write:!0}})],g.prototype,"seed",void 0),e.__decorate([n.enumeration({dotDensity:"dot-density"})],g.prototype,"type",void 0),g=b=e.__decorate([l.subclass("esri.renderers.DotDensityRenderer")],g);return g}));
