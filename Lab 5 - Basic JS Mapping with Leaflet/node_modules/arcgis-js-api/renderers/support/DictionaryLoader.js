/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../Color","../../request","../../core/Error","../../core/has","../../core/lang","../../core/Logger","../../core/LRUCache","../../core/promiseUtils","../../core/Version","../../layers/support/FieldsIndex","../../support/arcadeOnDemand","../../symbols/CIMSymbol","../../symbols/cim/OverrideHelper","../../symbols/cim/utils"],(function(e,t,i,s,r,o,n,l,a,c,u,h,y,m,d){"use strict";const f="esri.renderers.support.DictionaryLoader",p={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class g{constructor(e,t,i){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new l.LRUCache(100),this._dictionaryVersion=null,this._fieldIndex=null,this._dictionaryPromise=null,this.url=e,this.config=t,this.fieldMap=i}getSymbolFields(){return this._symbolFields}async getSymbolAsync(e,i){let s;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(i));try{s=await this._dictionaryPromise}catch(y){if(a.isAbortError(y))return this._dictionaryPromise=null,null}const r=this._dictionaryVersion&&this._dictionaryVersion.since(4,0),o={};if(this.fieldMap)for(const t of this._symbolFields){const i=d.getFieldName(this.fieldMap[t],this._fieldIndex);if(i){const s=e.attributes[i];o[t]=r?s:null!=s?""+e.attributes[i]:""}else o[t]=""}let n=null;try{n=s?.(o,i)}catch(m){return null}if(!n||"string"!=typeof n||"invalid"===n)return null;const l=n.split(";"),c=[],u=[];for(const a of l)if(a)if(a.includes("po:")){const e=a.substr(3).split("|");if(3===e.length){const i=e[0],s=e[1];let r=e[2];if("DashTemplate"===s)r=r.split(" ").map((e=>Number(e)));else if("Color"===s){const e=new t(r).toRgba();r=[e[0],e[1],e[2],255*e[3]]}else r=Number(r);u.push({primitiveName:i,propertyName:s,value:r,defaultValue:null})}}else if(a.includes("|")){for(const e of a.split("|"))if(this._itemNames.has(e)){c.push(e);break}}else this._itemNames.has(a)&&c.push(a);const h=null==e.geometry||!e.geometry.hasZ&&"point"===e.geometry.type;return this._cimPartsToCIMSymbol(e,c,u,h,i)}async fetchResources(e){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void n.getLogger(f).error("no valid URL!");const t=i(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:null!=e?e.signal:null}),[{data:r}]=await Promise.all([t,h.loadArcade()]);if(!r)throw this._dictionaryPromise=null,new s("esri.renderers.DictionaryRenderer","Bad dictionary data!");const{authoringInfo:o,dictionary_version:l,expression:a,itemsNames:y}=r,m=a;let d=!1;l&&(this._dictionaryVersion=c.Version.parse(l),d=this._dictionaryVersion.since(4,0)),this._refSymbolUrlTemplate=this.url+"/"+r.cimRefTemplateUrl,this._itemNames=new Set(y),this._symbolFields=o.symbol;const p={};if(this.config){const e=this.config;for(const t in e)p[t]=e[t]}if(o.configuration)for(const i of o.configuration)p.hasOwnProperty(i.name)||(p[i.name]=i.value);const g=[];if(e?.fields&&this.fieldMap)for(const i in this.fieldMap){const t=this.fieldMap[i],s=e.fields.filter((e=>e.name.toLowerCase()===t?.toLowerCase()));s.length>0&&g.push({...s[0],type:d?s[0].type:"esriFieldTypeString"})}g.length>0&&(this._fieldIndex=new u(g));const b=h.createDictionaryExpression(m,null!=e?e.spatialReference:null,g,p).then((e=>{const t={scale:0};return(i,s)=>{if(null==e)return null;const r=e.repurposeFeature({geometry:null,attributes:i});return t.scale=null!=s?s.scale??void 0:void 0,e.evaluate({$feature:r,$view:t},e.services)}})).catch((e=>(n.getLogger(f).error("Creating dictinoary expression failed:",e),null)));return this._dictionaryPromise=b,b}async _cimPartsToCIMSymbol(e,t,i,s,r){const n=new Array(t.length);for(let o=0;o<t.length;o++)n[o]=this._getSymbolPart(t[o],r);let l=await Promise.all(n);const a=this.fieldMap;if(a){l=o.clone(l);for(const t of l)m.OverrideHelper.applyDictionaryTextOverrides(t,e,a,this._fieldIndex,d.getTextCasing(t))}return new y({data:this._combineSymbolParts(l,i,s)})}async _getSymbolPart(e,t){const s=this._symbolCache.get(e);if(s)return s;if(this._ongoingRequests.has(e))return this._ongoingRequests.get(e).then((e=>e.data));const r=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,e),o=i(r,{responseType:"json",query:{f:"json"},...t});this._ongoingRequests.set(e,o),o.finally((()=>this._ongoingRequests.delete(e)));try{const t=await o;return this._symbolCache.put(e,t.data),t.data}catch(n){throw n}}_combineSymbolParts(e,t,i){if(!e||0===e.length)return null;const s={...e[0]};if(e.length>1){s.symbolLayers=[];for(const t of e){const e=t;s.symbolLayers.unshift(...e.symbolLayers)}}return i&&(s.callout=p),{type:"CIMSymbolReference",symbol:s,primitiveOverrides:t}}}e.DictionaryLoader=g,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
