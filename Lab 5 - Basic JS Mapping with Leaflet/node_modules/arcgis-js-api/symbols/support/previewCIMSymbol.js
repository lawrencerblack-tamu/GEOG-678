/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../core/screenUtils","../cim/CIMSymbolHelper","../cim/CIMSymbolRasterizer","../cim/OverrideHelper","../cim/utils","./previewUtils","./renderUtils"],(function(e,t,l,i,n,a,r,o){"use strict";const s=new i.CIMSymbolRasterizer(null),c=t.px2pt(r.SymbolSizeDefaults.size),y=t.px2pt(r.SymbolSizeDefaults.maxSize),m=t.px2pt(r.SymbolSizeDefaults.lineWidth),u=1;async function p(e,t,l){const i=t?.size;let n=null!=i&&"object"==typeof i&&"width"in i?i.width:i,a=null!=i&&"object"==typeof i&&"height"in i?i.height:i;if(null==n||null==a)if("esriGeometryPolygon"===l)n=c,a=c;else{const i=await f(e,t,l);i&&(n=i.width,a=i.height),"esriGeometryPolyline"===l&&(n=m),n=null!=n&&isFinite(n)?Math.min(n,y):c,a=null!=a&&isFinite(a)?Math.max(Math.min(a,y),u):c}return"legend"===t.style&&"esriGeometryPolyline"===l&&(n=m),{width:n,height:a}}async function f(e,t,i){const{feature:a,fieldMap:r,viewParams:o}=t.cimOptions||t,c=await n.OverrideHelper.resolveSymbolOverrides(e.data,a,null,r,i,null,o);if(!c)return null;(e=e.clone()).data={type:"CIMSymbolReference",symbol:c},e.data.primitiveOverrides=void 0;const y=[];return l.CIMSymbolHelper.fetchResources(c,s.resourceManager,y),l.CIMSymbolHelper.fetchFonts(c,s.resourceManager,y),y.length>0&&await Promise.all(y),l.CIMSymbolHelper.getEnvelope(c,null,s.resourceManager)}async function h(e,l={}){const{node:i,opacity:n,symbolConfig:r}=l,c=null!=r&&"object"==typeof r&&"isSquareFill"in r&&r.isSquareFill,y=l.cimOptions||l,m=y.geometryType||a.mapCIMSymbolToGeometryType(e?.data?.symbol),u=await p(e,l,m),{feature:f,fieldMap:h}=y,d=c||"esriGeometryPolygon"!==m?"preview":"legend",b=await s.rasterizeCIMSymbolAsync(e,f,u,d,h,m,null,y.viewParams,y.allowScalingUp);if(!b)return null;const{width:g,height:w}=b,S=document.createElement("canvas");S.width=g,S.height=w;S.getContext("2d").putImageData(b,0,0);const M=t.pt2px(u.width),v=t.pt2px(u.height),C=new Image(M,v);C.src=S.toDataURL(),C.ariaLabel=l.ariaLabel??null,C.alt=l.ariaLabel??"",null!=n&&(C.style.opacity=`${n}`);let I=C;if(null!=l.effectView){const e={shape:{type:"image",x:0,y:0,width:M,height:v,src:C.src},fill:null,stroke:null,offset:[0,0]};I=o.renderSymbol([[e]],[M,v],{effectView:l.effectView,ariaLabel:l.ariaLabel})}return i&&I&&i.appendChild(I),I}e.previewCIMSymbol=h,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
