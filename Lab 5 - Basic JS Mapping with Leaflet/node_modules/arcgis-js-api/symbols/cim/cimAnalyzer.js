/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["exports","../../core/colorUtils","../../core/fontUtils","../../core/lang","../../core/Logger","../../core/screenUtils","../../core/string","./CIMSymbolHelper","./defaultCIMValues","./enums","./OverrideHelper","./SDFHelper","./utils","./effects/CIMEffectHelper","../../views/2d/engine/webgl/definitions"],(function(e,t,r,i,o,a,l,s,n,p,c,m,f,u,y){"use strict";const h=()=>o.getLogger("esri.symbols.cim.cimAnalyzer");function d(e){const t=e.markerPlacement;return t&&t.angleToLine?p.Alignment.MAP:p.Alignment.SCREEN}class g{constructor(e){this._cimLayers=[],this._poMap={},this._primitiveOverrides=[],e&&(this._resourceManager=e)}analyzeSymbolReference(e,r,i){if(this._cimLayers=i??[],!e)return this._cimLayers;if(this._reset(),e.primitiveOverrides){this._primitiveOverrides=e.primitiveOverrides;for(const e of this._primitiveOverrides){const r=e.valueExpressionInfo;if(r)this._setPoMap(e.primitiveName,e.propertyName,r);else if(null!=e.value){let r=e.value;e.propertyName.includes("Color")&&(t.isRGB(r)&&(r=f.colorToArray(r)),r=f.normalizeAlpha(r)),this._setPoMap(e.primitiveName,e.propertyName,r)}}}return this._analyzeSymbol(e.symbol,r),this._cimLayers}_reset(){this._cimLayers=[],this._poMap={},this._primitiveOverrides=[]}_analyzeSymbol(e,t){switch(e?.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":this._analyzeMultiLayerSymbol(e,t)}}_analyzeMultiLayerSymbol(e,t){const r=e?.symbolLayers;if(!r)return;const i=e.effects;let o=p.Alignment.SCREEN;const a=f.getSize(e)??0;"CIMPointSymbol"===e.type&&"Map"===e.angleAlignment&&(o=p.Alignment.MAP);const l="CIMPolygonSymbol"===e.type;let s=r.length;for(;s--;){const n=r[s];if(!n||!1===n.enable)continue;let p;i?.length&&(p=[...i]);const m=n.effects;m?.length&&(i?p.push(...m):p=[...m]);let u=null;if(p){u=[];for(const e of p){const t=c.OverrideHelper.findEffectOverrides(e,this._primitiveOverrides);t&&u.push(t)}}const y=[];switch(c.OverrideHelper.findApplicableOverrides(n,this._primitiveOverrides,y),n.type){case"CIMSolidFill":this._analyzeSolidFill(n,u);break;case"CIMPictureFill":this._analyzePictureFill(n,u);break;case"CIMHatchFill":this._analyzeHatchFill(n,u);break;case"CIMGradientFill":this._analyzeGradientFill(n,u);break;case"CIMSolidStroke":this._analyzeSolidStroke(n,u,l,a);break;case"CIMPictureStroke":this._analyzePictureStroke(n,u,l,a);break;case"CIMGradientStroke":this._analyzeGradientStroke(n,u,l,a);break;case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":{"CIMLineSymbol"!==e.type&&"CIMPolygonSymbol"!==e.type||(o=d(n));const r=[],i=n.primitiveName;i&&r.push(i);const s=l&&f.isCIMMarkerStrokePlacement(n.markerPlacement);this._analyzeMarker(n,u,null,r,o,a,t,[],!1,s);break}default:h().error("Cannot analyze CIM layer",n.type)}}}_analyzeSolidFill(e,t){const{primitiveName:r,type:i}=e,o=f.normalizeAlpha(e.color);this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!e.colorLocked,color:this._getValueOrOverrideExpression(i,r,"Color",o),height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,effects:t,applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!1})}_analyzePictureFill(e,t){const{primitiveName:r,type:i}=e,o=f.getTintColor(e),a=f.getValue(e.height,n.defaultCIMValues.CIMPictureFill.height);let l=f.getValue(e.scaleX,1);if("width"in e&&"number"==typeof e.width){const t=e.width;let r=1;const i=this._resourceManager.getResource(e.url);null!=i&&(r=i.width/i.height),l/=r*(a/t)}const s={type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(r,i)};this._cimLayers.push({type:"fill",spriteRasterizationParam:s,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(i,r,"TintColor",o),height:this._getValueOrOverrideExpression(i,r,"Height",a),scaleX:this._getValueOrOverrideExpression(i,r,"ScaleX",l),angle:this._getValueOrOverrideExpression(i,r,"Rotation",f.getValue(e.rotation)),offsetX:this._getValueOrOverrideExpression(i,r,"OffsetX",f.getValue(e.offsetX)),offsetY:this._getValueOrOverrideExpression(i,r,"OffsetY",f.getValue(e.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1})}_analyzeHatchFill(e,t){const{primitiveName:r,type:i}=e,o=this._analyzeMaterialOverrides(r,["Rotation","OffsetX","OffsetY"]),a=this._normalizePrimitiveOverrideProps(o);let l=[255,255,255,1],s=!1;if(e.lineSymbol?.symbolLayers)for(const n of e.lineSymbol.symbolLayers){if("CIMSolidStroke"!==n.type)continue;const e=n.primitiveName??r;s||!e||n.colorLocked||null==this._poMap[e]?.Color&&null==this._poMap[e]?.StrokeColor||(l=f.normalizeAlpha(n.color),l=this._maybeGetValueOrOverrideExpression(e,"StrokeColor")??this._getValueOrOverrideExpression(i,e,"Color",l),s=!0);const t=this._maybeGetValueOrOverrideExpression(e,"StrokeWidth");if(t){let r=null,o=null;"number"==typeof t?r=t:o=t.valueExpressionInfo;let l=a.find((e=>"strokeWidth"===e.propertyName));l?l.propertyName="width":(l={type:"CIMPrimitiveOverride",primitiveName:e,propertyName:"width",valueExpressionInfo:o,value:r,defaultValue:f.getDefaultCIMValue(i,"width")},a.push(l))}}const p={type:"sprite-rasterization-param",resource:e,overrides:a};this._cimLayers.push({type:"fill",spriteRasterizationParam:p,colorLocked:!!e.colorLocked,effects:t,color:l,height:this._getValueOrOverrideExpression(i,r,"Separation",f.getValue(e.separation,n.defaultCIMValues.CIMHatchFill.separation)),scaleX:1,angle:this._getValueOrOverrideExpression(i,r,"Rotation",f.getValue(e.rotation)),offsetX:this._getValueOrOverrideExpression(i,r,"OffsetX",f.getValue(e.offsetX)),offsetY:this._getValueOrOverrideExpression(i,r,"OffsetY",f.getValue(e.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!s})}_analyzeGradientFill(e,t){this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!e.colorLocked,effects:t,color:[128,128,128,1],height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1})}_analyzeSolidStroke(e,t,r,i){const{primitiveName:o,type:a}=e,l=f.normalizeAlpha(e.color),s=f.getValue(e.width,n.defaultCIMValues.CIMSolidStroke.width),p=f.getEnum(e.capStyle,n.defaultCIMValues.CIMSolidStroke.capstyle),c=f.getEnum(e.joinStyle,n.defaultCIMValues.CIMSolidStroke.joinstyle),m=e.miterLimit;let u,y,h=[];if(this._analyzePrimitiveOverrides(o,t,null,null)&&(h=this._getPrimitiveMaterialOverrides(o,a)),t&&t instanceof Array&&t.length>0){const e=t[t.length-1].effect;e&&"CIMGeometricEffectDashes"===e.type&&"NoConstraint"===e.lineDashEnding&&null===e.offsetAlongLine&&(u=e.dashTemplate,y=e.scaleDash,(t=[...t]).pop())}const d=void 0!==u?{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:u,capStyle:p},overrides:h}:null;this._cimLayers.push({type:"line",spriteRasterizationParam:d,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(a,o,"Color",l),width:this._getValueOrOverrideExpression(a,o,"Width",s),cap:this._getValueOrOverrideExpression(a,o,"CapStyle",p),join:this._getValueOrOverrideExpression(a,o,"JoinStyle",c),miterLimit:m&&this._getValueOrOverrideExpression(a,o,"MiterLimit",m),referenceWidth:i,zOrder:v(e.name),dashTemplate:u,scaleDash:y,sampleAlphaOnly:!0})}_analyzePictureStroke(e,t,r,i){const{primitiveName:o,type:a}=e,l=f.getTintColor(e),s=f.getValue(e.width,n.defaultCIMValues.CIMPictureStroke.width),p=f.getEnum(e.capStyle,n.defaultCIMValues.CIMPictureStroke.capstyle),c=f.getEnum(e.joinStyle,n.defaultCIMValues.CIMPictureStroke.joinstyle),m=e.miterLimit,u={type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(o,a)};this._cimLayers.push({type:"line",spriteRasterizationParam:u,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(a,o,"TintColor",l),width:this._getValueOrOverrideExpression(a,o,"Width",s),cap:this._getValueOrOverrideExpression(a,o,"CapStyle",p),join:this._getValueOrOverrideExpression(a,o,"JoinStyle",c),miterLimit:m&&this._getValueOrOverrideExpression(a,o,"MiterLimit",m),referenceWidth:i,zOrder:v(e.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1})}_analyzeGradientStroke(e,t,r,i){const{primitiveName:o,type:a}=e,l=f.getValue(e.width,n.defaultCIMValues.CIMSolidStroke.width),s=f.getEnum(e.capStyle,n.defaultCIMValues.CIMGradientStroke.capstyle),p=f.getEnum(e.joinStyle,n.defaultCIMValues.CIMGradientStroke.joinstyle),c=e.miterLimit;this._cimLayers.push({type:"line",spriteRasterizationParam:null,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:[128,128,128,1],width:this._getValueOrOverrideExpression(a,o,"Width",l),cap:this._getValueOrOverrideExpression(a,o,"CapStyle",s),join:this._getValueOrOverrideExpression(a,o,"JoinStyle",p),miterLimit:c&&this._getValueOrOverrideExpression(a,o,"MiterLimit",c),referenceWidth:i,zOrder:v(e.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1})}_analyzeMarker(e,t,r,i,o,a,l,s,p=!1,c=!1){if(p||=!!e.colorLocked,this._analyzeMarkerInsidePolygon(e,t,p))return;const m=f.getValue(e.size,n.defaultCIMValues.CIMVectorMarker.size),u=f.getValue(e.rotation),y=f.getValue(e.offsetX),h=f.getValue(e.offsetY),{primitiveName:d,type:g}=e,v=this._getValueOrOverrideExpression(g,d,"Size",m),O=this._getValueOrOverrideExpression(g,d,"Rotation",u),M=this._getValueOrOverrideExpression(g,d,"OffsetX",y),_=this._getValueOrOverrideExpression(g,d,"OffsetY",h);switch(e.type){case"CIMPictureMarker":this._analyzePictureMarker(e,t,r,i,o,a,v,O,M,_,s,p,c);break;case"CIMVectorMarker":this._analyzeVectorMarker(e,t,r,i,o,a,v,O,M,_,s,l,p,c)}}_analyzeMarkerInsidePolygon(e,t,r){const{markerPlacement:i,type:o}=e;if(!i||"CIMMarkerPlacementInsidePolygon"!==i.type)return!1;if("CIMVectorMarker"===o||"CIMPictureMarker"===o){const r=e.primitiveName;if(r&&this._analyzePrimitiveOverrides([r],t,null,null))return!1;const a=i.primitiveName;if(a&&this._analyzePrimitiveOverrides([a],t,null,null))return!1;if("CIMVectorMarker"===o){const{markerGraphics:t}=e;if(t)for(const e of t){const{symbol:t}=e;if("CIMPolygonSymbol"===t?.type&&t.symbolLayers){const{symbolLayers:e}=t;for(const t of e)if("CIMSolidStroke"===t.type)return!1}}}else{const{animatedSymbolProperties:t}=e;if(t)return!1}}const l=Math.abs(i.stepX),s=Math.abs(i.stepY);if(0===l||0===s)return!0;let n,p;if("Random"===i.gridType){const e=a.px2pt(y.randomInsidePolygonTextureSize),t=Math.max(Math.floor(e/l),1);n=s*Math.max(Math.floor(e/s),1);p=t*l/n}else i.shiftOddRows?(n=2*s,p=l/s*.5):(n=s,p=l/s);const c=f.getTintColor(e),m="CIMCharacterMarker"===e.type?null:{type:"sprite-rasterization-param",resource:e,overrides:[]};return this._cimLayers.push({type:"fill",spriteRasterizationParam:m,colorLocked:r,effects:t,color:c,height:n,scaleX:p,angle:i.gridAngle,offsetX:f.getValue(i.offsetX),offsetY:f.getValue(i.offsetY),applyRandomOffset:"Random"===i.gridType,sampleAlphaOnly:"CIMPictureMarker"!==e.type,hasUnresolvedReplacementColor:!0}),!0}_analyzePictureMarker(e,t,r,o,a,s,n,p,c,m,u,y,h){const{primitiveName:d,type:g}=e;let v=f.getValue(e.scaleX,1);const O=f.getTintColor(e);r||(r=this._createMarkerPlacementOverrideExpression(e.markerPlacement));const M=this._createAnimatedSymbolPropertiesOverrideExpression(e.animatedSymbolProperties),_=e.anchorPoint??{x:0,y:0};if("width"in e&&"number"==typeof e.width){const t=e.width;let r=1;const i=this._resourceManager.getResource(e.url);null!=i&&(r=i.width/i.height);v/=r*(f.getValue(e.size)/t)}const C=[...o];let S;e.primitiveName&&C.push(e.primitiveName),e.animatedSymbolProperties||M?S={type:"animated",url:e.url,urlHash:"H"+l.numericHash(e.url),playAnimation:e.animatedSymbolProperties?.playAnimation,reverseAnimation:e.animatedSymbolProperties?.reverseAnimation,randomizeStartTime:e.animatedSymbolProperties?.randomizeStartTime,randomizeStartSeed:e.animatedSymbolProperties?.randomizeStartSeed,startTimeOffset:e.animatedSymbolProperties?.startTimeOffset,duration:e.animatedSymbolProperties?.duration,repeatType:e.animatedSymbolProperties?.repeatType,repeatDelay:e.animatedSymbolProperties?.repeatDelay}:(S=i.clone(e),S.markerPlacement=null);const k={type:"sprite-rasterization-param",resource:S,overrides:this._getMaterialOverrides(C,g)};M&&k.overrides.push(...M.overrides),this._cimLayers.push({type:"marker",spriteRasterizationParam:k,colorLocked:y,effects:t,scaleSymbolsProportionally:!1,alignment:a,size:n,scaleX:this._getValueOrOverrideExpression(g,d,"ScaleX",v),rotation:p,offsetX:c,offsetY:m,transform:{type:"cim-marker-transform-param",params:u},color:this._getValueOrOverrideExpression(g,d,"TintColor",O),anchorPoint:{x:_.x,y:_.y},isAbsoluteAnchorPoint:"Relative"!==e.anchorPointUnits,outlineColor:[0,0,0,0],outlineWidth:0,frameHeight:0,widthRatio:1,rotateClockwise:!!e.rotateClockwise,referenceSize:s,sizeRatio:1,isOutline:h,markerPlacement:r,animatedSymbolProperties:M})}_analyzeVectorMarker(e,t,r,i,o,a,l,s,n,p,c,m,f,u){const y=e.markerGraphics;if(!y)return;const h=e.frame;let d=0;if(d=h?h.ymax-h.ymin:a,d){const t={offsetX:n,offsetY:p,rotation:s,size:l,frameHeight:d,rotateClockWise:!!e.rotateClockwise};c=[...c,t]}r||(r=this._createMarkerPlacementOverrideExpression(e.markerPlacement));for(const g of y)if(g){const l=g.symbol;if(!l)continue;const s=g.primitiveName;let n;if(s&&i.push(s),("CIMPointSymbol"===l.type||"CIMTextSymbol"===l.type)&&h){let t=0,r=0;const i=g.geometry;"x"in i&&"y"in i&&(t+=i.x-.5*(h.xmin+h.xmax),r+=i.y-.5*(h.ymin+h.ymax));const o=e.anchorPoint;o&&("Absolute"===e.anchorPointUnits?(t-=o.x,r-=o.y):h&&(t-=(h.xmax-h.xmin)*o.x,r-=(h.ymax-h.ymin)*o.y));const a={offsetX:t,offsetY:r,rotation:0,size:0,frameHeight:0,rotateClockWise:!1};n=[...c,a]}switch(l.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":m||_(l)?this._analyzeMultiLayerGraphicNonSDF(e,t,r,null,g,i,o,a,n??c,d,f,u):this._analyzeMultiLayerGraphic(e,t,r,null,g,i,o,a,n??c,d,f,u);break;case"CIMTextSymbol":this._analyzeTextGraphic(t,r,g,i,o,a,n??c,f)}s&&i.pop()}}_analyzeMultiLayerGraphic(e,t,r,i,o,a,l,s,n,p,c,y){const h=o.symbol,d=h.symbolLayers;if(!d)return;let g=d.length;if(M(d))return void this._analyzeCompositeMarkerGraphic(e,t,r,i,o,d,l,s,n,p,c,y);const v=this._resourceManager.geometryEngine,O=u.CIMEffectHelper.applyEffects(h.effects,o.geometry,v);if(O)for(;g--;){const h=d[g];if(!h||!1===h.enable)continue;const M=h.primitiveName;switch(M&&a.push(M),h.type){case"CIMSolidFill":case"CIMSolidStroke":{const a=u.CIMEffectHelper.applyEffects(h.effects,O,v),d=m.getExtent(a);if(!d)continue;const g="Relative"!==e.anchorPointUnits,[_,C,S,k]=m.getSDFMetrics(d,e.frame,e.size,e.anchorPoint,g),z="CIMSolidFill"===h.type,P={type:"sdf",geom:a,asFill:z},{path:b}=h,V=z?f.normalizeAlpha(f.getFillColor(h)):null==b?f.normalizeAlpha(f.getStrokeColor(h)):[0,0,0,0],x=z?[0,0,0,0]:f.normalizeAlpha(f.getStrokeColor(h)),I=f.getStrokeWidth(h)??0;if(!z&&!I)break;const E=o.primitiveName;let L=null;z&&!h.colorLocked&&(L=this._maybeGetValueOrOverrideExpression(E,"FillColor"));let A=null;z||h.colorLocked||(A=this._maybeGetValueOrOverrideExpression(E,"StrokeColor"));const N=L??this._getValueOrOverrideExpression(h.type,M,"Color",V),R=A??this._getValueOrOverrideExpression(h.type,M,"Color",x),w=this._maybeGetValueOrOverrideExpression(E,"StrokeWidth")??this._getValueOrOverrideExpression(h.type,M,"Width",I),F=b?{type:"sprite-rasterization-param",resource:{type:"path",path:b,asFill:z},overrides:[]}:{type:"sprite-rasterization-param",resource:P,overrides:[]};this._cimLayers.push({type:"marker",spriteRasterizationParam:F,colorLocked:!!h.colorLocked||!!c,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:l,anchorPoint:{x:C,y:S},isAbsoluteAnchorPoint:g,size:p,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:n},frameHeight:p,widthRatio:k,rotateClockwise:!1,referenceSize:s,sizeRatio:_,color:N,outlineColor:R,outlineWidth:w,isOutline:y,markerPlacement:r,animatedSymbolProperties:i});break}case"CIMPictureMarker":case"CIMVectorMarker":h.markerPlacement?this._analyzeMultiLayerGraphicNonSDF(e,t,r,i,o,a,l,s,n,p,!!h.colorLocked||!!c,y):this._analyzeMarker(h,t,r,a,l,s,!1,n,c,y);break;default:this._analyzeMultiLayerGraphicNonSDF(e,t,r,i,o,a,l,s,n,p,!!h.colorLocked||!!c,y)}M&&a.pop()}}_analyzeTextGraphic(e,t,i,o,a,l,s,p){const m=[];c.OverrideHelper.findApplicableOverrides(i,this._primitiveOverrides,m);const u=i.geometry;if(!("x"in u)||!("y"in u))return;const y=i.symbol,h=f.fromCIMFontDecoration(y),d=f.fromCIMFontStyle(y.fontStyleName),g=r.getFontFamily(y.fontFamilyName);y.font={family:g,decoration:h,...d};const v=f.getValue(y.height,n.defaultCIMValues.CIMTextSymbol.height),O=f.getValue(y.angle),M=f.getValue(y.offsetX),_=f.getValue(y.offsetY),C=f.normalizeAlpha(f.getFillColor(y));let S=f.normalizeAlpha(f.getStrokeColor(y)),k=f.getStrokeWidth(y)??0;k||(S=f.normalizeAlpha(f.getFillColor(y.haloSymbol)),k=f.getValue(y.haloSize));let z=!1;if(y.symbol?.symbolLayers)for(const r of y.symbol.symbolLayers){null!=f.normalizeAlpha(f.getFillColor(r))&&(z=!!r.colorLocked)}const P=i.primitiveName;let b=null;z||(b=this._maybeGetValueOrOverrideExpression(P,"FillColor"));const V=this._maybeGetValueOrOverrideExpression(P,"TextSize"),x=this._maybeGetValueOrOverrideExpression(P,"TextAngle"),I=this._maybeGetValueOrOverrideExpression(P,"TextOffsetX"),E=this._maybeGetValueOrOverrideExpression(P,"TextOffsetY");let L=null,A=null,N=0;if(y.callout&&"CIMBackgroundCallout"===y.callout.type){const e=y.callout;if(e.backgroundSymbol){const t=e.backgroundSymbol.symbolLayers;if(t)for(const e of t)"CIMSolidFill"===e.type?L=f.normalizeAlpha(e.color):"CIMSolidStroke"===e.type&&(A=f.normalizeAlpha(e.color),N=f.getValue(e.width,n.defaultCIMValues.CIMSolidStroke.width))}}const R=this._getValueOrOverrideExpression(y.type,i.primitiveName,"TextString",i.textString??"");if(null==R)return;const{fontStyleName:w}=y,F=g+(w?"-"+w.toLowerCase():"-regular"),G=this._getMaterialOverrides(o,y.type);G.push(...this._getPrimitiveMaterialOverrides(i.primitiveName,y.type));const X={type:"text-rasterization-param",resource:{type:"text",textString:i.textString??"",font:y.font,symbol:y,primitiveName:i.primitiveName},overrides:G};this._cimLayers.push({type:"text",lineWidth:null,textRasterizationParam:X,colorLocked:!!p||!!z,effects:e,alignment:a,anchorPoint:{x:0,y:0},isAbsoluteAnchorPoint:!1,fontName:F,decoration:h,weight:d.weight,style:d.style,size:V??v,angle:x??O,offsetX:I??M,offsetY:E??_,transform:{type:"cim-marker-transform-param",params:s},horizontalAlignment:f.fromCIMHorizontalAlignment(y.horizontalAlignment),verticalAlignment:f.fromCIMVerticalAlignment(y.verticalAlignment),text:R,color:b??this._getValueOrOverrideExpression(y.type,i.primitiveName,"Color",C),outlineColor:S,outlineSize:k,backgroundColor:L,borderLineColor:A,borderLineWidth:N,referenceSize:l,sizeRatio:1,markerPlacement:t})}_analyzeMultiLayerGraphicNonSDF(e,t,r,i,o,l,n,p,c,m,f,u){const y=this._buildSimpleMarker(e,o),h=e.primitiveName,d=this._analyzeMaterialOverrides(h,["Rotation","OffsetX","OffsetY"]),g=this._normalizePrimitiveOverrideProps(d),[v,O,M]=s.CIMSymbolHelper.getTextureAnchor(y,this._resourceManager),_=this._getMaterialOverrides(l,e.type);_.push(...g);const C={type:"sprite-rasterization-param",resource:{...y,avoidSDFRasterization:!0},overrides:_};this._cimLayers.push({type:"marker",spriteRasterizationParam:C,colorLocked:f,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:n,anchorPoint:{x:v,y:O},isAbsoluteAnchorPoint:!1,size:m,rotation:0,offsetX:0,offsetY:0,transform:{type:"cim-marker-transform-param",params:c},color:[255,255,255,1],outlineColor:[0,0,0,0],outlineWidth:0,scaleX:1,frameHeight:m,widthRatio:1,rotateClockwise:!!e.rotateClockwise,referenceSize:p,sizeRatio:M/a.pt2px(e.size),isOutline:u,markerPlacement:r,animatedSymbolProperties:i})}_createMarkerPlacementOverrideExpression(e){if(!e)return null;const t=[];return c.OverrideHelper.findApplicableOverrides(e,this._primitiveOverrides,t),{type:"cim-marker-placement-info",placement:e,overrides:C(t)}}_createAnimatedSymbolPropertiesOverrideExpression(e){if(!e)return null;const t=[];return c.OverrideHelper.findApplicableOverrides(e,this._primitiveOverrides,t),{type:"cim-animation-info",animation:e,overrides:C(t)}}_buildSimpleMarker(e,t){return{type:e.type,enable:!0,name:e.name,colorLocked:e.colorLocked,primitiveName:e.primitiveName,anchorPoint:e.anchorPoint,anchorPointUnits:e.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:e.rotateClockwise,rotation:0,size:e.size,billboardMode3D:e.billboardMode3D,depth3D:e.depth3D,frame:e.frame,markerGraphics:[t],scaleSymbolsProportionally:e.scaleSymbolsProportionally,respectFrame:e.respectFrame,clippingPath:e.clippingPath}}_analyzeCompositeMarkerGraphic(e,t,r,i,o,a,l,s,p,c,u,y){const h=o.geometry,d=a[0],g=a[1],v=m.getExtent(h);if(!v)return;const O="Relative"!==e.anchorPointUnits,[M,_,C,S]=m.getSDFMetrics(v,e.frame,e.size,e.anchorPoint,O),{path:k}=g,z=g.primitiveName,P=d.primitiveName,b=o.primitiveName;let V=null;g.colorLocked||u||(V=this._maybeGetValueOrOverrideExpression(b,"FillColor"));const x=V??this._getValueOrOverrideExpression(g.type,z,"Color",f.normalizeAlpha(g.color));let I=null;d.colorLocked||u||(I=this._maybeGetValueOrOverrideExpression(b,"StrokeColor"));const E=I??this._getValueOrOverrideExpression(d.type,P,"Color",f.normalizeAlpha(d.color)),L=this._maybeGetValueOrOverrideExpression(b,"StrokeWidth")??this._getValueOrOverrideExpression(d.type,P,"Width",f.getValue(d.width,n.defaultCIMValues.CIMSolidStroke.width)),A={type:"sprite-rasterization-param",resource:k?{type:"path",path:k,asFill:!0}:{type:"sdf",geom:h,asFill:!0},overrides:[]};this._cimLayers.push({type:"marker",spriteRasterizationParam:A,colorLocked:u,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:l,anchorPoint:{x:_,y:C},isAbsoluteAnchorPoint:O,size:c,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:p},frameHeight:c,widthRatio:S,rotateClockwise:!1,referenceSize:s,sizeRatio:M,color:x,outlineColor:E,outlineWidth:L,isOutline:y,markerPlacement:r,animatedSymbolProperties:i})}_setPoMap(e,t,r){let i;this._poMap[e]?i=this._poMap[e]:(i={},this._poMap[e]=i),i[t]=r}_maybeGetValueOrOverrideExpression(e,t,r){return this._getValueOrOverrideExpression("",e,t,r,!1)}_getValueOrOverrideExpression(e,t,r,i,o=!0){if(o&&!f.isValidCIMValue(i)&&(i=f.getDefaultCIMValue(e,r.toLowerCase())),null==t)return i;const a=this._poMap[t];if(null==a)return i;const l=a[r];return"string"==typeof l||"number"==typeof l||Array.isArray(l)?l:l?{valueExpressionInfo:l,defaultValue:i}:i}_analyzePrimitiveOverrides(e,t,r,i){if(null==e)return!1;"string"==typeof e&&(e=[e]);for(const o of this._primitiveOverrides)if(e.includes(o.primitiveName)&&o.valueExpressionInfo)return!0;if(null!=t)for(const o of t)if(o?.overrides.length>0)return!0;if(null!=r)for(const o of r)if(o?.overrides.length>0)return!0;if(null!=i)for(const o of i)if(o?.overrides.length>0)return!0;return!1}_getMaterialOverrides(e,t){if(!e)return[];const r=[];for(const i of e)r.push(...this._getPrimitiveMaterialOverrides(i,t));return r}_getPrimitiveMaterialOverrides(e,t){if(!e)return[];const r=this._normalizePrimitiveOverrideProps(this._primitiveOverrides.filter((t=>t.primitiveName===e)));return r.forEach((e=>e.defaultValue=f.getDefaultCIMValue(t,e.propertyName.toLowerCase()))),r}_analyzeMaterialOverrides(e,t){return this._primitiveOverrides.filter((r=>r.primitiveName!==e||!t.includes(r.propertyName)))}_normalizePrimitiveOverrideProps(e){return e.map((e=>({...e,propertyName:f.uncapitalize(e.propertyName)})))}}function v(e){if(e&&0===e.indexOf("Level_")){const t=parseInt(e.substr(6),10);if(!isNaN(t))return t}return 0}function O(e,t){if(!t||0===t.length)return e;const r=i.clone(e);return c.OverrideHelper.applyOverrides(r,t),r}const M=e=>e&&2===e.length&&e[0].enable&&e[1].enable&&"CIMSolidStroke"===e[0].type&&"CIMSolidFill"===e[1].type&&null==e[0].path&&null==e[1].path&&!e[0].effects&&!e[1].effects;function _(e){const t=e.symbolLayers;if(!t||2!==t.length)return!1;const r=t.find((e=>e.effects?.find((e=>"CIMGeometricEffectDashes"===e.type&&null!=e.dashTemplate)))),i=t.find((e=>e.effects?.find((e=>"CIMGeometricEffectAddControlPoints"===e.type))));return!!r||!!i}function C(e){return i.clone(e).map((e=>({...e,propertyName:f.uncapitalize(e.propertyName)})))}e.CIMAnalyzer=g,e.analyzeCIMResource=O,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
