/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","exports","./defaultCIMValues"],(function(e,t,r){"use strict";function n(e){return"function"==typeof e}function o(e,t,r,o){return n(e)?e(t,r,o):e}function a(e){return[e.r,e.g,e.b,e.a]}const i=" /-,\n";function l(e){let t=e.length;for(;t--;)if(!i.includes(e.charAt(t)))return!1;return!0}function s(e,t){const r=[];let n=0,o=-1;do{if(o=e.indexOf("[",n),o>=n){if(o>n){const t=e.substr(n,o-n);r.push([t,null,l(t)])}if(n=o+1,o=e.indexOf("]",n),o>=n){if(o>n){const a=t[e.substr(n,o-n)];a&&r.push([null,a,!1])}n=o+1}}}while(-1!==o);if(n<e.length-1){const t=e.substr(n);r.push([t,null,l(t)])}return r}function c(e,t,r,n){let o="",a=null;for(const i of t){const[t,n,l]=i;if(t)l?a=t:(a&&(o+=a,a=null),o+=t);else{let t=n;null!=r&&(t=H(n,r));const i=e.attributes[t];i&&(a&&(o+=a,a=null),o+=i)}}return u(o,n)}function u(e,t){switch("string"!=typeof e&&(e=String(e)),t){case"LowerCase":return e.toLowerCase();case"Allcaps":return e.toUpperCase();default:return e}}function f(e,t,r,n,o,a,i=!0){const l=t/o,s=r/a,c=Math.ceil(l/2),u=Math.ceil(s/2);for(let f=0;f<a;f++)for(let r=0;r<o;r++){const M=4*(r+(i?a-f-1:f)*o);let y=0,m=0,C=0,I=0,b=0,h=0,p=0;const d=(f+.5)*s;for(let n=Math.floor(f*s);n<(f+1)*s;n++){const o=Math.abs(d-(n+.5))/u,a=(r+.5)*l,i=o*o;for(let s=Math.floor(r*l);s<(r+1)*l;s++){let r=Math.abs(a-(s+.5))/c;const o=Math.sqrt(i+r*r);o>=-1&&o<=1&&(y=2*o*o*o-3*o*o+1,y>0&&(r=4*(s+n*t),p+=y*e[r+3],C+=y,e[r+3]<255&&(y=y*e[r+3]/250),I+=y*e[r],b+=y*e[r+1],h+=y*e[r+2],m+=y))}}n[M]=I/m,n[M+1]=b/m,n[M+2]=h/m,n[M+3]=p/C}}function M(e){return e?[e[0],e[1],e[2],e[3]/255]:[0,0,0,0]}function y(e){return e.data?.symbol??null}function m(e){return"CIMVectorMarker"===e.type||"CIMPictureMarker"===e.type||"CIMBarChartMarker"===e.type||"CIMCharacterMarker"===e.type||"CIMPieChartMarker"===e.type||"CIMStackedBarChartMarker"===e.type}function C(e){return"CIMGradientStroke"===e.type||"CIMPictureStroke"===e.type||"CIMSolidStroke"===e.type}function I(e){return null!=e&&("CIMGradientFill"===e.type||"CIMHatchFill"===e.type||"CIMPictureFill"===e.type||"CIMSolidFill"===e.type||"CIMWaterFill"===e.type)}function b(e){return null!=e&&("CIMMarkerPlacementAlongLineRandomSize"===e.type||"CIMMarkerPlacementAlongLineSameSize"===e.type||"CIMMarkerPlacementAlongLineVariableSize"===e.type||"CIMMarkerPlacementAtExtremities"===e.type||"CIMMarkerPlacementAtMeasuredUnits"===e.type||"CIMMarkerPlacementAtRatioPositions"===e.type||"CIMMarkerPlacementOnLine"===e.type||"CIMMarkerPlacementOnVertices"===e.type)}const h=(e,t=0)=>null==e||isNaN(e)?t:e,p=(e,t)=>e??t,d=e=>e.tintColor?M(e.tintColor):[255,255,255,1],g=e=>{if(!e)return!1;for(const t of e)switch(t.type){case"CIMGeometricEffectBuffer":case"CIMGeometricEffectOffset":case"CIMGeometricEffectDonut":return!0}return!1};function k(){return new Promise(((t,r)=>e(["../../geometry/geometryEngineJSON"],t,r)))}function S(e){if(!e)return"normal";switch(e.toLowerCase()){case"italic":return"italic";case"oblique":return"oblique";default:return"normal"}}function P(e){if(!e)return"normal";switch(e.toLowerCase()){case"bold":return"bold";case"bolder":return"bolder";case"lighter":return"lighter";default:return"normal"}}function w(e){let t="normal",r="normal";if(e){const n=e.toLowerCase();n.includes("italic")?t="italic":n.includes("oblique")&&(t="oblique"),n.includes("bold")?r="bold":n.includes("light")&&(r="lighter")}return{style:t,weight:r}}function L(e){return e.underline?"underline":e.strikethrough?"line-through":"none"}function T(e){if(!e)return null;switch(e.type){case"CIMPolygonSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=T(t);if(null!=e)return e}break;case"CIMTextSymbol":return T(e.symbol);case"CIMSolidFill":return e.color}return null}function F(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":{const t=e.symbolLayers;if(t)for(const e of t){const t=F(e);if(null!=t)return t}break}case"CIMTextSymbol":return F(e.symbol);case"CIMSolidStroke":return e.color}}function V(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=V(t);if(void 0!==e)return e}break;case"CIMTextSymbol":return V(e.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return e.width}}function x(e){switch(e){case"Left":default:return"left";case"Right":return"right";case"Center":case"Justify":return"center"}}function z(e){switch(e){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function A(e){return(e?Object.keys(e):[]).map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}const G=e=>e.includes("data:image/svg+xml");function N(e){if(!e)return null;switch(e.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}function O(e){return e?e.charAt(0).toLowerCase()+e.substring(1):e}function E(e,t,r,n,o,a){const{infos:i}=a;let l=1,s=0,c=0,u=0;for(const{offsetX:y,offsetY:m,rotation:C,size:I,frameHeight:b,rotateClockWise:h}of i){c=W(y,m,s,l,c),u=R(y,m,s,l,u),b&&(l*=I/b),s=J(C,h,s)}const f=W(n,o,s,l,c),M=R(n,o,s,l,u);return{size:e*l,rotation:J(t,r,s),offsetX:f,offsetY:M}}function D(e){if(null==e)return!1;if(Array.isArray(e))return e.every((e=>D(e)));switch(typeof e){case"string":return!!e;case"number":return!isNaN(e)}}function q(e,t){if("color"===t||"outlinecolor"===t||"backgroundcolor"===t||"borderLineColor"===t)return[...r.defaultCIMColor[t]];const n=r.defaultCIMValues[e];if(!n||"boolean"==typeof n[t])throw new Error(`InternalError: default value for type ${e}.`);return n[t]}function v(e){return e?.dashTemplate&&"string"==typeof e.dashTemplate&&(e.dashTemplate=e.dashTemplate.split(" ").map(Number)),e}function j(e){if(null==e)return"Normal";switch(e.type){case"CIMTextSymbol":return e.textCase??"Normal";case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{const t=e.symbolLayers;if(!t)return"Normal";for(const e of t)if("CIMVectorMarker"===e.type)return j(e)}break;case"CIMVectorMarker":{const t=e.markerGraphics;if(!t)return"Normal";for(const e of t)if(e.symbol)return j(e.symbol)}}return"Normal"}function B(e){if(e)switch(e.type){case"CIMTextSymbol":return e.height;case"CIMPointSymbol":{let t=0;if(e.symbolLayers)for(const n of e.symbolLayers)if(n)switch(n.type){case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":{const e=n.size??r.defaultCIMValues.CIMVectorMarker.size;e>t&&(t=e);break}}return t}case"CIMLineSymbol":case"CIMPolygonSymbol":{let t=0;if(e.symbolLayers)for(const n of e.symbolLayers)if(n)switch(n.type){case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":{const e=n.width;null!=e&&e>t&&(t=e);break}case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":if(n.markerPlacement&&b(n.markerPlacement)){const e=n.size??r.defaultCIMValues.CIMVectorMarker.size;e>t&&(t=e)}break;case"CIMPictureFill":{const e=n.height;null!=e&&e>t&&(t=e)}}return t}}}function H(e,t){if(null!==t){const r=t.get(e);return r?r.name:e}return e}function R(e,t,r,n,o){const a=r*Math.PI/180;if(a){const r=Math.cos(a);return(Math.sin(a)*e+r*t)*n+o}return t*n+o}function W(e,t,r,n,o){const a=r*Math.PI/180;if(a){return(Math.cos(a)*e-Math.sin(a)*t)*n+o}return e*n+o}function J(e,t,r){return t?r-e:r+e}t.adjustTextCase=u,t.analyzeTextParts=s,t.applyParentTransform=E,t.assignTextValuesFromFeature=c,t.attributesToFields=A,t.colorToArray=a,t.evaluateValueOrFunction=o,t.fromCIMFontDecoration=L,t.fromCIMFontStyle=w,t.fromCIMHorizontalAlignment=x,t.fromCIMVerticalAlignment=z,t.getDefaultCIMValue=q,t.getEnum=p,t.getFieldName=H,t.getFillColor=T,t.getFontStyle=S,t.getFontWeight=P,t.getSize=B,t.getStrokeColor=F,t.getStrokeWidth=V,t.getTextCasing=j,t.getTintColor=d,t.getValue=h,t.importGeometryEngine=k,t.isCIMFill=I,t.isCIMMarker=m,t.isCIMMarkerStrokePlacement=b,t.isCIMStroke=C,t.isFeatureValueFn=n,t.isGeometryEngineRequired=g,t.isSVGImage=G,t.isValidCIMValue=D,t.mapCIMSymbolToGeometryType=N,t.normalizeAlpha=M,t.normalizeDashTemplate=v,t.resampleHermite=f,t.toCIMSymbolJSON=y,t.uncapitalize=O,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
