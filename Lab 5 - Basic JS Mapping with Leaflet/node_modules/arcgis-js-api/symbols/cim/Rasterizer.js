/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["./CIMSymbolHelper","./rasterizingUtils","./Rect","./SDFHelper","./utils"],(function(e,r,t,a,n){"use strict";const s=512;class i{constructor(e){this._resourceManager=e,this._cachedRasterizationCanvas=null}dispose(){this._cachedRasterizationCanvas=null}get _canvas(){return this._cachedRasterizationCanvas||(this._cachedRasterizationCanvas=document.createElement("canvas")),this._cachedRasterizationCanvas}rasterizeJSONResource(e,t){switch(e.type){case"dash":{const t=e.dashTemplate,a=e.capStyle,[n,s,i]=r.rasterizeDash(t,a);return{size:[s,i],image:new Uint32Array(n.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}case"fill-style":{const[a,n,s,i]=r.rasterizeFillStyle(this._canvas,e,t);return{size:[n,s],image:new Uint32Array(a.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0,rasterizationScale:i}}case"sdf":return this._rasterizeSDFInfo(e);case"CIMHatchFill":case"CIMVectorMarker":case"CIMPictureMarker":return this._rasterizeCIMJSONResource(e,t)}}_rasterizeCIMJSONResource(r,t){switch(r.type){case"CIMHatchFill":{const a=e.CIMSymbolHelper.fromCIMHatchFill(r,t);return this._rasterizeCIMVectorMarker(a)}case"CIMPictureMarker":{const t=e.CIMSymbolHelper.fromCIMInsidePolygon(r);return this._rasterizeCIMVectorMarker(t)}case"CIMVectorMarker":{if("CIMMarkerPlacementInsidePolygon"===r.markerPlacement?.type){const t=e.CIMSymbolHelper.fromCIMInsidePolygon(r);return this._rasterizeCIMVectorMarker(t)}const t=a.getSDFInfo(r);return t&&!r.avoidSDFRasterization?this._rasterizeSDFInfo(t):this._rasterizeCIMVectorMarker(r,!1)}}}_rasterizeSDFInfo(e){if(!e)return null;const[r,t,n]=a.buildSDF(e);return r?{size:[t,n],image:new Uint32Array(r.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}_rasterizeCIMVectorMarker(r,a=!0){const n=a?t.fromExtent(r.frame):null,[s,i,o,c,l]=e.CIMSymbolHelper.rasterize(this._canvas,r,n,this._resourceManager);return s?{size:[i,o],image:new Uint32Array(s.buffer),sdf:!1,simplePattern:!1,anchorX:c,anchorY:l}:null}rasterizeImageResource(e,r,t,a){this._canvas.width=e,this._canvas.height=r;const i=this._canvas.getContext("2d",{willReadFrequently:!0});t instanceof ImageData?i.putImageData(t,0,0):(t.setAttribute("width",`${e}px`),t.setAttribute("height",`${r}px`),i.drawImage(t,0,0,e,r));const o=i.getImageData(0,0,e,r),c=new Uint8Array(o.data);if(a)for(const n of a)if(n&&n.oldColor&&4===n.oldColor.length&&n.newColor&&4===n.newColor.length){const[e,r,t,a]=n.oldColor,[s,i,o,l]=n.newColor;if(e===s&&r===i&&t===o&&a===l)continue;for(let n=0;n<c.length;n+=4)e===c[n]&&r===c[n+1]&&t===c[n+2]&&a===c[n+3]&&(c[n]=s,c[n+1]=i,c[n+2]=o,c[n+3]=l)}let l;for(let n=0;n<c.length;n+=4)l=c[n+3]/255,c[n]=c[n]*l,c[n+1]=c[n+1]*l,c[n+2]=c[n+2]*l;let h=c,u=e,f=r;const M=s;if(u>=M||f>=M){const t=u/f;t>1?(u=M,f=Math.round(M/t)):(f=M,u=Math.round(M*t)),h=new Uint8Array(4*u*f);const a=new Uint8ClampedArray(h.buffer);n.resampleHermite(c,e,r,a,u,f,!1)}return{size:[u,f],image:new Uint32Array(h.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}}return i}));
