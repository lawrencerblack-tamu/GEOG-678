/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../geometry","../../Graphic","../../core/arrayUtils","../../core/Collection","../../core/deprecate","../../core/Error","../../core/Evented","../../core/JSONSupport","../../core/lang","../../core/Logger","../../core/mathUtils","../../core/maybe","../../core/promiseUtils","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/accessorSupport/decorators/subclass","../../geometry/support/webMercatorUtils","../../layers/GraphicsLayer","../../layers/orientedImagery/queries","../../layers/orientedImagery/core/bestImageUtils","../../layers/orientedImagery/core/coverageUtils","../../layers/orientedImagery/transformations/groundToImageUtils","../../layers/orientedImagery/transformations/imageToGroundUtils","../../layers/orientedImagery/transformations/utils","../../rest/support/AttachmentQuery","../../views/input/InputManager","../PanoramicViewer","./constants","./symbols","./utils","./components/ImageViewer","../../geometry/Point","../../geometry/Polygon","../../geometry/SpatialReference"],(function(e,t,r,i,o,a,s,n,l,c,h,d,u,p,g,m,y,_,v,f,w,b,P,C,F,I,S,V,A,O,B,M,G,R,E,x){"use strict";const k={click:"view-click",imageClick:"image-click",interactionHandles:"interaction-handles",footprintHandles:"footprint-handles"},D=new Set(["JPG","JPEG"]),L=e=>"FA"===e;let H=class extends n.EventedAccessor{constructor(e){super(e),this.additionalFeatures=new o,this.determineWorkflowForFeature=async()=>{const{currentBestFeature:e,selectedPoint:t}=this;if(e&&t){this._initialCurrentCoverageUpdate=!0,this._updatePointsAndPolygons(),this._fetchFeaturesController??=new AbortController;const{signal:e}=this._fetchFeaturesController;try{await this._loadImage({signal:e})}catch(r){p.isAbortError(r)||(this.loadImageError(r),h.getLogger(this).error("#loadIImage()","error occured while loading image",r))}this._fetchFeaturesController=null}},this.drawFootprint=()=>{this._initialCurrentCoveragePolygon&&this.updateCurrentCoveragePolygon(this._initialCurrentCoveragePolygon)},this.layer=null,this.shouldShowSelectedImage=!1,this.coverageFrustums=new o,this.coveragePolygons=new o,this.currentCoverageVisible=!0,this.disabled=!1,this.displayMessage={key:"onLoadMessage",type:"info"},this.pointSources=new o,this.previousFeatureAngle=0,this.currentBestFeature=null,this.bestFeatureAngle=0,this.selectedPoint=null,this.features=new o,this.isAdditionalCoverageVisible=!1,this.isAdditionalPointSourcesVisible=!1,this.localPort=null,this.mapImageConversionToolState=!1,this.navigatorCurrentBestFeature=null,this.updateFootprint=async e=>{if("image-loaded"!==this.state)return;const t=new AbortController,{signal:r}=t;if(this._updateCoverageController=t,"default"===this.mode)try{const t=await F.transformPoints(e,{feature:this.currentBestFeature,imageProperties:this._imageViewer.viewModel.image.serviceRasterInfo,options:{signal:r},footprintExtent:this._footprintExtent});await this._updateCurrentFootprint(t,r)}catch(i){p.isAbortError(i)||h.getLogger(this).error("#updateFootprint()",i)}},this._additionalCoveragePolygons=new o,this._additionalFeatureGraphics=new o,this._currentCoveragePolygon=null,this._fetchFeaturesController=null,this._imageViewer=new G,this._initialCurrentCoveragePolygon=null,this._initialCurrentCoverageUpdate=!0,this._loading=!1,this._overlays=new f({listMode:"hide",internal:!0}),this._panoramicViewer=new A,this._referencePointOnGround=null,this._referencePointOnImage=null,this._sectorData=null,this._crossSymbol=null,this._footprintExtent=null,this._suitabilities=null,this._transformController=new AbortController,this._updateCoverageController=null,this.loadImageFromSource=async(e,t)=>{const{mode:r,imageRotation:i,options:o}=t,a="string"==typeof e,s=a?e.split(".").pop():e.datasetFormat,n=a?e:e.url,l=D.has(s.toUpperCase());switch(r){case"default":this._imageViewer.imageSource=e,this._imageViewer.imageRotation=i??0,await this._imageViewer.loadImage(o);break;case"panoramic":if(l){const{pitch:e,yaw:r,cameraLocation:i}=t;this._panoramicViewer.imageSource=n;const a=await I.getInitialAngle(i,this.selectedPoint)-(r??0);this._panoramicViewer.pitch=e??0,this._panoramicViewer.yaw=a,await this._panoramicViewer.loadImage(o)}else this.setMessage("unsupportedPanoramicImageryError","error",void 0,{datasetFormat:s})}},this.loadImageViewer=e=>{this._imageViewer.container=e},this.loadPanoramicViewer=e=>{this._panoramicViewer.container=e},this._getImageSourceFromAttachment=async(e,t,r)=>{const i=new S({objectIds:[t]}),o=await e.queryAttachments(i,r),a=o[`${t}`]?.[0],n=a?.url;if(!n)throw new s("NoAttachmentError","no attachments found",{[e.objectIdField]:t,layer:e});return{datasetFormat:a.contentType.split("/")[1].toUpperCase(),url:n}},this._loadImage=async e=>{const{currentBestFeature:t,layer:r,mode:i}=this;if(this.clearGraphics(),!r||!t||"none"===i)return;const{attributes:o}=t,{imagePath:a,imageRotation:s,cameraHeading:n,cameraRoll:l,cameraPitch:c,objectId:d,cameraOrientation:u,location:g}=o,m=(l??0)+(s??0),y=g.spatialReference.isWGS84&&4!==u?.type?v.geographicToWebMercator(g):new R(g);let _=a;if(L(a))try{_=await this._getImageSourceFromAttachment(r,d,e)}catch(f){if(p.isAbortError(f))return;return M.isNoAttachmentError(f)?(h.getLogger(this).error(f),void this.setMessage("noAttachment","error",`${r.objectIdField}: ${d}`)):(h.getLogger(this).error(f,{[r.objectIdField]:d,layer:r}),void this.setMessage("imageLoadError","error",`query-attachments-failed:${r.objectIdField} ${d}`))}try{await this.loadImageFromSource(_,{imageRotation:m,options:e,pitch:c,yaw:n,mode:i,cameraLocation:y}),this.transformAndPlotSelectedLocation(e)}catch(f){p.isAbortError(f)||this.loadImageError(f)}},this._mapImageConversionToolViewClickHandler=e=>{e.stopPropagation(),e.preventDefault(),e.mapPoint&&this.plotMapPoint(e.mapPoint)},this._updateCurrentFootprint=async(e,t)=>{await p.waitTick(t);const o=e.filter(i.isSome);if(o.length){const e=[o.map((({x:e,y:t})=>[e,t,1]))];e[0].push(e[0][0]);const t=new E({hasZ:!0,rings:e,spatialReference:o[0].spatialReference});this.updateCurrentCoveragePolygon(new r({attributes:{imageID:this.currentBestFeature?.attributes.objectId},geometry:t,symbol:B.activePolygonSymbol,visible:this.currentCoverageVisible}))}},this._viewClickHandler=e=>{"mouse"===e.pointerType&&0!==e.button||(e.stopPropagation(),e.preventDefault(),e.mapPoint&&this.loadBestImage(e.mapPoint))},this.plotSelectedPointOnImage=async(e,t)=>{if(await p.waitTick(t),!e)return;const i=new R({...l.isSerializable(e)?e.toJSON():e,spatialReference:x.WebMercator});if("default"===this.mode)i.x-=.5,i.y=.5-i.y,this._crossSymbol=new r({geometry:i,symbol:B.crossSymbol}),this._imageViewer.addGraphic(this._crossSymbol,0);else if("panoramic"===this.mode){const{imageSize:t}=this._panoramicViewer;if(!t)return;const[i,o]=t,{heading:a,pitch:s}=I.convertPixelToHeadingPitch(e,i,o),n=I.convertHeadingPitchToSphereVertex(a,s);this._crossSymbol=new r({geometry:new R(n,x.WebMercator),symbol:B.crossSymbol3D}),this._panoramicViewer.addGraphic(this._crossSymbol,0)}},this.updateFootprintPanorama=async()=>{const{yaw:e,pitch:t,fov:i,imageSize:o,imageRenderer:{size:a}}=this._panoramicViewer,s=this.currentBestFeature?.clone();if(!o||!s)return;const n=i/(a[0]/a[1]),{attributes:l}=s;l.orientedImageryType=null,l.cameraHeading=(e+l.cameraHeading)%360,l.cameraPitch=t,l.horizontalFieldOfView=i,l.verticalFieldOfView=n,l.cameraRoll=0;const{polygon:c}=P.createCoveragePolygon(s);this.updateCurrentCoveragePolygon(new r({attributes:{imageID:l.objectId},geometry:c,symbol:B.activePolygonSymbol,visible:this.currentCoverageVisible}))},this.handleSectorClick=this.handleSectorClick.bind(this),this.searchBestImage=this.searchBestImage.bind(this),this.transformAndPlotReferencePointOnImage=this.transformAndPlotReferencePointOnImage.bind(this),this.updateSuitabilities=this.updateSuitabilities.bind(this),this.determineWorkflowForFeature=this.determineWorkflowForFeature.bind(this),this.updateCoverage=this.updateCoverage.bind(this),this.selectBestFeature=this.selectBestFeature.bind(this),this.drawFootprint=this.drawFootprint.bind(this)}initialize(){this.addHandles([g.watch((()=>this.view?.map),((e,t)=>{t?.layers.remove(this._overlays),e?.layers.add(this._overlays)}),g.initial),g.watch((()=>this.view?.map?.allLayers?.length),(e=>{e&&this.view?.map?.layers.reorder(this._overlays,e-1)}),g.initial),g.watch((()=>[this.state,this.mapImageConversionToolState,this.view]),(()=>{if(this.removeHandles(k.click),"disabled"===this.state||null==this.view)return;const e=this.mapImageConversionToolState&&"image-loaded"===this.state?this._mapImageConversionToolViewClickHandler:this._viewClickHandler;this.addHandles(this.view.on("click",e,V.ViewEventPriorities.WIDGET),k.click),this.removeHandles(k.imageClick);const{mapImageConversionToolState:t,mode:r}=this;if(t&&"none"!==r)switch(r){case"default":this._imageViewer.clickAction="pixel-location",this.addHandles(this._imageViewer.on("pixel-location",(async e=>{this.plotReferencePointOnImage(e);const t=this.currentBestFeature;if(t){const r=(await F.transformPoints([e.toJSON()],{feature:t,imageProperties:{width:this._imageViewer.imageSize[0],height:this._imageViewer.imageSize[1]},options:{signal:this._transformController?.signal},footprintExtent:this._footprintExtent}))[0];r&&this.plotReferencePointOnGround(r)}})),k.imageClick);break;case"panoramic":this._panoramicViewer.clickAction="pixel-location",this.addHandles(this._panoramicViewer.on("pixel-location",(async e=>{this.plotReferencePointOnImage(e);const t=this.currentBestFeature,{imageSize:r}=this._panoramicViewer;if(t&&e&&r){const i=(await F.transformPoints([e],{feature:t,imageProperties:{width:r[0],height:r[1]},options:{signal:this._transformController?.signal},footprintExtent:this._footprintExtent}))[0];i&&this.plotReferencePointOnGround(i)}})),k.imageClick)}}),g.syncAndInitial),g.watch((()=>this.bestFeatureAngle),((e,t)=>{this.previousFeatureAngle=t??0}),g.syncAndInitial),g.watch((()=>this.currentBestFeature),((e,t)=>{this.determineWorkflowForFeature(e,t)}),{sync:!0}),g.watch((()=>this.mode),(e=>{switch(this.removeHandles(k.interactionHandles),e){case"default":this.addHandles(g.watch((()=>this._imageViewer.imagePointsInView),(e=>{e&&this.updateCoverage()}),{...g.syncAndInitial,equals:(e,t)=>i.equals(e,t,c.equalsShallow)}),k.interactionHandles);break;case"panoramic":this.addHandles(g.when((()=>this._panoramicViewer.imageSize),(()=>{this._createFootprintHandles()})),k.interactionHandles)}}),g.syncAndInitial),g.watch((()=>[this.brightness,this.contrast,this.sharpness]),(()=>{const{_imageViewer:e,brightness:t,contrast:r,mode:i,sharpness:o}=this;"default"===i&&(e.brightness=t,e.contrast=r,e.sharpness=o)}),g.syncAndInitial)])}destroy(){this._cancelCurrentCoverageUpdate(),this._cancelFetchingFeatures(),this.coverageFrustums.destroy(),this.coveragePolygons.destroy(),this.pointSources.destroy(),this._additionalCoveragePolygons.destroy(),this._additionalFeatureGraphics.destroy(),this._initialCurrentCoveragePolygon=u.destroyMaybe(this._initialCurrentCoveragePolygon),this._currentCoveragePolygon=u.destroyMaybe(this._currentCoveragePolygon),this._crossSymbol=u.destroyMaybe(this._crossSymbol),this._referencePointOnGround=u.destroyMaybe(this._referencePointOnGround),this._referencePointOnImage=u.destroyMaybe(this._referencePointOnImage),this._overlays&&this.view?.map.remove(this._overlays),this._overlays.destroy()}get activeLayer(){return a.deprecatedProperty(h.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer}set activeLayer(e){a.deprecatedProperty(h.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer=e}get mode(){const e=this.currentBestFeature?.attributes;if(!e)return"none";const{horizontalFieldOfView:t,isSpherical:r}=e;return 360===t||r?"panoramic":"default"}get imagePointsInView(){const{mode:e,_imageViewer:t}=this;return"default"===e?t.imagePointsInView:null}get brightness(){return this._get("brightness")??0}set brightness(e){this._set("brightness",e>10?10:e<-10?-10:e)}get contrast(){return this._get("contrast")??0}set contrast(e){this._set("contrast",d.clamp(e,-10,10))}get featureCount(){return this.features?.length??0}get imageGalleryEnabled(){return M.isTifOrMrf(this.currentBestFeature?.attributes.imagePath.trim())}get imageLoaded(){return a.deprecatedProperty(h.getLogger(this),"imageLoaded",{replacement:'Use OrientedImageryViewer.state === "image-loaded"',version:"4.29",warnOnce:!0}),"image-loaded"===this.state}get referencePoint(){return this._referencePointOnGround?.geometry}get sharpness(){return this._get("sharpness")??0}set sharpness(e){this._set("sharpness",d.clamp(e,0,1))}get sectorData(){const{_sectorData:e}=this;return e?O.sectorsInOrder.map((t=>e[t])):null}get state(){const{mode:e,disabled:t}=this;if(t)return"disabled";if(this._loading)return"image-loading";switch(e){case"default":return this._imageViewer.state;case"panoramic":return this._panoramicViewer.state}return"ready"}get thumbnails(){const{features:e}=this;return e?new o(e.map((({attributes:{imagePath:e,objectId:t,cameraRoll:r,imageRotation:i}})=>{const o=e.trim();return M.isTifOrMrf(o)?{url:o,objectId:t,rotation:(r??0)+(i??0)}:null})).filter(i.isSome)):null}set view(e){this._set("view",e)}filterByFootprints(e,t){const r=[],i=[],o=[];return e.forEach((e=>{const{layer:{coveragePercent:a},attributes:s}=e;let n;const{polygon:c,frustum:h}=P.createCoveragePolygon(e);if(n=c,s.isInspection&&(n=P.computePolygonForInspection(s)),a&&(n=P.resizePolygon(n,a)),P.checkIfPolygonContainsSelectedPoint(n,t)){o.push(e);const t=n.toJSON(),a=h?.toJSON(),{cameraHeight:c,cameraHeading:d,location:u,objectId:p}=s,g=l.isSerializable(u)?u.toJSON():u;t.imageID=g.imageID=p,a&&(a.imageID=p),g.z=c,this.pointSources?.push(g),r.push(d>0?t:void 0),i.push(d>0?a:void 0)}})),{features:o,polygons:r,frustums:i}}getCurrentCoveragePolygon(){return this._currentCoveragePolygon}getCurrentBestFeaturePolygon(){return this._initialCurrentCoveragePolygon}handleSectorClick(e){if(isNaN(e))return;const t=this._sectorData?.[O.sectorsInOrder[e]];t?.length&&this._updateCurrentBestFeature(t.at(0))}handleFeatureClick(e){const{sector:t,featureIndexInSector:r}=e;if(isNaN(r))return;const i=this._sectorData?.[t];i?.length&&this._updateCurrentBestFeature(i.at(r))}async loadBestImage(e){this._loading=!0,this.displayMessage=null,this.selectedPoint=e.spatialReference.isGeographic?v.geographicToWebMercator(e):e.clone(),this.features.removeAll(),this.currentBestFeature=null,this.additionalFeatures.removeAll(),this._additionalCoveragePolygons.removeAll(),this._additionalFeatureGraphics.removeAll(),this._currentCoveragePolygon=u.destroyMaybe(this._currentCoveragePolygon),this._overlays?.removeAll(),await this._fetchFeaturesWithController(e)}loadImageError(e){h.getLogger(this).error("oriented-imagery-viewer:load-image",e),this.setMessage("imageLoadError","error",e.message)}async plotMapPoint(e){return this.plotReferencePoint(e),this.transformAndPlotReferencePointOnImage({feature:this.currentBestFeature,selectedLocation:e,options:{signal:this._transformController?.signal}})}plotReferencePointOnGround(e){this._referencePointOnGround&&(this._overlays?.remove(this._referencePointOnGround),this._referencePointOnGround.destroy()),null!=e&&(this._referencePointOnGround=new r({geometry:{type:"point",...e.toJSON()},symbol:B.diamondSymbol}),this.view?this._overlays?.add(this._referencePointOnGround):this.emit("plot-ground-point",{data:{point:this._referencePointOnGround?.geometry}}))}plotReferencePointOnImage(e){if("image-loaded"===this.state)switch(this._referencePointOnImage&&(this._imageViewer.removeGraphic(this._referencePointOnImage),this._panoramicViewer.removeGraphic(this._referencePointOnImage),this._referencePointOnImage.destroy()),this.mode){case"default":{const t=l.isSerializable(e)?e.toJSON():e;t.x-=.5,t.y=.5-t.y,this._referencePointOnImage=new r({geometry:{type:"point",spatialReference:this._imageViewer.imageRenderer.spatialReference,...t},symbol:B.diamondSymbol}),this._imageViewer.addGraphic(this._referencePointOnImage,0);break}case"panoramic":{const{imageSize:t}=this._panoramicViewer;if(!t)return;const[i,o]=t,{heading:a,pitch:s}=I.convertPixelToHeadingPitch(e,i,o),n=I.convertHeadingPitchToSphereVertex(a,s);this._referencePointOnImage=new r({geometry:new R(n,x.WebMercator),symbol:B.diamondSymbol3D}),this._panoramicViewer.addGraphic(this._referencePointOnImage,0);break}}}resetImage(){switch(this.setMessage("onLoadMessage","info"),this.mode){case"default":this._imageViewer.clearImage(),this._imageViewer.clearGraphics();break;case"panoramic":this._panoramicViewer.clearGraphics()}this._cancelCurrentCoverageUpdate(),this._cancelFetchingFeatures()}async searchBestImage(e,t){try{const r=await w.searchImages(e,t);r&&await this._processFeatureResponse(r,{signal:t?.signal})}catch(r){p.isAbortError(r)||(this.setMessage("imageLoadError","error",r.message),h.getLogger(this).error("error occurred while finding best image",r))}}selectBestFeature(e){this.currentBestFeature=this.features?.find((({attributes:t})=>t.objectId===Number(e)))}setAdditionalCameraLocationsVisibility(e){this._additionalFeatureGraphics.forEach((t=>{t.visible=e}))}setAdditionalCoverageVisibility(e){this._additionalCoveragePolygons.forEach((t=>{t.visible=e}))}setCurrentCoverageVisibility(e){this._currentCoveragePolygon&&(this._currentCoveragePolygon.visible=e),this._currentBestFeatureGraphic&&(this._currentBestFeatureGraphic.visible=e)}setMapImageConversionToolState(e){this.mapImageConversionToolState=e}async transformAndPlotReferencePointOnImage(e){const{selectedLocation:t,options:r}=e,i=this._initialCurrentCoveragePolygon?.geometry;if(!i?.contains(t))return;const o=await this.transformPoint(t,r);return o?(this.plotReferencePointOnImage(o),{x:o.x,y:o.y}):void 0}updateSuitabilities(e){this._suitabilities=e.sort(((e,t)=>e.suitability-t.suitability));const t=this._suitabilities.map((e=>e.feature));this._updateFeatures(t),this._groupFeaturesBySectors(),this._initialCurrentCoverageUpdate=!0}_cancelFetchingFeatures(e){const t=this._fetchFeaturesController;t&&t.abort(e),this._fetchFeaturesController=null}_cancelCurrentCoverageUpdate(){const e=this._updateCoverageController;e&&e.abort("Multiple Coverage Updates: Aborting Current Coverage Update to sync image and coverage"),this._updateCoverageController=null}_createFootprintHandles(){this.removeHandles(k.footprintHandles),this.addHandles(g.watch((()=>[this._panoramicViewer.fov,this._panoramicViewer.yaw,this._panoramicViewer.pitch]),(()=>{this.updateFootprintPanorama()}),g.syncAndInitial),k.footprintHandles)}async _fetchFeatures(e,t){if(!this.view)return;const r=this.layer;if(r){const i={include:r},o=this.view.toScreen(e);if(!o)return;const a=await this.view.hitTest(o,i);this._processHitTestResults(r,a,t)}}async _fetchFeaturesWithController(e){this._cancelFetchingFeatures();const t=new AbortController,{signal:r}=t;this._fetchFeaturesController=t;try{await this._fetchFeatures(e,{signal:r}).finally((()=>{this._fetchFeaturesController=null}))}catch(i){this.setMessage("imageLoadError","error"),h.getLogger(this).error("error occurred while fetching features",i)}}_groupFeaturesBySectors(){const{_suitabilities:e,additionalFeatures:t,currentBestFeature:r,features:i}=this;if(!(e&&t&&r&&i))return void(this._sectorData=null);this._sectorData={};for(const l of O.sectorsInOrder)this._sectorData[l]=new o;const a=e.map(((e,t)=>({...e,featureIndex:t})));a.sort(((e,t)=>e.trueSuitability-t.trueSuitability));const s=a.map((({distance:e})=>e)),n=Math.max(...s);a.forEach((e=>{const{distance:t,angle:r,featureIndex:o}=e,a=t/n*O.sectorsRadii[2],s=M.calculateSegment(t,n),l=M.calculateDirection(r);if(!this._sectorData)return;const c=O.sectorsRadii[3]+a*Math.sin(r*Math.PI/180),h=O.sectorsRadii[3]+a*Math.cos(r*Math.PI/180);let d;const u=i.at(o),p=u===this.currentBestFeature,g=this.currentBestFeature?.attributes.cameraPitch&&this.currentBestFeature?.attributes.cameraPitch<5;if(p&&g)d=-90;else{const e=c-O.sectorsRadii[3],t=h-O.sectorsRadii[3],r=t/Math.sqrt(e**2+t**2);let i=180*Math.acos(r)/Math.PI;(e<0&&t<0||e<0&&t>0)&&(i*=-1),d=i}const m=""===s?l:`${s}_${l}`;p&&(d===this.bestFeatureAngle?this.previousFeatureAngle=d:this.bestFeatureAngle=d,this.navigatorCurrentBestFeature=g?null:{x:c,y:h,direction:l});const y=this._sectorData[m];y.add({angle:r,featureIndex:o,x:c,y:h,objectID:u.attributes.objectId,sector:m,featureIndexInSector:y.length})}))}async _processFeatureResponse(e,t){const{selectedPoint:r}=this;if(!r)return;if(!e)return;const o=e;if(!o)return;const{features:a}=o;if(!a.length)return this.setMessage("noImageError","error"),void(this.currentBestFeature=null);this.coveragePolygons.removeAll(),this.coverageFrustums.removeAll(),this.pointSources.removeAll();const{features:s,polygons:n,frustums:l}=this.filterByFootprints(a,r),c=s;this.coveragePolygons.addMany(n),this.coverageFrustums.addMany(l);const h=n.filter(i.isSome).reduce(((e,t)=>(e.push(...t.rings.flat()),e)),new Array),d=new E({rings:h,spatialReference:n[0]?.spatialReference}).extent;if(!c.length)return void this.setMessage("noImageError","error");if(this._footprintExtent=d,c[0].attributes.elevationSource&&!r.z&&d){const e=await C.updateElevation([r],{feature:c[0],footprintExtent:d,options:t});if(e[0]){const t=e[0];r.elevation=t.z}c[0].elevationSample&&c.forEach((e=>{e.elevationSample=c[0].elevationSample}))}this._suitabilities=b.calculateSuitabilities({features:c,selectedPoint:r,camera:M.isSceneView(this.view)?this.view.camera:null,currentImage:this.currentBestFeature}),this.updateSuitabilities(this._suitabilities);const u=this._suitabilities.map((e=>e.feature));this.currentBestFeature=u[0],this._loading=!1}async _processHitTestResults(e,t,r){const{screenPoint:i,results:[o]}=t,a="graphic"===o?.type&&this.shouldShowSelectedImage,s={layerInstanceOrURL:e,point:o?.mapPoint??this.view?.toMap(i),queryParams:{maximumDistance:e.maximumDistance,objectIds:a?[o.graphic.getAttribute(e.objectIdField)]:void 0},queryFeatures:null};await this.searchBestImage(s,r)}_updateFeatures(e){if(!e.length)return this.currentBestFeature=null,void this.additionalFeatures.removeAll();this.features.removeAll(),this.features.addMany(e),this.currentBestFeature=e[0],e.length>1?this.additionalFeatures.addMany(e.slice(1)):this.additionalFeatures.removeAll()}_updatePointsAndPolygons(){const{coveragePolygons:e,pointSources:t,currentBestFeature:i,currentCoverageVisible:o,isAdditionalCoverageVisible:a,isAdditionalPointSourcesVisible:s}=this;if(e&&t&&i){this._additionalCoveragePolygons.removeAll(),this._additionalFeatureGraphics.removeAll(),this._currentCoveragePolygon&&(this._currentCoveragePolygon.destroy(),this._currentCoveragePolygon=null,this._initialCurrentCoveragePolygon=null);for(const t of e)t?.imageID===i.attributes.objectId?this._initialCurrentCoveragePolygon=new r({attributes:{imageID:t?.imageID},geometry:{type:"polygon",...t},symbol:B.activePolygonSymbol,visible:!1}):this._additionalCoveragePolygons.push(new r({attributes:{imageID:t?.imageID},geometry:{type:"polygon",...t},symbol:B.polygonSymbol,visible:a}));for(const e of t)e.imageID===i.attributes.objectId?this._currentBestFeatureGraphic=new r({attributes:{imageID:e.imageID},geometry:{type:"point",...e},symbol:B.activeSourcePointSymbol,visible:o}):this._additionalFeatureGraphics?.push(new r({attributes:{imageID:e.imageID},geometry:{type:"point",...e},symbol:B.sourcePointSymbol,visible:s}))}}_updateCurrentBestFeature(e){if(!e)return;this.currentBestFeature=this.features?.at(e.featureIndex);const t=this.currentBestFeature?.attributes.cameraPitch&&this.currentBestFeature?.attributes.cameraPitch<5;let r;if(t)r=-90;else{const t=e.x-O.sectorsRadii[3],i=e.y-O.sectorsRadii[3],o=i/Math.sqrt(t**2+i**2);let a=180*Math.acos(o)/Math.PI;(t<0&&i<0||t<0&&i>0)&&(a*=-1),r=a}r===this.bestFeatureAngle?this.previousFeatureAngle=r:this.bestFeatureAngle=r,this.navigatorCurrentBestFeature=t?null:{x:e.x,y:e.y,direction:e.sector.includes("_")?e.sector.split("_")[1]:e.sector}}clearGraphics(){this._imageViewer.clearGraphics(),this._panoramicViewer.clearGraphics()}plotReferencePoint(e){"mapPoint"in e?this.plotReferencePointOnGround(e.mapPoint):this.plotReferencePointOnGround(e)}setMessage(e,t,r,i){this._loading=!1,this.displayMessage={key:e,type:t,data:r,map:i}}async transformAndPlotSelectedLocation(e){const{currentBestFeature:t,selectedPoint:r,state:i}=this;if(this._crossSymbol&&(this._panoramicViewer.removeGraphic(this._crossSymbol),this._imageViewer.removeGraphic(this._crossSymbol),this._crossSymbol=u.destroyMaybe(this._crossSymbol)),!r||!t||"image-loaded"!==i)return;let o;try{o=await this.transformPoint(r,e),await this.plotSelectedPointOnImage(o,e)}catch(a){p.isAbortError(a)||h.getLogger(this).error("failed to transform map point to pixel, cross symbol will not be plotted on image",{error:a,selectedPoint:r,feature:t})}}async transformPoint(e,t){if("none"===this.mode)return;const r=this.currentBestFeature,i=await C.transformPoints([e],{feature:r,imageProperties:"default"===this.mode?this._imageViewer.viewModel.image.serviceRasterInfo:{width:this._panoramicViewer.imageSize?.[0],height:this._panoramicViewer.imageSize?.[1]},options:t});if(!i.length)return;return i[0]}updateCurrentCoveragePolygon(e){if(this._initialCurrentCoverageUpdate){if(this._overlays?.removeAll(),this._initialCurrentCoverageUpdate=!1,e&&(this._currentCoveragePolygon&&this._currentCoveragePolygon.destroy(),e.visible=this.currentCoverageVisible,this._currentCoveragePolygon=e),this.view){const e=this.selectedPoint?new r({geometry:this.selectedPoint.clone(),symbol:B.crossSymbol,attributes:{imageID:this.currentBestFeature?.attributes.objectId}}):null;this._overlays?.graphics.addMany([...this._additionalCoveragePolygons,...this._additionalFeatureGraphics,this._currentCoveragePolygon,this._currentBestFeatureGraphic,e].filter(M.isGraphic))}}else if(this.view){const t=this._currentCoveragePolygon&&this._overlays?this._overlays.graphics.indexOf(this._currentCoveragePolygon):-1;e&&(this._currentCoveragePolygon&&(this._overlays?.remove(this._currentCoveragePolygon),this._currentCoveragePolygon.destroy()),e.visible=this.currentCoverageVisible,this._currentCoveragePolygon=e,this._overlays?.graphics.add(this._currentCoveragePolygon,t>=0?t:void 0))}}async updateCoverage(){if("default"===this.mode){this._cancelCurrentCoverageUpdate();const{imagePointsInView:e,state:t}=this._imageViewer,r=c.clone(e);if(!r||"image-loaded"!==t)return;this.updateFootprint(r)}}};e.__decorate([m.property()],H.prototype,"activeLayer",null),e.__decorate([m.property()],H.prototype,"additionalFeatures",void 0),e.__decorate([m.property({json:{write:!1}})],H.prototype,"determineWorkflowForFeature",void 0),e.__decorate([m.property()],H.prototype,"drawFootprint",void 0),e.__decorate([m.property({readOnly:!0,value:"none"})],H.prototype,"mode",null),e.__decorate([m.property()],H.prototype,"imagePointsInView",null),e.__decorate([m.property()],H.prototype,"layer",void 0),e.__decorate([m.property()],H.prototype,"shouldShowSelectedImage",void 0),e.__decorate([m.property({type:Number})],H.prototype,"brightness",null),e.__decorate([m.property({type:Number})],H.prototype,"contrast",null),e.__decorate([m.property()],H.prototype,"coverageFrustums",void 0),e.__decorate([m.property()],H.prototype,"coveragePolygons",void 0),e.__decorate([m.property()],H.prototype,"currentCoverageVisible",void 0),e.__decorate([m.property()],H.prototype,"disabled",void 0),e.__decorate([m.property()],H.prototype,"displayMessage",void 0),e.__decorate([m.property()],H.prototype,"pointSources",void 0),e.__decorate([m.property()],H.prototype,"previousFeatureAngle",void 0),e.__decorate([m.property()],H.prototype,"currentBestFeature",void 0),e.__decorate([m.property()],H.prototype,"bestFeatureAngle",void 0),e.__decorate([m.property()],H.prototype,"selectedPoint",void 0),e.__decorate([m.property({readOnly:!0})],H.prototype,"featureCount",null),e.__decorate([m.property()],H.prototype,"features",void 0),e.__decorate([m.property({readOnly:!0})],H.prototype,"imageGalleryEnabled",null),e.__decorate([m.property({readOnly:!0})],H.prototype,"imageLoaded",null),e.__decorate([m.property()],H.prototype,"isAdditionalCoverageVisible",void 0),e.__decorate([m.property()],H.prototype,"isAdditionalPointSourcesVisible",void 0),e.__decorate([m.property({type:Number})],H.prototype,"localPort",void 0),e.__decorate([m.property()],H.prototype,"mapImageConversionToolState",void 0),e.__decorate([m.property()],H.prototype,"navigatorCurrentBestFeature",void 0),e.__decorate([m.property()],H.prototype,"referencePoint",null),e.__decorate([m.property({type:Number})],H.prototype,"sharpness",null),e.__decorate([m.property({readOnly:!0})],H.prototype,"sectorData",null),e.__decorate([m.property({readOnly:!0})],H.prototype,"state",null),e.__decorate([m.property({readOnly:!0})],H.prototype,"thumbnails",null),e.__decorate([m.property()],H.prototype,"updateFootprint",void 0),e.__decorate([m.property({value:null})],H.prototype,"view",null),e.__decorate([m.property()],H.prototype,"_additionalCoveragePolygons",void 0),e.__decorate([m.property()],H.prototype,"_additionalFeatureGraphics",void 0),e.__decorate([m.property()],H.prototype,"_currentCoveragePolygon",void 0),e.__decorate([m.property()],H.prototype,"_fetchFeaturesController",void 0),e.__decorate([m.property()],H.prototype,"_imageViewer",void 0),e.__decorate([m.property()],H.prototype,"_initialCurrentCoveragePolygon",void 0),e.__decorate([m.property()],H.prototype,"_initialCurrentCoverageUpdate",void 0),e.__decorate([m.property()],H.prototype,"_loading",void 0),e.__decorate([m.property()],H.prototype,"_overlays",void 0),e.__decorate([m.property()],H.prototype,"_panoramicViewer",void 0),e.__decorate([m.property()],H.prototype,"_referencePointOnGround",void 0),e.__decorate([m.property()],H.prototype,"_referencePointOnImage",void 0),e.__decorate([m.property()],H.prototype,"_currentBestFeatureGraphic",void 0),e.__decorate([m.property()],H.prototype,"_sectorData",void 0),H=e.__decorate([_.subclass("esri.widgets.OrientedImageryViewer.OrientedImageryViewerViewModel")],H);return H}));
