/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../intl","../../core/Accessor","../../core/Collection","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/get","../../views/2d/layers/features/layerAdapters/featureReductionUtils","./support/ActiveLayerInfo","../../intl/locale"],(function(e,t,r,i,s,a,n,l,o,y,d,c,h,L){"use strict";const u={state:"state",view:"view",allLayerViews:"all-layer-views",legendProperties:"legend-properties"},_=i.ofType(h),p=new Set(["esri.layers.BuildingSceneLayer","esri.layers.CSVLayer","esri.layers.FeatureLayer","esri.layers.GeoJSONLayer","esri.layers.GeoRSSLayer","esri.layers.GroupLayer","esri.layers.HeatmapLayer","esri.layers.ImageryLayer","esri.layers.ImageryTileLayer","esri.layers.MapImageLayer","esri.layers.OGCFeatureLayer","esri.layers.OrientedImageryLayer","esri.layers.PointCloudLayer","esri.layers.StreamLayer","esri.layers.SceneLayer","esri.layers.SubtypeGroupLayer","esri.layers.TileLayer","esri.layers.VoxelLayer","esri.layers.WFSLayer","esri.layers.WMSLayer","esri.layers.WMTSLayer","esri.layers.WCSLayer","esri.layers.LinkChartLayer","esri.layers.knowledgeGraph.KnowledgeGraphSublayer"]),f="view.basemapView.baseLayerViews",v="view.groundView.layerViews",w="view.basemapView.referenceLayerViews",I=[f,v,"view.layerViews",w];let g=class extends r{constructor(e){super(e),this._layerViewByLayerId={},this._layerInfosByLayerViewId={},this._activeLayerInfosByLayerViewId={},this._activeLayerInfosWithNoParent=new i,this.activeLayerInfos=new _,this.basemapLegendVisible=!1,this.groundLegendVisible=!1,this.hideLayersNotInCurrentView=!1,this.keepCacheOnDestroy=!1,this.respectLayerVisibility=!0,this.layerInfos=[],this.view=null}initialize(){this.addHandles(s.watch((()=>this.view),(()=>this._viewHandles()),s.initial),u.view),this.addHandles(L.onLocaleChange((()=>this._refresh())))}destroy(){this._destroyViewActiveLayerInfos(),this.view=null}get state(){return this.view?.ready?"ready":"disabled"}_viewHandles(){this.removeHandles(u.state),this.view&&this.addHandles(s.watch((()=>this.state),(()=>this._stateHandles()),s.initial),u.state)}_stateHandles(){this._resetAll(),"ready"===this.state&&this._watchPropertiesAndAllLayerViews()}_resetAll(){this.removeHandles([u.allLayerViews,u.legendProperties]),this._destroyViewActiveLayerInfos(),this.activeLayerInfos.removeAll()}_destroyViewActiveLayerInfos(){Object.keys(this._activeLayerInfosByLayerViewId).forEach(this._destroyViewActiveLayerInfo,this)}_destroyViewActiveLayerInfo(e){this.removeHandles(e);const t=this._activeLayerInfosByLayerViewId[e];delete this._activeLayerInfosByLayerViewId[e],t?.parent&&t.parent.children.remove(t)}_watchPropertiesAndAllLayerViews(){const{view:e}=this;if(!e)return;const{allLayerViews:t}=e;t.length&&this._refresh(),this.addHandles(t.on("change",(e=>this._propertiesChangeHandle())),u.allLayerViews),this.addHandles(s.watch((()=>[this.layerInfos,this.basemapLegendVisible,this.groundLegendVisible]),(()=>this._propertiesChangeHandle())),u.legendProperties)}_propertiesChangeHandle(){this._destroyViewActiveLayerInfos(),this._refresh()}_refresh(){this._layerInfosByLayerViewId={},this.activeLayerInfos.removeAll(),this._generateLayerViews().filter(this._filterLayerViewsByLayerInfos,this).filter(this._isLayerViewSupported,this).forEach(this._generateActiveLayerInfo,this),this._sortActiveLayerInfos(this.activeLayerInfos)}_sortActiveLayerInfos(e){const t=this.view;if(e.length<2||!t)return;const r=[];e.forEach((t=>{if(!t.parent){const i=t.layer.parent,s=i&&"uid"in i&&this._layerViewByLayerId[i.uid],a=s&&this._activeLayerInfosByLayerViewId[s.uid];a&&e.includes(a)&&(r.push(t),t.parent=a,a.children.add(t),this._sortActiveLayerInfos(a.children))}})),e.removeMany(r);const i={};t.allLayerViews.forEach(((e,t)=>i[e.layer.uid]=t)),e.sort(((e,t)=>{const r=i[e.layer.uid]||0;return(i[t.layer.uid]||0)-r}))}_generateLayerViews(){const e=[];return I.filter(this._filterLayerViews,this).map((e=>d.get(this,e))).filter((e=>null!=e)).forEach(this._collectLayerViews("layerViews",e)),e}_filterLayerViews(e){const t=!this.basemapLegendVisible&&(e===f||e===w),r=!this.groundLegendVisible&&e===v;return!t&&!r}_collectLayerViews(e,t){const r=i=>(i&&i.forEach((i=>{t.push(i),r(i[e])})),t);return r}_filterLayerViewsByLayerInfos(e){const t=this.layerInfos;return!t||!t.length||t.some((t=>this._hasLayerInfo(t,e)))}_hasLayerInfo(e,t){const r=this._isLayerUIDMatching(e.layer,t.layer.uid);return r&&(this._layerInfosByLayerViewId[t.uid]=e),r}_isLayerUIDMatching(e,t){return e&&(e.uid===t||this._hasLayerUID(e.layers,t))}_hasLayerUID(e,t){return e&&e.some((e=>this._isLayerUIDMatching(e,t)))}_isLayerViewSupported(e){return!!p.has(e.layer.declaredClass)&&(this._layerViewByLayerId[e.layer.uid]=e,!0)}_generateActiveLayerInfo(e){this._isLayerActive(e)?this._buildActiveLayerInfo(e):(this.removeHandles(e.uid),this.addHandles(s.watch((()=>[e.legendEnabled,e.layer?.legendEnabled]),(()=>this._layerActiveHandle(e))),e.uid))}_layerActiveHandle(e){this._isLayerActive(e)&&(this.removeHandles(e.uid),this._buildActiveLayerInfo(e))}_isLayerActive(e){return!this.respectLayerVisibility||e.legendEnabled&&e.layer?.legendEnabled}_buildActiveLayerInfo(e){const t=e.layer,r=e.uid,i=this._layerInfosByLayerViewId[r];let a=this._activeLayerInfosByLayerViewId[r];if(!a){const s=void 0!==i?.title&&i.layer.uid===t.uid;a=new h({layer:t,layerView:e,title:s?i.title:t.title,view:this.view,respectLayerVisibility:this.respectLayerVisibility,hideLayersNotInCurrentView:this.hideLayersNotInCurrentView,keepCacheOnDestroy:this.keepCacheOnDestroy,sublayerIds:i?.sublayerIds||[]}),this._activeLayerInfosByLayerViewId[r]=a}const n=t.parent&&"uid"in t.parent?this._layerViewByLayerId[t.parent?.uid]:null;if(a.parent=this._activeLayerInfosByLayerViewId[n?.uid],!this.hasHandles(r)){const i=[s.watch((()=>t.title),(e=>this._titleHandle(e,a))),s.watch((()=>[t.opacity,"renderer"in t&&t.renderer,"pointSymbol"in t&&t.pointSymbol,"lineSymbol"in t&&t.lineSymbol,"polygonSymbol"in t&&t.polygonSymbol]),(()=>this._constructLegendElements(a))),s.when((()=>!0===this.view?.stationary),(()=>this._scaleHandle(a)),s.initial),s.watch((()=>e.layer?c.getEffectiveFeatureReduction(e.layer,e.view):null),(()=>this._constructLegendElements(a))),s.watch((()=>e.updating),(()=>{if(null==e.layer)return;null!=c.getEffectiveFeatureReduction(e.layer,e.view)&&this._constructLegendElements(a)})),s.watch((()=>"effect"in t&&t.effect),(()=>this._constructLegendElements(a))),s.when((()=>this.view?.timeZone),(()=>this._constructLegendElements(a)),s.initial)];if(this.respectLayerVisibility){const r=s.watch((()=>e.legendEnabled),(e=>this._legendEnabledHandle(e,a))),n=s.watch((()=>t.legendEnabled),(e=>this._legendEnabledHandle(e,a)));i.push(r,n)}this.addHandles(i,r)}a.isScaleDriven||this._constructLegendElements(a),this._addActiveLayerInfo(a)}_titleHandle(e,t){t.title=e,this._constructLegendElements(t)}_legendEnabledHandle(e,t){e?this._addActiveLayerInfo(t):this._removeActiveLayerInfo(t)}_scaleHandle(e){(e.isScaleDriven||e.hideLayersNotInCurrentView)&&this._constructLegendElements(e)}_addActiveLayerInfo(e){const{layerView:t,layer:r}=e;if(this._isLayerActive(t)&&!this.activeLayerInfos.includes(e)){const t=e.parent;if(t)t.children.includes(e)||t.children.push(e),this._sortActiveLayerInfos(t.children);else{const t=this.layerInfos?.some((e=>e.layer.uid===r.uid));r.parent&&"uid"in r.parent&&!t?this._activeLayerInfosWithNoParent.add(e):(this.activeLayerInfos.add(e),this._sortActiveLayerInfos(this.activeLayerInfos))}if(this._activeLayerInfosWithNoParent.length){const e=[];this._activeLayerInfosWithNoParent.forEach((t=>{const r=t.layer.parent,i=r&&"uid"in r?this._layerViewByLayerId[r?.uid]:null,s=this._activeLayerInfosByLayerViewId[i?.uid];s&&(e.push(t),t.parent=s)})),e.length&&(this._activeLayerInfosWithNoParent.removeMany(e),e.forEach((e=>this._addActiveLayerInfo(e))))}}}_removeActiveLayerInfo(e){const t=e.parent;t?t.children.remove(e):this.activeLayerInfos.remove(e)}_constructLegendElements(e){const t=e.layer;"featureCollections"in t&&t.featureCollections?e.buildLegendElementsForFeatureCollections(t.featureCollections):"featureReduction"in t&&t.featureReduction&&"renderer"in t.featureReduction&&("binning"===t.featureReduction.type||"cluster"===t.featureReduction.type)&&(!this.view||t.featureReduction.maxScale<=this.view.scale)?e.buildLegendElementsForFeatureReduction(t.featureReduction):"renderer"in t&&t.renderer&&!("sublayers"in t)?e.buildLegendElementsForRenderer(t.renderer):"url"in t&&t.url?e.buildLegendElementsForTools():e.children.forEach((e=>this._constructLegendElements(e)))}};e.__decorate([a.property({type:_})],g.prototype,"activeLayerInfos",void 0),e.__decorate([a.property()],g.prototype,"basemapLegendVisible",void 0),e.__decorate([a.property()],g.prototype,"groundLegendVisible",void 0),e.__decorate([a.property()],g.prototype,"hideLayersNotInCurrentView",void 0),e.__decorate([a.property()],g.prototype,"keepCacheOnDestroy",void 0),e.__decorate([a.property()],g.prototype,"respectLayerVisibility",void 0),e.__decorate([a.property()],g.prototype,"layerInfos",void 0),e.__decorate([a.property({readOnly:!0})],g.prototype,"state",null),e.__decorate([a.property()],g.prototype,"view",void 0),g=e.__decorate([y.subclass("esri.widgets.Legend.LegendViewModel")],g);return g}));
