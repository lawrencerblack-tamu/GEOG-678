/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","../chunks/tslib.es6","../core/Logger","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/has","../core/RandomLCG","../core/accessorSupport/decorators/subclass","./Widget","./Daylight/css","./Daylight/DaylightViewModel","./Daylight/VisibleElements","./Daylight/support/daylightUtils","./Daylight/support/SliderWithDropdown","../chunks/componentsUtils","./support/DatePicker","./support/globalCss","./support/Heading","./support/widgetUtils","./support/decorators/messageBundle","./support/jsxFactory"],(function(e,t,s,i,l,o,a,n,r,d,c,h,p,g,u,y,_,b,m,w,v){"use strict";const k=/(.*)\s(.*)/,S="date",C="esri.widgets.Daylight";let P=class extends r{constructor(e,t){super(e,t),this.headingLevel=3,this.iconClass=d.css.widgetIcon,this.icon=null,this.viewModel=new c,this.visibleElements=new h,this.dateOrSeason=S,this._timeSlider=new g({viewModel:this.viewModel.timeSliderViewModel,steps:this.timeSliderSteps,labelInputsEnabled:!1,visibleElements:{labels:!0},tickConfigs:[{mode:"position",values:[0,360,720,1080,1439],labelsVisible:!0,tickCreatedFunction:this._onPrimaryTickCreated.bind(this)},{mode:"position",values:[120,240,480,600,840,960,1200,1320],tickCreatedFunction:this._onSecondaryTickCreated.bind(this)}]}),this._datePicker=new y({viewModel:this.viewModel.datePickerViewModel,commitOnMonthChange:!0}),this._onPlayDayClick=()=>{this.viewModel.toggleDayPlaying()},this._onYearPlayClick=()=>{this.viewModel.toggleYearPlaying()},this._onSeasonChange=e=>{this.viewModel.currentSeason=e.target.value},this._onSunLightingCheckboxChange=()=>{this.viewModel.toggleSunLightingEnabled()},this._onShadowCheckboxChange=()=>{this.viewModel.toggleDirectShadowsEnabled()}}get label(){return this.messages?.title??""}set label(e){this._overrideIfSome("label",e)}get playSpeedMultiplier(){return this.viewModel.playSpeedMultiplier}set playSpeedMultiplier(e){this.viewModel.playSpeedMultiplier=e}get timeSliderSteps(){return this._timeSlider?.steps??5}set timeSliderSteps(e){this._timeSlider.steps=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get test(){return{datePicker:this._datePicker}}get _useAmPm(){const e=this._timeSlider.viewModel.getLabelForValue(0,"tick");return null!=e&&k.test(e)}postInitialize(){this.viewModel.isSupported&&this.addHandles([i.watch((()=>this.viewModel.datePickerViewModel),(e=>this._datePicker.viewModel=e),i.syncAndInitial),i.watch((()=>this.viewModel.timeSliderViewModel),(e=>this._timeSlider.viewModel=e),i.syncAndInitial),i.watch((()=>this.visibleElements?.timezone),(e=>this._timeSlider.showDropDown=e),i.syncAndInitial),i.watch((()=>!this.viewModel.sunLightingEnabled),(e=>{this._datePicker.disabled=e,this._timeSlider.disabled=e}),i.syncAndInitial),i.when((()=>!this.visible),(()=>this._datePicker?.close(!1)),i.sync)])}destroy(){this._datePicker.destroy(),this._timeSlider.destroy()}render(){const{messages:e,viewModel:t,visibleElements:s}=this,i=t.isSupported;return v.tsx("div",{class:this.classes(d.css.base,_.globalCss.widget)},i?v.tsx(v.tsxFragment,null,s.header?v.tsx(b.Heading,{level:this.headingLevel},e.title):null,this._renderTimeOptions(),s.datePicker?this._renderDateOrSeason():null,s.sunLightingToggle?this._renderSunLightingToggle():null,s.shadowsToggle?this._renderShadowsToggle():null):v.tsx("div",{class:d.css.panelError,key:"unsupported"},v.tsx("p",null,e.unsupported)))}loadDependencies(){return u.loadCalciteComponents({button:()=>new Promise(((t,s)=>e(["../chunks/calcite-button"],t,s))),checkbox:()=>new Promise(((t,s)=>e(["../chunks/calcite-checkbox"],t,s))),label:()=>new Promise(((t,s)=>e(["../chunks/calcite-label"],t,s))),option:()=>new Promise(((t,s)=>e(["../chunks/calcite-option"],t,s))),select:()=>new Promise(((t,s)=>e(["../chunks/calcite-select"],t,s)))})}_renderTimeOptions(){const{viewModel:e,visibleElements:t,messages:s}=this,{directShadowsEnabled:i,dayPlaying:l}=e,o=!e.sunLightingEnabled;return v.tsx("div",{class:this.classes(d.css.dayContainer,{[d.css.sliderShadowOn]:i,[d.css.sliderShadowOff]:!i,[d.css.sliderDateOn]:t.datePicker,[d.css.sliderDateOff]:!t.datePicker,[d.css.sliderAmPmOn]:this._useAmPm,[d.css.containerDisabled]:o}),key:"daylight-time-options"},this._timeSlider.render(),t.playButtons?this._renderPlayPauseButton({playing:l,disabled:o,label:s.playDay,onClick:this._onPlayDayClick}):null)}_renderDateOptions(){const{viewModel:e,visibleElements:t,messages:s}=this,{yearPlaying:i}=e,l=!e.sunLightingEnabled;return v.tsx("div",{class:this.classes(d.css.dateContainer,l&&d.css.containerDisabled),key:"daylight-date"},this._datePicker.render(),t.playButtons?this._renderPlayPauseButton({playing:i,disabled:l,label:s.playYear,onClick:this._onYearPlayClick}):null)}_renderPlayPauseButton({playing:e,disabled:t,label:s,onClick:i}){return v.tsx("calcite-button",{appearance:"solid",class:d.css.playPauseButton,disabled:t,iconStart:e?"pause-f":"play-f",label:s,onclick:i,round:!0,title:s,type:"button"})}_renderSeasonSelect(){const{messages:e,viewModel:t}=this,s=!t.sunLightingEnabled;return v.tsx("calcite-select",{class:this.classes(d.css.seasonPicker),disabled:s,label:e.season,onCalciteSelectChange:this._onSeasonChange},p.orderedSeasons.map((s=>v.tsx("calcite-option",{selected:t.currentSeason===s,value:s},e[s]))))}_renderDateOrSeason(){return"date"===this.dateOrSeason?this._renderDateOptions():this._renderSeasonSelect()}_renderSunLightingToggle(){const e=this.messages?.sunLightingToggle;return v.tsx("calcite-label",{key:"date-time-toggle",layout:"inline",scale:"s",title:e?.tooltip},v.tsx("calcite-checkbox",{checked:this.viewModel.sunLightingEnabled,class:d.css.sunLightingCheckbox,onCalciteCheckboxChange:this._onSunLightingCheckboxChange}),e?.label)}_renderShadowsToggle(){const e=this.messages.shadowsToggle;return v.tsx("calcite-label",{key:"shadow-toggle",layout:"inline",scale:"s",title:e?.tooltip},v.tsx("calcite-checkbox",{checked:this.viewModel.directShadowsEnabled,class:d.css.shadowsCheckbox,onCalciteCheckboxChange:this._onShadowCheckboxChange}),e.label)}_onPrimaryTickCreated(e,t,s){t.classList.add(...M,_.globalCss.primaryTick),s.classList.add(...M,_.globalCss.primaryTickLabel),s.onclick=t.onclick=this._makeGoToTime(e);const i=s.textContent,l=null!=i&&k.exec(i);l&&(s.innerHTML=`${l[1]}<br><div class=${_.globalCss.primaryTickAmPm}>${l[2]}</div>`)}_onSecondaryTickCreated(e,t){t.classList.add(...M,_.globalCss.secondaryTick),t.onclick=this._makeGoToTime(e)}_makeGoToTime(e){return()=>{this.viewModel.timeSliderPosition=e}}};t.__decorate([l.property(),w.messageBundle("esri/widgets/Daylight/t9n/Daylight")],P.prototype,"messages",void 0),t.__decorate([l.property(),w.messageBundle("esri/widgets/support/t9n/timezone")],P.prototype,"timezoneMessages",void 0),t.__decorate([l.property()],P.prototype,"headingLevel",void 0),t.__decorate([l.property()],P.prototype,"iconClass",void 0),t.__decorate([l.property()],P.prototype,"icon",void 0),t.__decorate([l.property()],P.prototype,"label",null),t.__decorate([l.property()],P.prototype,"playSpeedMultiplier",null),t.__decorate([l.property()],P.prototype,"timeSliderSteps",null),t.__decorate([l.property()],P.prototype,"view",null),t.__decorate([l.property({type:c})],P.prototype,"viewModel",void 0),t.__decorate([l.property({type:h,nonNullable:!0})],P.prototype,"visibleElements",void 0),t.__decorate([l.property({cast:e=>"season"===e||"date"===e?e:(s.getLogger(C).warn(`"${e}" is not a valid option. Acceptable values are only "date" or "season". Defaulting to "${S}".`),S)})],P.prototype,"dateOrSeason",void 0),t.__decorate([l.property()],P.prototype,"_timeSlider",void 0),t.__decorate([l.property()],P.prototype,"_useAmPm",null),t.__decorate([l.property()],P.prototype,"_datePicker",void 0),P=t.__decorate([n.subclass(C)],P);const M=[_.globalCss.interactive,_.globalCss.anchor];return P}));
