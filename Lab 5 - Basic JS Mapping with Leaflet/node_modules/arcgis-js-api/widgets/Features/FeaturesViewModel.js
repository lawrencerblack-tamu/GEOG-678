/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
define(["require","../../chunks/tslib.es6","../../geometry","../../Graphic","../../symbols","../../core/arrayUtils","../../core/Error","../../core/Logger","../../core/promiseUtils","../../core/ReactiveSet","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/accessorSupport/decorators/subclass","../../geometry/projection","../../geometry/support/geometryUtils","../../geometry/support/webMercatorUtils","../../layers/Layer","../../layers/LayerConstants","../../symbols/support/symbolUtils","../../views/support/layerViewUtils","../Feature/FeatureViewModel","../Popup/actions","../Popup/actionUtils","../support/AnchorElementViewModel","../support/GoTo","../../symbols/SimpleFillSymbol","../../geometry/Point"],(function(e,t,i,r,s,o,a,n,l,c,u,h,d,p,g,y,_,f,w,F,m,v,b,C,P,E,A,M){"use strict";const L=()=>[b.zoomToFeature.clone()],V=()=>[b.zoomToClusteredFeatures.clone(),b.browseClusteredFeatures.clone()];let S=null;function I(e,t){return"building-scene"===e||"2d"===t&&("map-image"===e||"tile"===e||"imagery"===e||"imagery-tile"===e)}let T=class extends(E.GoToMixin(P)){constructor(t){super(t),this._pendingPromises=new c,this._fetchFeaturesController=null,this._highlightSelectedFeaturePromise=null,this._highlightActiveFeaturePromise=null,this._selectedClusterFeature=null,this._locationScaleHandle=null,this.actions=new b.ActionsCollection,this.activeFeature=null,this.autoCloseEnabled=!1,this.autoOpenEnabled=!0,this.browseClusterEnabled=!1,this.content=null,this.defaultPopupTemplateEnabled=!1,this.featurePage=null,this.featuresPerPage=20,this.featureMenuOpen=!1,this.featureViewModelAbilities=null,this.featureViewModels=[],this.highlightEnabled=!0,this.includeDefaultActions=!0,this.selectedClusterBoundaryFeature=new r({symbol:new A({outline:{width:1.5,color:"cyan"},style:"none"})}),this.title=null,this.updateLocationEnabled=!1,this.view=null,this.visible=!1,this.zoomFactor=4,this.zoomToLocation=null,this._debouncedLocationUpdate=l.debounce((async t=>{const{view:i}=this,r=this.selectedFeature?.geometry?.type,s=this.location??t;if("mesh"!==r&&i&&s&&this.selectedFeature)if("point"!==r)try{const{pendingFeatures:t}=await this._fetchFeaturesWithController({mapPoint:s}),r=(await Promise.all(t)).flat().filter(Boolean);if(!r.length)return;if(r.length!==this.features.length){const e=this._getHighlightLayer(this.selectedFeature),t="imagery"===e?.type?void 0:e&&"objectIdField"in e?e.objectIdField||w.fallbackObjectIDAttribute:null;if(t){const i=this.selectedFeature.getObjectId(),s=r.findIndex((r=>{const s=this._getHighlightLayer(r);return s?.uid===e?.uid&&r.attributes[t]===i}));this.features=r,this.selectedFeatureIndex=s}}const o=r[this.selectedFeatureIndex]?.geometry,a=("mesh"!==o?.type?o:null)??this.selectedFeature.geometry,n=a?g.project(a,i.spatialReference):null;if(!n)return;S||(S=await new Promise(((t,i)=>e(["../../geometry/geometryEngineAsync"],t,i)))),await S.intersects(n,s)||(this.location=(await S.nearestCoordinate(n,s)).coordinate??s)}catch(o){l.isAbortError(o)||n.getLogger(this).error(o)}else this.location=y.getPointFromGeometry(this.selectedFeature.geometry)??s}))}initialize(){this.addHandles([this.on("view-change",(()=>this._autoClose())),u.watch((()=>[this.highlightEnabled,this.selectedFeature,this.visible,this.view]),(()=>this._highlightSelectedFeature())),u.watch((()=>[this.highlightEnabled,this.activeFeature,this.visible,this.view]),(()=>this._highlightActiveFeature())),u.watch((()=>this.view?.animation?.state),(e=>this._animationStateChange(e))),u.watch((()=>this.location),(e=>this._locationChange(e))),u.watch((()=>this.selectedFeature),(e=>this._selectedFeatureChange(e))),u.watch((()=>[this.selectedFeatureIndex,this.featureCount,this.featuresPerPage]),(()=>this._selectedFeatureIndexChange())),u.watch((()=>[this.featurePage,this.selectedFeatureIndex,this.featureCount,this.featuresPerPage,this.featureViewModels]),(()=>this._setGraphicOnFeatureViewModels())),u.watch((()=>this.featureViewModels),(()=>this._featureViewModelsChange())),this.on("trigger-action",(e=>C.triggerAction({event:e,viewModel:this,view:this.view}))),u.when((()=>!this.waitingForResult),(()=>this._waitingForResultChange()),u.sync),u.watch((()=>[this.features,this.view?.map,this.view?.spatialReference,this.view?.timeZone]),(()=>this._updateFeatureVMs())),u.watch((()=>this.view?.scale),(()=>this._viewScaleChange())),u.when((()=>!this.visible),(()=>this.browseClusterEnabled=!1)),u.watch((()=>this.browseClusterEnabled),(e=>e?this.enableClusterBrowsing():this.disableClusterBrowsing()))])}destroy(){this._cancelFetchingFeatures(),this._pendingPromises.clear(),this.browseClusterEnabled=!1,this.view=null,this._locationScaleHandle?.remove(),this._locationScaleHandle=null}get active(){return!(!this.visible||this.waitingForResult)}get allActions(){const e=this._get("allActions")||new b.ActionsCollection;e.removeAll();const{actions:t,defaultActions:i,defaultPopupTemplateEnabled:r,includeDefaultActions:s,selectedFeature:o}=this,a=s?i.concat(t):t,n=o&&("function"==typeof o.getEffectivePopupTemplate&&o.getEffectivePopupTemplate(r)||o.popupTemplate),l=n?.actions,c=n?.overwriteActions?l:l?.concat(a)??a;return c?.filter(Boolean).forEach((t=>e.add(t))),e}get defaultActions(){const e=this._get("defaultActions")||new b.ActionsCollection;return e.removeAll(),e.addMany(C.isClusterFeature(this.selectedFeature)?V():L()),e}get featureCount(){return this.features.length}set features(e){const t=e||[];this._set("features",t);const{pendingPromisesCount:i,promiseCount:r,selectedFeatureIndex:s}=this,o=r&&t.length;o&&i&&-1===s?this.selectedFeatureIndex=0:o&&-1!==s||(this.selectedFeatureIndex=t.length?0:-1)}set location(e){let t=e;const i=this.view?.spatialReference?.isWebMercator,r=e?.spatialReference?.isWGS84;r&&i&&(t=_.geographicToWebMercator(e)),this._set("location",t)}get pendingPromisesCount(){return this._pendingPromises.size}get promiseCount(){return this.promises.length}get promises(){return this._get("promises")||[]}set promises(e){this._pendingPromises.clear(),this.features=[],Array.isArray(e)&&e.length?(this._set("promises",e),(e=e.slice(0)).forEach((e=>this._pendingPromises.add(e))),e.reduce(((e,t)=>e.finally((()=>t.then((e=>{this._pendingPromises.has(t)&&this._updateFeatures(e)})).finally((()=>this._pendingPromises.delete(t))).catch((()=>{}))))),Promise.resolve())):this._set("promises",[])}get selectedFeature(){const{features:e,selectedFeatureIndex:t}=this;if(-1===t)return null;return e[t]||null}get selectedFeatureIndex(){const e=this._get("selectedFeatureIndex");return"number"==typeof e?e:-1}set selectedFeatureIndex(e){const{featureCount:t}=this;e=isNaN(e)||e<-1||!t?-1:(e+t)%t,this.activeFeature=null,this._set("selectedFeatureIndex",e)}get selectedFeatureViewModel(){return this.featureViewModels[this.selectedFeatureIndex]||null}get state(){return this.view?.ready?"ready":"disabled"}get waitingForContents(){return this.featureViewModels.some((e=>e.waitingForContent))}get waitingForResult(){return!(!(!!this._fetchFeaturesController||this.pendingPromisesCount>0)||0!==this.featureCount)}centerAtLocation(){const{view:e}=this,t=C.getSelectedTarget(this);return t&&e?this.callGoTo({target:{target:t,scale:e.scale}}):Promise.reject(new a("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:t,view:e}))}zoomTo(e){return this.callGoTo(e)}clear(){this.set({promises:[],features:[],content:null,title:null,location:null,activeFeature:null})}fetchFeatures(e,t){const{view:i}=this;if(!i||!e)throw new a("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:e,view:i});return i.fetchPopupFeatures(e,{pointerType:t?.event?.pointerType,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:t?.signal})}open(e){const t={updateLocationEnabled:!1,promises:[],fetchFeatures:!1,...e,visible:!0},{fetchFeatures:i}=t;delete t.fetchFeatures,i&&this._setFetchFeaturesPromises(t.location);const r=["actionsMenuOpen","collapsed"];for(const s of r)delete t[s];this.set(t)}triggerAction(e){const t=this.allActions.at(e);t&&!t.disabled&&this.emit("trigger-action",{action:t})}next(){return this.selectedFeatureIndex++,this}previous(){return this.selectedFeatureIndex--,this}disableClusterBrowsing(){C.removeClusteredFeaturesForBrowsing(this),this._clearBrowsedClusterGraphics()}async enableClusterBrowsing(){const{view:e,selectedFeature:t}=this;"2d"===e?.type?C.isClusterFeature(t)?(await C.displayClusterExtent(this),await C.browseAggregateFeatures(this)):n.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.",t):n.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.",t)}handleViewClick(e){this.autoOpenEnabled&&this._fetchFeaturesAndOpen(e)}_animationStateChange(e){this.zoomToLocation||(b.zoomToFeature.disabled="waiting-for-target"===e)}_clearBrowsedClusterGraphics(){const e=[this.selectedClusterBoundaryFeature,this._selectedClusterFeature].filter(o.isSome);this.view?.graphics?.removeMany(e),this._selectedClusterFeature=null,this.selectedClusterBoundaryFeature.geometry=null}_viewScaleChange(){if(C.isClusterFeature(this.selectedFeature))return this.browseClusterEnabled=!1,this.visible=!1,void this.clear();this.browseClusterEnabled&&(this.features=this.selectedFeature?[this.selectedFeature]:[])}_locationChange(e){const{selectedFeature:t,updateLocationEnabled:i}=this;i&&e&&(!t||t.geometry)&&this.centerAtLocation()}_selectedFeatureIndexChange(){this.featurePage=this.featureCount>1?Math.floor(this.selectedFeatureIndex/this.featuresPerPage)+1:null}_featureViewModelsChange(){this.featurePage=this.featureCount>1?1:null}_setGraphicOnFeatureViewModels(){const{features:e,featureCount:t,featurePage:i,featuresPerPage:r,featureViewModels:s}=this;if(null===i)return;const o=((i-1)*r+t)%t,a=o+r;s.slice(o,a).forEach(((t,i)=>{t&&(t.graphic??=e[o+i])}))}async _selectedFeatureChange(e){const{location:t,updateLocationEnabled:i,view:r}=this;if(e&&r){if(this.browseClusterEnabled){if(this._selectedClusterFeature&&(r.graphics.remove(this._selectedClusterFeature),this._selectedClusterFeature=null),C.isClusterFeature(e))return;return e.symbol=await F.getDisplayedSymbol(e),this._selectedClusterFeature=e,void r.graphics.add(this._selectedClusterFeature)}if(e.symbol=await F.getDisplayedSymbol(e),!i&&t||!e.geometry){if(i&&!e.geometry){await this.centerAtLocation();const e=r.center?.clone();e&&(this.location=e)}}else this.location=y.getPointFromGeometry(e.geometry)}}_waitingForResultChange(){!this.featureCount&&this.promises&&(this.visible=!1)}async _setFetchFeaturesPromises(e){const{pendingFeatures:t}=await this._fetchFeaturesWithController({mapPoint:e});this.promises=t}_destroyFeatureVMs(){this.featureViewModels.forEach((e=>e&&!e.destroyed&&e.destroy())),this._set("featureViewModels",[])}_updateFeatureVMs(){const{selectedFeature:e,features:t,featureViewModels:i,view:r}=this;if(C.isClusterFeature(e)||(this.browseClusterEnabled=!1),this._destroyFeatureVMs(),!t?.length)return;const s=i.slice(0),o=[];t.forEach(((t,i)=>{if(!t)return;let a=null;if(s.some(((e,i)=>(e&&e.graphic===t&&(a=e,s.splice(i,1)),!!a))),a)o[i]=a;else{const s=new v({abilities:this.featureViewModelAbilities,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,spatialReference:r?.spatialReference,graphic:t===e?t:null,location:this.location,map:r?.map,view:r});o[i]=s}})),s.forEach((e=>e&&!e.destroyed&&e.destroy())),this._set("featureViewModels",o)}async _getScreenPoint(e,t){const{view:i}=this;await(i?.when());const r=e?.spatialReference,s=i?.spatialReference;return r&&s?(await g.initializeProjection(r,s,null,t),i.toScreen(e)):null}_cancelFetchingFeatures(){const e=this._fetchFeaturesController;e&&e.abort(),this._fetchFeaturesController=null}async _projectScreenPointAndFetchFeatures({mapPoint:e,screenPoint:t,event:i,signal:r}){return this.fetchFeatures(t??await this._getScreenPoint(e??this.location,{signal:r}),{signal:r,event:i})}_fetchFeaturesWithController({mapPoint:e,screenPoint:t,event:i}){this._cancelFetchingFeatures();const r=new AbortController,{signal:s}=r;this._fetchFeaturesController=r;const o=this._projectScreenPointAndFetchFeatures({mapPoint:e,screenPoint:t,signal:s,event:i});return o.catch((()=>{})).then((()=>{this._fetchFeaturesController=null})),o}async _fetchFeaturesAndOpen(e){const{mapPoint:t,screenPoint:i}=e,{view:r}=this;this._locationScaleHandle?.remove(),this._locationScaleHandle=u.watch((()=>this.view?.scale),(()=>this._debouncedLocationUpdate(t).catch((e=>{l.isAbortError(e)||n.getLogger(this).error(e)}))));const{pendingFeatures:s}=await this._fetchFeaturesWithController({mapPoint:t,screenPoint:i,event:e});r?.popup&&"open"in r.popup&&r.popup.open({location:t??void 0,promises:s})}_autoClose(){this.autoCloseEnabled&&(this.visible=!1)}async _getLayerView(e,t){return await e.when(),e.whenLayerView(t)}_getHighlightLayer(e){const{layer:t,sourceLayer:i}=e;return i&&"layer"in i&&i.layer?i.layer:"map-notes"===i?.type||"subtype-group"===i?.type?i:t}_getHighlightTarget(e,t,i){if(I(t.type,i))return e;const r=e.getObjectId();if(null!=r)return r;const s="imagery"===t.type?void 0:"objectIdField"in t?t.objectIdField||w.fallbackObjectIDAttribute:null,o=e.attributes;return o&&s&&o[s]||e}_mapIncludesLayer(e){return!!this.view?.map?.allLayers?.includes(e)}async _highlightActiveFeature(){const e="highlight-active-feature";this.removeHandles(e);const{highlightEnabled:t,view:i,activeFeature:r,visible:s}=this;if(!(r&&i&&t&&s))return;const o=this._getHighlightLayer(r);if(!(o&&o instanceof f&&this._mapIncludesLayer(o)))return;const a=this._getLayerView(i,o);this._highlightActiveFeaturePromise=a;const n=await a;if(!(n&&m.highlightsSupported(n)&&this._highlightActiveFeaturePromise===a&&this.activeFeature&&this.highlightEnabled))return;const l=n.highlight(this._getHighlightTarget(r,o,i.type));this.addHandles(l,e)}async _highlightSelectedFeature(){const e="highlight-selected-feature";this.removeHandles(e);const{selectedFeature:t,highlightEnabled:i,view:r,visible:s}=this;if(!(t&&r&&i&&s))return;const o=this._getHighlightLayer(t);if(!(o&&o instanceof f&&this._mapIncludesLayer(o)))return;const a=this._getLayerView(r,o);this._highlightSelectedFeaturePromise=a;const n=await a;if(!(n&&m.highlightsSupported(n)&&this._highlightSelectedFeaturePromise===a&&this.selectedFeature&&this.highlightEnabled&&this.visible))return;const l=n.highlight(this._getHighlightTarget(t,o,r.type));this.addHandles(l,e)}_updateFeatures(e){const{features:t}=this,i=e.filter((e=>!t.includes(e)));i?.length&&(this.features=t.concat(i))}};t.__decorate([h.property()],T.prototype,"_fetchFeaturesController",void 0),t.__decorate([h.property({type:b.ActionsCollection})],T.prototype,"actions",void 0),t.__decorate([h.property({readOnly:!0})],T.prototype,"active",null),t.__decorate([h.property()],T.prototype,"activeFeature",void 0),t.__decorate([h.property({readOnly:!0})],T.prototype,"allActions",null),t.__decorate([h.property()],T.prototype,"autoCloseEnabled",void 0),t.__decorate([h.property()],T.prototype,"autoOpenEnabled",void 0),t.__decorate([h.property()],T.prototype,"browseClusterEnabled",void 0),t.__decorate([h.property()],T.prototype,"content",void 0),t.__decorate([h.property({type:b.ActionsCollection,readOnly:!0})],T.prototype,"defaultActions",null),t.__decorate([h.property({type:Boolean})],T.prototype,"defaultPopupTemplateEnabled",void 0),t.__decorate([h.property({readOnly:!0})],T.prototype,"featureCount",null),t.__decorate([h.property()],T.prototype,"featurePage",void 0),t.__decorate([h.property({value:[]})],T.prototype,"features",null),t.__decorate([h.property()],T.prototype,"featuresPerPage",void 0),t.__decorate([h.property()],T.prototype,"featureMenuOpen",void 0),t.__decorate([h.property()],T.prototype,"featureViewModelAbilities",void 0),t.__decorate([h.property({readOnly:!0})],T.prototype,"featureViewModels",void 0),t.__decorate([h.property()],T.prototype,"highlightEnabled",void 0),t.__decorate([h.property()],T.prototype,"includeDefaultActions",void 0),t.__decorate([h.property({type:M})],T.prototype,"location",null),t.__decorate([h.property({readOnly:!0})],T.prototype,"pendingPromisesCount",null),t.__decorate([h.property({readOnly:!0})],T.prototype,"promiseCount",null),t.__decorate([h.property()],T.prototype,"promises",null),t.__decorate([h.property({readOnly:!0})],T.prototype,"selectedClusterBoundaryFeature",void 0),t.__decorate([h.property({value:null,readOnly:!0})],T.prototype,"selectedFeature",null),t.__decorate([h.property({value:-1})],T.prototype,"selectedFeatureIndex",null),t.__decorate([h.property({readOnly:!0})],T.prototype,"selectedFeatureViewModel",null),t.__decorate([h.property({readOnly:!0})],T.prototype,"state",null),t.__decorate([h.property()],T.prototype,"title",void 0),t.__decorate([h.property()],T.prototype,"updateLocationEnabled",void 0),t.__decorate([h.property()],T.prototype,"view",void 0),t.__decorate([h.property()],T.prototype,"visible",void 0),t.__decorate([h.property({readOnly:!0})],T.prototype,"waitingForContents",null),t.__decorate([h.property({readOnly:!0})],T.prototype,"waitingForResult",null),t.__decorate([h.property()],T.prototype,"zoomFactor",void 0),t.__decorate([h.property()],T.prototype,"zoomToLocation",void 0),t.__decorate([h.property()],T.prototype,"centerAtLocation",null),T=t.__decorate([p.subclass("esri.widgets.Features.FeaturesViewModel")],T);return T}));
